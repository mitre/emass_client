# eMass Rest Open API specification
---
openapi: 3.0.3
#-------------------------------------------------------------------------------
# I N F O  - API metadata
#-------------------------------------------------------------------------------
info:
  title: Enterprise Mission Assurance Support Service (eMASS)
  description: |
      The Enterprise Mission Assurance Support Service (eMASS) Representational State
      Transfer (REST) Application Programming Interface (API) enables users to perform
      assessments and complete actions associated with system records. 
      
      <strong>Register External Application (that use the eMASS API)</strong></br>
      New users will need to [register](https://nisp.emass.apps.mil/Content/Help/jobaids/eMASS_OT_NewUser_Job_Aid.pdf)
      an API key with the eMASS development team prior to accessing the site for the first time. The eMASS REST API 
      requires a client certificate (SSL/TLS, DoD PKI only). Use the `Registration` endpoint to register the client
      certificate.</br></br>
      
      Every call to the eMASS REST API will require the use of the agreed upon public key certificate and API key. 
      The API key must be provided in the request header for all endpoint calls (api-key). If the service receives
      an untrusted certificate or API key, a 401 error response code will be returned along with an error message.
      
      </br></br>
  
      <strong>Available Request Headers</strong></br>
      <table>
        <tr>
          <th align=left>key</th>
          <th align=left>Example Value</th>
          <th align=left>Description</th>
        </tr>
        <tr>
          <td>`api-key`</td>
          <td>api-key-provided-by-emass</td>
          <td>This API key must be provided in the request header for all endpoint calls</td>
        </tr>
        <tr>
          <td>`user-uid`</td>
          <td>USER.UID.KEY</td>
          <td>This User unique identifier key must be provided in the request header for all PUT, POST, and DELETE endpoint calls</td>
        </tr>
        <tr>
          <td></td><td></td>
          <td>
            Note: For DoD users this is the DoD ID Number (EIDIPI) on their DoD CAC
          </td>
        </tr>
      </table>

      </br><strong>Approve API Client for Actionable Requests</strong></br>
      Users are required to log-in to eMASS and grant permissions for a client to update data
      within eMASS on their behalf. This is only required for actionable requests (PUT, POST,
      DELETE). The Registration Endpoint and all GET requests can be accessed without completing
      this process with the correct permissions. Please note that leaving a field parameter blank
      (for PUT/POST requests) has the potential to clear information in the active eMASS records.

      To establish an account with eMASS and/or acquire an api-key/user-uid, contact one of the listed POC:
  contact:
    name: eMASS Tier III support
    url: 'https://www.dcsa.mil/is/emass/'
    email: disa.meade.id.mbx.emass-tier-iii-support@mail.mil
  version: 'v3.10'

externalDocs:
  description: eMASS New User Registration (requires CAC authentication)
  url: 'https://nisp.emass.apps.mil/Content/Help/jobaids/eMASS_OT_NewUser_Job_Aid.pdf'
#-------------------------------------------------------------------------------
# S E R V E R S - Array of Server Objects which provide connectivity information
#                  to target servers.
#-------------------------------------------------------------------------------
servers:
  - url: "http://localhost:4010"
    description: 'Use a localhost mock server (i.g.: Prism CLI - @stoplight/prism-cli)'
  - url: "https://stoplight.io/mocks/mitre/emasser/32836028"
    description: Use the hosted Prism mock server

#-------------------------------------------------------------------------------
# T A G S - A list of tags used by the specification with additional metadata.
#-------------------------------------------------------------------------------
tags:
  - name: Test
    description: >
      The Test Connection endpoint provides the ability to verify connection to the web service.
  - name: Registration
    description: >
      The Registration endpoint provides the ability to register a certificate & obtain an API-key.
  - name: Systems
    description: |
      The Systems endpoints provide the ability to view system information.

      **Notes**
        - If a system is dual-policy enabled, the returned system details default to
          the RMF policy information unless otherwise specified for an individual system.
        - Certain fields are instance specific and may not be returned in GET request.
  - name: System Roles
    description: |
      The System Roles endpoints provides the ability to access user data assigned to systems.

      **Notes:**
      - The endpoint can access three different role categories: PAC, CAC, and Other.
      - If a system is dual-policy enabled, the returned system role information will default
        to the RMF policy information unless otherwise specified.
  - name: Controls
    description: >
      The Controls endpoints provide the ability to view, add, and update
      Security Control information to a system for both the Implementation Plan and
      Risk Assessment.
  - name: Test Results
    description: >
      The Test Results endpoints provide the ability to view and add test results for a
      system's Assessment Procedures (CCIs) which determine Security Control compliance.
  - name: POAM
    description: >
      The POA&Ms endpoints provide the ability to view, add, update, and remove Plan
      of Action and Milestones (POA&M) items and associated milestones for a system.
  - name: Milestones
    description: >
      The Milestones endpoints provide the ability to view, add, update, and remove milestones
      that are associated with Plan of Action and Milestones (POA&M) items for a system.
  - name: Artifacts
    description: >
      The Artifacts endpoints provide the ability to view, add, update, and remove 
      artifacts (supporting documentation/evidence) and associated files for a system.
  - name: Artifacts Export
    description: >
      The Artifacts Export endpoint provides the ability to download artifact files for a system.
  - name: CAC
    description: |
      The Control Approval Chain (CAC) endpoints provide the ability to view the status of
      Security Controls and submit them to the second stage in the Control Approval Chain.

      **Notes:**
      - POST requests will only yield successful results if the Security Control is at the first
        stage of the CAC. If the control is not at the first stage, an error will be returned.      
  - name: PAC
    description: |
      The Package Approval Chain (PAC) endpoints provide the ability to view the status
      of existing workflows and initiate new workflows for a system.
      
      **Notes:**
      - If the indicated system has any active workflows, the response will include 
        information such as the workflow type and the current stage of each workflow.
      - If there are no active workflows, then a null data member will be returned.
  - name: CMMC Assessments
    description: >
      The Cybersecurity Maturity Model Certification (CMMC) Assessments endpoint provides
      the ability to view CMMC assessment information. It is available to CMMC eMASS only.
  - name: Static Code Scans
    description: >
      The Static Code Scans endpoint provides the ability to upload application scan findings
      into a system's assets module. Application findings can also be cleared from the system.
  - name: Workflow Definitions
    description: >
      The Workflow Definitions endpoint provides the ability to view all workflow schemas 
      available on the eMASS instance. Every transition for each workflow stage is included.
  - name: Workflow Instances
    description: >
      The Workflow Instances endpoint provides the ability to view detailed information
      on all active and historical workflows for an eMASS instance.
  - name: Cloud Resource Results
    description: >
      The Cloud Resource Results endpoint provides the ability to add, update, and 
      remove cloud resources and their scan results in the assets module for a system.
  - name: Container Scan Results
    description: >
      The Container Scan Results endpoint provides the ability to add, update, and
      remove containers and their scan results in the assets module for a system.
  - name: Dashboards
    description: |
      The Dashboards endpoints provide the ability to view data contained in dashboard exports.
      In the eMASS frontend, these dashboard exports are generated as Excel exports.
      
      Each dashboard dataset available from the API is automatically updated with the current
      configuration of the dashboard and the instance of eMASS as the dashboard changes.
      
      Organization-specific fields may differ. Organization-specific Dashboards should only be
      used by that organization (e.g., VA [dashboard name] should be used by VA).

#-------------------------------------------------------------------------------
# P A T H S - The available paths and operations for the API endpoints
#-------------------------------------------------------------------------------
paths:
  #----------------------------------------------------------------------------
  # Test endpoint
  #----------------------------------------------------------------------------
  /api:
    get:
      tags:
        - Test
      summary: "Test connection to the API"
      description: "Tests the endpoint connection"
      operationId: testConnection
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Test"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"
  #----------------------------------------------------------------------------
  # Register endpoint
  #----------------------------------------------------------------------------
  /api/api-key:
    post:
      tags:
        - Registration
      summary: "Register user certificate and obtain an API key"
      description: "Returns the API Key (api-key) that must be provided in the request header for all endpoint calls."
      operationId: registerUser
      # requestBody:
      #   description: "Register certificate provided by eMASS."
      #   content:
      #     application/json:
      #       schema:
      #         "$ref": "#/components/schemas/RegisterUserRequestPostBody"
      #   required: true
      responses:
        '200':
          description: "Request has succeeded"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Register"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # Systems endpoint
  #----------------------------------------------------------------------------
  /api/systems:
    get:
      tags:
        - Systems
      summary: "Get system information"
      description: "Returns all system(s) that match the query parameters"
      operationId: getSystems
      parameters:
        - $ref: '#/components/parameters/includePackage'
        - $ref: '#/components/parameters/registrationType'
        - $ref: '#/components/parameters/ditprId'
        - $ref: '#/components/parameters/coamsId'
        - $ref: '#/components/parameters/policy'
        - $ref: '#/components/parameters/includeDitprMetrics'
        - $ref: '#/components/parameters/includeDecommissioned'
        - $ref: '#/components/parameters/reportsForScorecard'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SystemsResponse"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  /api/systems/{systemId}: 
    get:
      tags:
        - Systems
      summary: "Get system information for a specific system"
      description: "Returns the system matching provided parameters"
      operationId: getSystem
      parameters:
        - $ref: '#/components/parameters/systemId'
        - $ref: '#/components/parameters/includePackage'
        - $ref: '#/components/parameters/policy'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SystemResponse"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # System Roles endpoint
  #----------------------------------------------------------------------------
  /api/system-roles:
    get:
      tags:
        - System Roles
      summary: "Get available roles"
      description: "Returns all available roles"
      operationId: getSystemRoles
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SystemRolesResponse"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  /api/system-roles/{roleCategory}:
    get:
      tags:
        - System Roles
      summary: "Get system roles"
      description: "Returns the role(s) data matching parameters."
      operationId: getSystemRolesByCategoryId
      parameters:
        - $ref: '#/components/parameters/roleCategory'
        - $ref: '#/components/parameters/role'
        - $ref: '#/components/parameters/policy'
        - $ref: '#/components/parameters/includeDecommissioned'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SystemRolesCategoryResponse"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # Control endpoint
  #----------------------------------------------------------------------------
  /api/systems/{systemId}/controls:
    get:
      tags:
       - Controls
      summary: "Get control information in a system for one or many controls"
      description: |-
          Returns system control information for matching `systemId` path parameter
      operationId: getSystemControls
      parameters:
        - $ref: '#/components/parameters/systemId'
        - $ref: '#/components/parameters/acronyms'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ControlsResponseGet"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

    put:
      tags:
        - Controls
      summary: "Update control information in a system for one or many controls"
      description: |-

        Update a Control for given `systemId`<br>

        **Request Body Required Fields**
        - `acronym`
        - `responsibleEntities`
        - `controlDesignation`
        - `estimatedCompletionDate`
        - `implementationNarrative`

        The following optional fields are required based on the Implementation Status `implementationStatus` value<br>
        | Value                    | Required Fields
        |--------------------------|---------------------------------------------------
        | Planned  or Implemented  | `estimatedCompletionDate`, `responsibleEntities`, `slcmCriticality`, `slcmFrequency`, `slcmMethod`, `slcmReporting`, `slcmTracking`, `slcmComments`
        | Not Applicable           | `naJustification`, `responsibleEntities`
        | Manually Inherited       | `commonControlProvider`, `estimatedCompletionDate`, `responsibleEntities`, `slcmCriticality`, `slcmFrequency`, `slcmMethod`, `slcmReporting`, `slcmTracking`, `slcmComments`
        
        If the Implementation Status `implementationStatus` value is `Inherited`, only the following fields can be updated:
          - `controlDesignation`
          - `commonnControlProvider`
      operationId: updateControlBySystemId
      parameters:
        - $ref: '#/components/parameters/systemId'
      requestBody:
        description: "Update an existing control by Id"
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ControlsRequestPutBody"
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ControlsResponsePut"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # Test Results endpoint
  #----------------------------------------------------------------------------
  /api/systems/{systemId}/test-results:
    get:
      tags:
        - Test Results
      summary: "Get one or many test results in a system"
      description: |-
          Returns system test results information for matching parameters.<br>
      operationId: getSystemTestResults
      parameters:
        - $ref: '#/components/parameters/systemId'
        - $ref: '#/components/parameters/controlAcronyms'
        - $ref: '#/components/parameters/ccis'
        - $ref: '#/components/parameters/latestOnly'
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TestResultsResponseGet"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

    post:
      tags:
        - Test Results
      summary: "Add one or many test results in a system"
      description: |-
        Adds test results for given `systemId`

        **Request Body Required Fields**
        - `cci`
        - `testedBy`
        - `testDate`
        - `description`
        - `complianceStatus`
     
      operationId: addTestResultsBySystemId
      parameters:
        - $ref: '#/components/parameters/systemId'
      requestBody:
        description: "Add test results to a system (systemId)"
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TestResultsRequestPostBody"
        required: true
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TestResultsResponsePost"
        '201':
          description: "Created"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response201"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '411':
          description: "Length Required"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response411"        
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # POA&Ms endpoint
  #----------------------------------------------------------------------------
  /api/systems/{systemId}/poams:
    get:
      tags:
        - POAM
      summary: "Get one or many POA&M items in a system"
      description: "Returns system(s) containing POA&M items for matching parameters."
      operationId: getSystemPoams
      parameters:
        - $ref: '#/components/parameters/systemId'
        - $ref: '#/components/parameters/scheduledCompletionDateStart'
        - $ref: '#/components/parameters/scheduledCompletionDateEnd'
        - $ref: '#/components/parameters/controlAcronyms'
        - $ref: '#/components/parameters/ccis'
        - $ref: '#/components/parameters/systemOnly'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PoamResponseGetSystems"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

    post:
      tags:
        - POAM
      summary: "Add one or many POA&M items in a system"
      description: |-
        Add a POA&M for given `systemId`<br>

        **Request Body Required Fields**
        - `status`
        - `vulnerabilityDescription`
        - `sourceIdentVuln`
        - `pocOrganization`
        - `resources`

        **Note**<br />
        If a POC email is supplied, the application will attempt to locate a user already
        registered within the application and pre-populate any information not explicitly supplied
        in the request. If no such user is found, these fields are **required** within the request.<br>
        `pocFirstName`, `pocLastName`, `pocPhoneNumber`<br />
      operationId: addPoamBySystemId
      parameters:
        - $ref: '#/components/parameters/systemId'
      requestBody:
        description: "Add POA&M(s) to a system (systemID)"
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PoamRequestPostBody"
        required: true
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PoamResponsePost"
        '201':
          description: "Created"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response201"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '411':
          description: "Length Required"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response411"        
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

    put:
      tags:
        - POAM
      summary: "Update one or many POA&M items in a system"
      description: |-
        Update a POA&M for given `systemId`<br>

        **Request Body Required Fields**
        - `poamId`
        - `displayPoamId`
        - `status`
        - `vulnerabilityDescription`
        - `sourceIdentVuln`
        - `pocOrganization`
        - `reviewStatus`

        **Notes**
        - If a POC email is supplied, the application will attempt to locate a user already
          registered within the application and pre-populate any information not explicitly supplied
          in the request. If no such user is found, these fields are **required** within the request.<br>
          `pocOrganization`, `pocFirstName`, `pocLastName`, `pocEmail`, `pocPhoneNumber`<br />

        - To delete a milestone through the POA&M PUT the field `isActive` must be set to `false`: `isActive=false`.
      operationId: updatePoamBySystemId
      parameters:
        - $ref: '#/components/parameters/systemId'
      requestBody:
        description: "Update an existing control by Id"
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PoamRequestPutBody"
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PoamResponsePut"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

    delete:
      tags:
        - POAM
      summary: "Remove one or many POA&M items in a system"
      description: |-
        Remove the POA&M matching `systemId` path parameter and `poamId` Request Body<br>
      operationId: deletePoam
      parameters:
        - $ref: '#/components/parameters/systemId'
      requestBody:
        description: "Delete the given POA&M Id"
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PoamRequestDeleteBody"
        required: true             
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PoamResponseDelete"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  /api/systems/{systemId}/poams/{poamId}:
    get:
      tags:
        - POAM
      summary: "Get POA&M item by ID in a system"
      description: "Returns system(s) containing POA&M items for matching parameters."
      operationId: getSystemPoamsByPoamId
      parameters:
        - $ref: '#/components/parameters/systemId'
        - $ref: '#/components/parameters/poamId'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PoamResponseGetPoams"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # Milestones endpoint
  #----------------------------------------------------------------------------
  /api/systems/{systemId}/poams/{poamId}/milestones:
    get:
      tags:
        - Milestones
      summary: "Get milestones in one or many POA&M items in a system"
      description: |-
          Returns system containing milestones for matching parameters.
      operationId: getSystemMilestonesByPoamId
      parameters:
        - $ref: '#/components/parameters/systemId'
        - $ref: '#/components/parameters/poamId'
        - $ref: '#/components/parameters/scheduledCompletionDateStart'
        - $ref: '#/components/parameters/scheduledCompletionDateEnd'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MilestoneResponseGet"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

    post:
      tags:
        - Milestones
      summary: "Add milestones to one or many POA&M items in a system"
      description: |-
        Adds a milestone for given `systemId` and `poamId` path parameters

        **Request Body Required Fields**
        - `description`
        - `scheduledCompletionDate`

      operationId: addMilestoneBySystemIdAndPoamId
      parameters:
        - $ref: '#/components/parameters/systemId'
        - $ref: '#/components/parameters/poamId'
      requestBody:
        description: "Add milestones to an existing system poam"
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MilestonesRequestPostBody"
        required: true
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MilestoneResponsePost"
        '201':
          description: "Created"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response201"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '411':
          description: "Length Required"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response411"        
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

    put:
      tags:
        - Milestones
      summary: "Update one or many POA&M items in a system"
      description: |-
        Updates a milestone for given `systemId` and `poamId` path parameters

        **Request Body Required Fields**
        - `milestoneId`
        - `description`
        - `scheduledCompletionDate`
      operationId: updateMilestoneBySystemIdAndPoamId
      parameters:
        - $ref: '#/components/parameters/systemId'
        - $ref: '#/components/parameters/poamId'
      requestBody:
        description: "Update milestones for an existing system poam"
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MilestonesRequestPutBody"
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MilestoneResponsePut"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

    delete:
      tags:
        - Milestones
      summary: "Remove milestones in a system for one or many POA&M items"
      description: |-
        Remove the POA&M matching `systemId` and `poamId` for path parameters and `milstoneId` provide in the Requst Body
        
        **Notes**<br>
        To delete a milestone the record must be inactive by having the field isActive set to false (`isActive=false`).
      operationId: deleteMilestone
      parameters:
        - $ref: '#/components/parameters/systemId'
        - $ref: '#/components/parameters/poamId'
      requestBody:
        description: "Delete the given Milestone Id"
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MilestonesRequestDeleteBody"
        required: true 
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MilestonesPutPostDelete"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  /api/systems/{systemId}/poams/{poamId}/milestones/{milestoneId}:
    get:
      tags:
        - Milestones
      summary: "Get milestone by ID in POA&M item in a system"
      description: |-
          Returns systems containing milestones for matching parameters.
      operationId: getSystemMilestonesByPoamIdAndMilestoneId
      parameters:
        - $ref: '#/components/parameters/systemId'
        - $ref: '#/components/parameters/poamId'
        - $ref: '#/components/parameters/milestoneId'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MilestoneResponseGetMilestone"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # Artifacts endpoint
  #----------------------------------------------------------------------------
  /api/systems/{systemId}/artifacts:
    get:
      tags:
        - Artifacts
      summary: "Get one or many artifacts in a system"
      description: |-
          Returns selected artifacts matching parameters to include the file name containing the artifacts.
      operationId: getSystemArtifacts
      parameters:
        - $ref: '#/components/parameters/systemId'
        - $ref: '#/components/parameters/filename'
        - $ref: '#/components/parameters/controlAcronyms'
        - $ref: '#/components/parameters/ccis'
        - $ref: '#/components/parameters/systemOnly'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ArtifactsResponseGet"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"
    
    post:
      tags:
        - Artifacts
      summary: "Add one or many artifacts in a system"
      description: |-
          <strong>Information</strong><br>
          The body of a request through the Artifacts POST endpoint accepts a single binary file. Two 
          Artifact POST methods are currently accepted: individual and bulk. Filename uniqueness within 
          an eMASS system will be enforced by the API for both methods.
          <br><br>
          For POST requests that should result in a single artifact, the request should include the file.
          <br><br>
          For POST requests that should result in the creation of many artifacts, the request should include 
          a single file with the extension ".zip" only and the parameter isBulk should be set to true. This 
          .zip file should contain one or more files corresponding to existing artifacts or new artifacts that 
          will be created upon successful receipt.
          <br><br>
          Upon successful receipt of one or many artifacts, if a file is matched via filename to an artifact 
          existing within the application, the file associated with the artifact will be updated. If no artifact 
          is matched via filename to the application, a new artifact will be created with the following 
          default values. Any values not specified below will be null
          <ul>
            <li>isTemplate: false</li>
            <li>type: Other</li>
            <li>category: Evidence</li>
          </ul>
          To update values other than the file itself, please submit a PUT request.<br>
          
          <strong>Business Rules</strong><br>
          Artifact cannot be saved if the fields below exceed the following character limits:
          <ul>
            <li>Filename - 1,000 characters</li>
            <li>Name - 100 characters</li>
            <li>Description - 10,000 characters</li>
            <li>Reference Page Number - 50 characters</li>
          </ul>
          Artifact cannot be saved if the file does not have an allowable file extension/type:

              .docx,.doc,.txt,.rtf,.xfdl,.xml,.mht,.mh,tml,.html,.htm,.pdf,.mdb,.accdb,.ppt,
              .pptx,.xls,.xlsx,.csv,.log,.jpeg,.jpg,.tiff,.bmp,.tif,.png,.gif,.zip,.rar,.msg,
              .vsd,.vsw,.vdx,.z{#},.ckl,.avi,.vsdx

          Artifact version cannot be saved if an Artifact with the same file name already exist in the system.

          Artifact cannot be saved if the file size exceeds 30MB.

          Artifact cannot be saved if the following fields are missing data:
          <ul>
            <li>Filename</li>
            <li>Type</li>
            <li>Category</li>
          </ul>

          Artifact cannot be saved if the Last Review Date (`lastReviewedDate`) is set in the future.

      operationId: addArtifactsBySystemId
      parameters:
        - $ref: '#/components/parameters/systemId'
        - $ref: '#/components/parameters/isBulk'
      requestBody:
        description: "See `Information` posted above for additional instructions"
        content:
          multipart/form-data:
            schema:
              type: object
              required: [Zipper]
              properties:
                isTemplate:
                  type: boolean
                  example: false 
                type:
                  type: string
                  enum: [Procedure, Diagram, Policy, Labor, Document, Image,Other, Scan Result, Auditor Report]
                  example: "Other"
                category:
                  type: string
                  enum: [Implementation Guidance, Evidence]
                  example: Evidence
                Zipper:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ArtifactsResponsePutPost"
        '201':
          description: "Created"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response201"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '411':
          description: "Length Required"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response411"        
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

    put:
      tags:
        - Artifacts
      summary: "Update one or many artifacts in a system"
      description: |-
        Updates an artifact for given `systemId` path parameter<br><br>

        **Request Body Required Fields**
        - `filename`
        - `isTemplate`
        - `type`
        - `category`

      operationId: updateArtifactBySystemId
      parameters:
        - $ref: '#/components/parameters/systemId'
      requestBody:
        description: "See `information` above for additional instructions"
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ArtifactsRequestPutBody"
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ArtifactsResponsePutPost"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

    delete:
      tags:
        - Artifacts
      summary: "Remove one or many artifacts in a system"
      description: |-
        Remove the Artifact(s) matching `systemId` path parameter and request body artifact(s) file name<br><br>
        <b>Note:</b>
        Multiple files can be deleted by providing multiple file names at the CL (comma delimited)

        Example: --files file1.txt, file2.txt
      operationId: deleteArtifact
      parameters:
        - $ref: '#/components/parameters/systemId'
      requestBody:
        description: "Delete artifact files for the given System Id"
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ArtifactsRequestDeleteBody"
        required: true 
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ArtifactsResponseDel"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # Artifacts Export endpoint
  #----------------------------------------------------------------------------
  /api/systems/{systemId}/artifacts-export:
    get:
      tags:
        - Artifacts Export
      summary: "Get the file of an artifact in a system"
      description: |-
         <strong>Sample Responce</strong><br>
          Binary file associated with given filename.<br>
          If `compress` parameter is specified, zip archive of binary file associated with given filename.
      operationId: getSystemArtifactsExport
      parameters:
        - $ref: '#/components/parameters/systemId'
        - $ref: '#/components/parameters/exportfilename'
        - $ref: '#/components/parameters/compress'
      responses:
        '200':
          description: "Successful retrieved Artifacts file"
          content:
            # text/plain:
            #   schema:
            #     type: string
            #     example: "The requested file contents"
            application/octet-stream:
              schema:
                description: "Artifacts file ready for download"
                type: string
                format: binary
                example: "Binary file content for given filename"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # CAC endpoints
  #----------------------------------------------------------------------------
  /api/systems/{systemId}/approval/cac:
    get:
      tags:
       - CAC
      summary: "Get location of one or many controls in CAC"
      description: |-
          Returns the location of a system's package in the Control Approval Chain (CAC) for matching `systemId` path parameter
      operationId: getSystemCac
      parameters:
        - $ref: '#/components/parameters/systemId'
        - $ref: '#/components/parameters/controlAcronyms'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CacResponseGet"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

    post:
      tags:
        - CAC
      summary: "Submit control to second role of CAC"
      description: |-
        Adds a Control Approval Chain (CAC) for given `systemId` path parameter<br><br>
        POST requests will only yield successful results if the control is currently sitting at the first
        role of the CAC. If the control is not currently sitting at the first role, then an error will be
        returned.
      operationId: addSystemCac
      parameters:
        - $ref: '#/components/parameters/systemId'
      requestBody:
        description: "Add control(s) to second role of CAC"
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CacRequestPostBody"
        required: true
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CacResponsePost"
        '201':
          description: "Created"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response201"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '411':
          description: "Length Required"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response411"        
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # PAC endpoints
  #----------------------------------------------------------------------------
  /api/systems/{systemId}/approval/pac:
    get:
      tags:
       - PAC
      summary: "Get location of system package in PAC"
      description: |-
          Returns the location of a system's package in the Package Approval Chain (PAC)
          for matching `systemId` path parameter
      operationId: getSystemPac
      parameters:
        - $ref: '#/components/parameters/systemId'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PacResponseGet"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

    post:
      tags:
        - PAC
      summary: "Submit system package for review"
      description: |-
        Adds a Package Approval Chain (PAC) for given `systemId` path parameter
      operationId: addSystemPac
      parameters:
        - $ref: "#/components/parameters/systemId"
      requestBody:
        description: "Add system package to PAC for review"
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PacRequestPostBody"
        required: true
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PacResponsePost"
        '201':
          description: "Created"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response201"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '411':
          description: "Length Required"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response411"        
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # CMMC Assessments endpoints
  #----------------------------------------------------------------------------
  /api/cmmc-assessments:
    get:
      tags:
       - CMMC Assessments
      summary: "Get CMMC assessment information"
      description: |-
          Get all CMMC assessment after the given date `sinceDate` parameter. It is available
          to CMMC eMASS only.
      operationId: getCmmcAssessments
      parameters:
        - $ref: '#/components/parameters/sinceDate'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CmmcResponseGet"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # Static Code Scans endpoints
  #----------------------------------------------------------------------------
  /api/systems/{systemId}/static-code-scans:
    post:
      tags:
        - Static Code Scans
      summary: "Upload static code scans or Clear static code scans"
      description: |-
        Upload or clear application scan findings into a system's `systemId` assets module.

        **Note:** To clear an application's findings, use only the field `clearFindings` as
        the Request body and set it to true. Example: 
        ```
        [ 
          { 
            "application": { 
              "applicationName": "Artemis", 
              "version": "Version 5.0" 
            }, 
            "applicationFindings": [ 
              { "clearFindings": true } 
            ] 
          } 
        ]
        ```
      operationId: addStaticCodeScansBySystemId
      parameters:
        - $ref: "#/components/parameters/systemId"
      requestBody:
        description: "Add static code scans or Clear static code scans"
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/StaticCodeRequestPostBody"
        required: true
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StaticCodeResponsePost"
        '201':
          description: "Created"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response201"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '411':
          description: "Length Required"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response411"        
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # Workflow Definitions endpoints
  #----------------------------------------------------------------------------
  /api/workflows/definitions:
    get:
      tags:
       - Workflow Definitions
      summary: "Get workflow definitions in a site"
      description: |-
          View all workflow schemas available on the eMASS instance filtered by 
          status `includeInactive` and registration type `registrationType`.
      operationId: getWorkflowDefinitions
      parameters:
        - $ref: '#/components/parameters/includeInactive'
        - $ref: '#/components/parameters/registrationType'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WorkflowDefinitionResponseGet"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # Workflow Instances endpoints
  #----------------------------------------------------------------------------
  /api/workflows/instances:
    get:
      tags:
       - Workflow Instances
      summary: "Get workflow instances in a site"
      description: |-
        View detailed information on all active and historical workflows filtered by provided parameters.
      operationId: getSystemWorkflowInstances
      parameters:
        - $ref: '#/components/parameters/includeComments'
        - $ref: '#/components/parameters/workFlowPageIndex'
        - $ref: '#/components/parameters/optionalSinceDate'
        - $ref: '#/components/parameters/status'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WorkflowInstancesResponseGet"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  /api/workflows/instances/{workflowInstanceId}:
    get:
      tags:
       - Workflow Instances
      summary: "Get workflow instance by ID"
      description: |-
        View detailed historical workflow information for `workflowInstanceId`.
      operationId: getSystemWorkflowInstancesByWorkflowInstanceId
      parameters:
        - $ref: '#/components/parameters/workflowInstanceId'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WorkflowInstanceResponseGet"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # Cloud Resource Results endpoints
  #----------------------------------------------------------------------------
  /api/systems/{systemId}/cloud-resource-results:
    post:
      tags:
        - Cloud Resource Results
      summary: "Add one or many cloud resources and their scan results"
      description: |-
        Add cloud resources and their scan results in the assets module for a system `systemId`
      operationId: addCloudResourcesBySystemId
      parameters:
        - $ref: "#/components/parameters/systemId"
      requestBody:
        description: "Add cloud resources and their scan results"
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CloudResourcesRequestPostBody"
        required: true
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CloudResourcesResponsePost"
        '201':
          description: "Created"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response201"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '411':
          description: "Length Required"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response411"        
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # Container Scan Results endpoints
  #----------------------------------------------------------------------------
  /api/systems/{systemId}/container-scan-results:
    post:
      tags:
        - Container Scan Results
      summary: "Add one or many containers and their scan results"
      description: |-
        Add containers and their scan results in the assets module for a system `systemId`.
      operationId: addContainerSansBySystemId
      parameters:
        - $ref: "#/components/parameters/systemId"
      requestBody:
        description: "Add containers and their scan results"
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ContainersRequestPostBody"
        required: true
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContainersResponsePost"
        '201':
          description: "Created"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response201"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '411':
          description: "Length Required"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response411"        
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #---------------------------------------------------------------------------#
  #                           D A S H B O A R D S                             #
  #---------------------------------------------------------------------------#

  #----------------------------------------------------------------------------
  # System Status Dashboards
  #----------------------------------------------------------------------------
  /api/dashboards/system-status-details:
    get:
      tags:
       - Dashboards
      summary: "System Status Details"
      description: |-
        Get systems status detail dashboard information.
      operationId: getSystemStatusDetails
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"    

  #----------------------------------------------------------------------------
  # Enterprise Security Controls Dashboards
  #----------------------------------------------------------------------------
  /api/dashboards/system-control-compliance-summary:
    get:
      tags:
       - Dashboards
      summary: "System Control Compliance Summary"
      description: |-
        Get systems control compliance summary dashboard information.
      operationId: getSystemControlComplianceSummary
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  /api/dashboards/system-security-controls-details:
    get:
      tags:
       - Dashboards
      summary: "System Control Compliance Details"
      description: |-
        Get systems security control details dashboard information.
      operationId: getSystemSecurityControlDetails
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  /api/dashboards/system-assessment-procedures-details:
    get:
      tags:
       - Dashboards
      summary: "System Assessment Procedures Details"
      description: |-
        Get systems assessement procdures details dashboard information.
      operationId: getSystemAssessmentProceduresDetails
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # Enterprise POA&M Dashboards
  #----------------------------------------------------------------------------
  /api/dashboards/system-poam-summary:
   get:
      tags:
       - Dashboards
      summary: "System POA&M Summary"
      description: |-
        Get systems POA&Ms summary dashboard information.
      operationId: getSystemPoamSummary
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  /api/dashboards/system-poam-details:
    get:
      tags:
       - Dashboards
      summary: "System POA&M Details"
      description: |-
        Get system POA&Ms details dashboard information.
      operationId: getSystemPoamDetails
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # Enterprise Artifacts Dashboards
  #----------------------------------------------------------------------------
  /api/dashboards/system-artifacts-summary:
    get:
      tags:
       - Dashboards
      summary: "System Artifacts Summary"
      description: |-
        Get system Artifacts summary information.
      operationId: getSystemArtifactsSummary
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  /api/dashboards/system-artifacts-details:
    get:
      tags:
       - Dashboards
      summary: "System Artifacts Details"
      description: |-
        Get system Artifacts details information.
      operationId: getSystemArtifactsDetails
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # Hardware Baseline Dashboards
  #----------------------------------------------------------------------------
  /api/dashboards/system-hardware-summary:
    get:
      tags:
       - Dashboards
      summary: "System Hardware Summary"
      description: |-
        Get system hardware summary dashboard information.
      operationId: getSystemHardwareSummary
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  /api/dashboards/system-hardware-details:
    get:
      tags:
       - Dashboards
      summary: "System Hardware Details"
      description: |-
        Get system hardware details dashboard information.
      operationId: getSystemHardwareDetails
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # Enterprise Sensor-based Hardware Resources Dashboards
  #----------------------------------------------------------------------------
  /api/dashboards/system-sensor-hardware-summary:
    get:
      tags:
       - Dashboards
      summary: "System Sensor Hardware Summary"
      description: |-
        Get system sensor hardware summary dashboard information.
      operationId: getSystemSensorHardwareSummary
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  /api/dashboards/system-sensor-hardware-details:
    get:
      tags:
       - Dashboards
      summary: "System Sensor Hardware Details"
      description: |-
        Get system sensor hardware details dashboard information.
      operationId: getSystemSensorHardwareDetails
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"
  
  #----------------------------------------------------------------------------
  # Software Baseline Dashboards
  #----------------------------------------------------------------------------
  /api/dashboards/system-software-summary:
    get:
      tags:
       - Dashboards
      summary: "System Software Summary"
      description: |-
        Get system software summary dashboard information.
      operationId: getSystemSoftwareSummary
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  /api/dashboards/system-software-details:
    get:
      tags:
       - Dashboards
      summary: "System Software Details"
      description: |-
        Get system software details dashboard information.
      operationId: getSystemSoftwareDetails
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"
  
  #----------------------------------------------------------------------------
  # Ports and Protocols Dashboards
  #----------------------------------------------------------------------------
  /api/dashboards/system-ports-protocols-summary:
    get:
      tags:
       - Dashboards
      summary: "System Ports/Protocols Summary"
      description: |-
        Get system ports and protocols summary dashboard information.
      operationId: getSystemPortsProtocolsSummary
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  /api/dashboards/system-ports-protocols-details:
    get:
      tags:
       - Dashboards
      summary: "System Ports/Protocols Details"
      description: |-
        Get system ports and protocols details dashboard information.
      operationId: getSystemPortsProtocolsDetails
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # System CONMON Integration Status Dashboards
  #----------------------------------------------------------------------------
  /api/dashboards/system-conmon-integration-status-summary:
    get:
      tags:
       - Dashboards
      summary: "System CONMON Integration Status"
      description: |-
        Get system CONMON integration status dashboard information.
      operationId: getSystemCommonIntegrationStatusSummary
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # System Associations Dashboards
  #----------------------------------------------------------------------------
  /api/dashboards/system-associations-details:
    get:
      tags:
       - Dashboards
      summary: "System Associations Details"
      description: |-
        Get system associations details dashboard information.
      operationId: getSystemAssociationsDetails
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # Users Dashboards
  #----------------------------------------------------------------------------
  /api/dashboards/user-system-assignments-details:
    get:
      tags:
       - Dashboards
      summary: "User System Assignments Details"
      description: |-
        Get user system assignments details dashboard information.
      operationId: getUserSystemAssignmentsDetails
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # Privacy Compliance Dashboards
  #----------------------------------------------------------------------------
  /api/dashboards/system-privacy-summary:
    get:
      tags:
       - Dashboards
      summary: "System Privacy Summary"
      description: |-
        Get user system privacy summary dashboard information.
      operationId: getSystemPrivacySummary
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"
  
  /api/dashboards/va-omb-fisma-saop-summary:
    get:
      tags:
       - Dashboards
      summary: "VA OMB FISMA SAOP Summary"
      description: |-
        Get VA OMB-FISMA SAOP summary dashboard information.
      operationId: getVaOmbFsmaSaopSummary
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"
         
  #----------------------------------------------------------------------------
  # System A&A Summary Dashboards
  #----------------------------------------------------------------------------
  /api/dashboards/va-system-aa-summary:
    get:
      tags:
       - Dashboards
      summary: "VA System A&A Summary"
      description: |-
        Get VA system A&A summary dashboard information.
      operationId: getVaSystemAaSummary
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"
  
  #----------------------------------------------------------------------------
  # System A2.0 Summary Dashboards
  #----------------------------------------------------------------------------
  /api/dashboards/va-system-a2-summary:
    get:
      tags:
       - Dashboards
      summary: "VA System A2.0 Summary"
      description: |-
        Get VA system A2.0 summary dashboard information.
      operationId: getVaSystemA2Summary
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # System P.L. 109 Reporting Summary Dashboards
  #----------------------------------------------------------------------------
  /api/dashboards/va-system-pl-109-reporting-summary:
    get:
      tags:
       - Dashboards
      summary: "VA System P.L. 109 Reporting Summary"
      description: |-
        Get VA system P.L. 109 reporting summary dashboard information.
      operationId: getVaSystemPl109ReportingSummary
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # FISMA Inventory Summary Dashboards
  #----------------------------------------------------------------------------
  /api/dashboards/va-system-fisma-inventory-summary:
    get:
      tags:
       - Dashboards
      summary: "VA System FISMA Inventory Summary"
      description: |-
        Get VA system FISMA inventory summary dashboard information.
      operationId: getVaSystemFismaInvetorySummary
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  /api/dashboards/va-system-fisma-inventory-crypto-summary:
    get:
      tags:
       - Dashboards
      summary: "VA System FISMA Inventory Crypto Summary"
      description: |-
        Get VA system FISMA inventory crypto summary dashboard information.
      operationId: getVaSystemFismaInvetoryCryptoSummary
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  #----------------------------------------------------------------------------
  # Threat Risks Dashboards
  #----------------------------------------------------------------------------
  /api/dashboards/va-system-threat-risks-summary:
    get:
      tags:
       - Dashboards
      summary: "VA System Threat Risks Summary"
      description: |-
        Get VA system threat risk summary dashboard information.
      operationId: getVaSystemThreatRiskSummary
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  /api/dashboards/va-system-threat-sources-details:
    get:
      tags:
       - Dashboards
      summary: "VA System Threat Sources Details"
      description: |-
        Get VA system threat source details dashboard information.
      operationId: getVaSystemThreatSourceDetails
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

  /api/dashboards/va-system-threat-architecture-details:
    get:
      tags:
       - Dashboards
      summary: "VA System Threat Architecture Details"
      description: |-
        Get VA system threat architecture details dashboard information.
      operationId: getVaSystemThreatArchitectureDetails
      parameters:
        - $ref: '#/components/parameters/orgId'
        - $ref: '#/components/parameters/dashboardExcludeInherited'
        - $ref: '#/components/parameters/dashboardPageIndex'
        - $ref: '#/components/parameters/dashboardPageSize'
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
               type: object
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response400"          
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response401"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response403"                
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response404"
        '405':
          description: "Method Not Allowed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response405"
        '490':
          description: "API Rule Failed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response490"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response500"

#-------------------------------------------------------------------------------
# C O M P O N E N T S
#-------------------------------------------------------------------------------
components:
  #----------------------------------------------------------------------------
  # Parameters
  #----------------------------------------------------------------------------
  parameters:
    #--------------------------------------------------------------------------
    # Path
    #-------------------------------------------------------------------------=
    roleCategory:
      name: roleCategory
      in: path
      description: "**Role Category**: The system role category been queried"
      required: true
      schema:
        type: string
        enum: ["CAC","PAC","Other"]
        default: "PAC"
    systemId:
      name: systemId
      in: path
      description: "**System Id**: The unique system record identifier."
      required: true
      schema:
        type: integer
        x-faker: random.number
        example: 35
    poamId:
      name: poamId
      in: path
      description: "**POA&M Id**: The unique POA&M record identifier."
      required: true
      schema:
        type: integer
        x-faker: random.number
        example: 45
    milestoneId:
      name: milestoneId
      in: path
      description: "**Milestone Id**: The unique milestone record identifier."
      required: true
      schema:
        type: integer
        x-faker: random.number
        example: 77
    workflowInstanceId:
      name: workflowInstanceId
      in: path
      description: "**Workflow Instance Id**: The unique workflow definition identifier."
      required: true
      schema:
        type: integer
        x-faker: random.number
        example: 123

    #--------------------------------------------------------------------------
    # Query - Required 
    #--------------------------------------------------------------------------
    role:
      name: role
      in: query
      description: "**Role**: Accepts single value from options available at base system-roles endpoint e.g., SCA."
      required: true
      schema:
        type: string
        enum: ["AO","Auditor","Artifact Manager","C&A Team","IAO","ISSO","PM/IAM","SCA","User Rep", "Validator"]
        default: "IAO"
    exportfilename:
      name: filename
      in: query
      required: true
      description: "**File Name**: The file name (to include file-extension)."
      schema:
        type: string
        example: ArtifactsExporFile.pdf
    sinceDate:
      name: sinceDate
      in: query
      required: true
      description: "**Date** CMMC date (Unix date format)"
      schema:
        type: string
        example: "1638764040"
    orgId:
      name: orgId
      in: query
      description: "**Organization Id**: The unique organization identifier."
      required: true
      schema:
        type: integer
        x-faker: random.number
        example: 1       
    #--------------------------------------------------------------------------
    # Query - Optional 
    #--------------------------------------------------------------------------
    includePackage:
      name: includePackage
      in: query
      description: "**Include Package**:  Indicates if additional packages information is retrieved for queried system."
      schema:
        type: boolean
        x-faker: random.boolean
        default: true
    registrationType:
      name: registrationType
      in: query
      description: |
        **Registration Type**: Filter record by selected registration type (single value or comma delimited values).

        *Available values:* assessAndAuthorize, assessOnly, guest, regular,
        functional, cloudServiceProvider, commonControlProvider 
      schema:
        type: string
        default: "regular"
    ditprId:
      name: ditprId
      in: query
      description: "**DITPR ID**: Filter query by DoD Information Technology (IT) Portfolio Repository (DITPR)."
      schema:
        type: string
    coamsId:
      name: coamsId
      in: query
      description: "**COAMS ID**: Filter query by Cyber Operational Attributes Management System (COAMS)."
      schema:
        type: string
    policy:
      name: policy
      in: query
      description: "**System Policy**: Filter query by system policy. If no value is specified and more than one policy is available, the default return is the RMF policy information."
      schema:
        type: string
        enum: ["diacap", "rmf", "reporting"]
        default: "rmf"
    acronyms:
      name: acronyms
      in: query
      description: "**Acronym**: The system acronym(s) being queried (single value or comma delimited values)."
      schema:
        type: string
        default: "PM-6"
    includeDitprMetrics:
      name: includeDitprMetrics
      in: query
      description: |-
        **Include DITPR**: Indicates if DITPR metrics are retrieved. This query string parameter can only be used in conjunction with the following parameters:<br>
          <ul>
            <li>registrationType</li>
            <li>policy</li>
          </ul>
      schema:
        type: boolean
        x-faker: random.boolean
        default: false
    includeDecommissioned:
      name: includeDecommissioned
      in: query
      description: "**Include Decommissioned Systems**: Indicates if decommissioned systems are retrieved. If no value is specified, the default returns true to include decommissioned systems."
      schema:
        type: boolean
        x-faker: random.boolean
        default: true
    reportsForScorecard:
      name: reportsForScorecard
      in: query
      description: "**DoD Cyber Hygiene Scorecard**: Indicates if the system reports to the DoD Cyber Hygiene Scorecard."
      schema:
        type: boolean
        x-faker: random.boolean
        default: true        
    filename:
      name: filename
      in: query
      description: "**File Name**: The file name (to include file-extension)."
      schema:
        type: string
        example: ArtifactsExporFile.pdf
    compress:
      name: compress
      in: query
      description: "**Compress File**: Determines if returned file is compressed."
      schema:
        type: boolean
        x-faker: random.boolean
        default: true
    isBulk:
      name: isBulk
      in: query
      description: |
        **Is Bulk**: If no value is specified, the default is false,
        and an individual artifact file is expected.

        When set to true, a .zip file is expected which 
        can contain multiple artifact files"
      schema:
        type: boolean
        x-faker: random.boolean
        default: false        
    controlAcronyms:
      name: controlAcronyms
      in: query
      description: "**System Acronym**: Filter query by given system acronym (single or comma separated)."
      schema:
        type: string
    ccis:
      name: ccis
      in: query
      description: "**CCI System**: Filter query by Control Correlation Identifiers (CCIs) (single or comma separated)."
      schema:
        type: string
    latestOnly:
      name: latestOnly
      in: query
      description: "**Latest Results Only**: Indicates that only the latest test resultes are retrieved (single or comma separated)."
      schema:
        type: boolean
        x-faker: random.boolean
        default: true
    scheduledCompletionDateStart:
      name: scheduledCompletionDateStart
      in: query
      description: "**Date Started**: Filter query by the scheduled completion start date (Unix date format)."
      schema:
        type: string
    scheduledCompletionDateEnd:
      name: scheduledCompletionDateEnd
      in: query
      description: "**Date Ended**: Filter query by the scheduled completion start date (Unix date format)."
      schema:
        type: string
    systemOnly:
      name: systemOnly
      in: query
      description: "**Systems Only**: Indicates that only system(s) information is retrieved."
      schema:
        type: boolean
        x-faker: random.boolean
        default: true
    description:
      name: description
      in: query
      description: "**Description**: Milestone description information."
      schema:
        type: string
    scheduledCompletionDate:
      name: scheduledCompletionDate
      in: query
      description: "**Completion Date**: Schedule completion date for milestone (Unix date format)."
      schema:
        type: string
    includeInactive:
      name: includeInactive
      in: query
      description: "**Include Inactive**: If no value is specified, the default returns false to not include outdated workflow definitions."
      schema:
        type: boolean
        x-faker: random.boolean
        default: true
    includeComments:
      name: includeComments
      in: query
      description: |
        **Include Comments**: If no value is specified, the default returns true to not include
        transition comments.

        Note: Corresponds to the Comments textbox that is required at most workflow transitions.
        Does not include other text input fields such as Terms / Conditions for Authorization.
      schema:
        type: boolean
        x-faker: random.boolean
        default: true
    workFlowPageIndex:
      name: pageIndex
      in: query
      description: |
        **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.

        **Note:** Pages contain 1000 workflow instances.
      schema:
        type: integer
        default: 0
    optionalSinceDate:
      name: sinceDate
      in: query
      description: |
        **Date**: Filter on authorization/assessment date (Unix date format).

        Note: Filters off the lastEditedDate field.

        Note: The authorization/assessment decisions on completed workflows 
        can be edited for up to 30 days after the initial decision is made.
      schema:
        type: string
        example: "1638764040"
    status:
      name: status
      in: query
      description: |
        **Status**: Filter by status.

        If no value is specified, the default returns all to include both active and inactive workflows.
        
        Note: Any workflows at a current stage of Complete or Cancelled are inactive.
        Ongoing workflows currently at other stages are active.
      schema:
        type: string
        enum: ["active", "inactive", "all"]
        default: "all"
    dashboardExcludeInherited:
      name: excludeinherited
      in: query
      description: |
        **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.
      schema:
        type: boolean
        x-faker: random.boolean
        default: false
    dashboardPageIndex:
      name: pageIndex
      in: query
      description: |
        **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.
      schema:
        type: integer
        default: 0
    dashboardPageSize:
      name: pageSize
      in: query
      description: |
        **Page Size**: If no value is specified, the default returns 20000 per page.
      schema:
        type: integer
        default: 20000        
  #----------------------------------------------------------------------------
  # Schemas
  #----------------------------------------------------------------------------
  schemas:
    #----------------------------------------------------------------------------
    # Request Body examples for (POSTs & PUTs)
    #----------------------------------------------------------------------------
    RegisterUserRequestPostBody:
      required: [user-uid]
      type: object
      properties:
        user-uid:
          type: string
          example: "MY.USERUUID.KEY"
    ControlsRequestPutBody:
      title: Controls Query Body
      type: array
      required:
        - acronym
        - responsibleEntities
        - controlDesignation
        - estimatedCompletionDate
        - implementationNarrative
      additionalProperties: false
      items:
        properties:
          acronym:
            type: string
            description: "[Required] Required to match the NIST SP 800-53 Revision 4."
            example: "AC-3"
          responsibleEntities:
            type: string
            description: "[Required] Include written description of Responsible Entities that are responsible for the Security Control. Character Limit = 2,000."
            example: "Unknown"
          implementationStatus:
            type: string
            description: "[Optional] Implementation Status of the Security Control for the information system."
            example: "Planned"
          commonControlProvider:
            type: string
            description: "[Conditional] Indicate the type of Common Control Provider for an “Inherited” Security Control."
            example: "DoD"
          naJustification:
            type: string
            description: "[Conditional] Provide justification for Security Controls deemed Not Applicable to the system."
            example: "System EOL within 120 days"
          controlDesignation:
            type: string
            description: "[Required] Control designations"
            example: "Common"
          testMethod:
            type: string
            description: "[Optional] Identifies the assessment method / combination that will determine if the security requirements are implemented correctly."
            example: "Test"
          estimatedCompletionDate:
            type: integer
            description: "[Required] Field is required for Implementation Plan."
            example: 1638741660
          implementationNarrative:
            type: string
            description: "[Required] Includes security control comments. Character Limit = 2,000."
            example: "Test Imp. Narrative"
          slcmCriticality:
            type: string
            description: "[Conditional] Criticality of Security Control regarding SLCM. Character Limit = 2,000."
            example: "Test Criticality"
          slcmFrequency:
            type: string
            description: "[Conditional] SLCM frequency"
            example: "Annually"
          slcmMethod:
            type: string
            description: "[Conditional] SLCM method utilized"
            example: "Automated"
          slcmReporting:
            type: string
            description: "[Conditional] Method for reporting Security Control for SLCM. Character Limit = 2,000."
            example: "Test Reporting"
          slcmTracking:
            type: string
            description: "[Conditional] How Non-Compliant Security Controls will be tracked for SLCM. Character Limit = 2,000."
            example: "Test Tracking"
          slcmComments:
            type: string
            description: "[Conditional] Additional comments for Security Control regarding SLCM. Character Limit = 4,000."
            example: "Test SLCM Comments"
          severity:
            type: string
            description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
            example: "Low"
          vulnerabiltySummary:
            type: string
            description: "[Optional] Include vulnerability summary. Character Limit = 2,000."
            example: "Test Vulnerability Summary"
          recommendations:
            type: string
            description: "[Optional] Include recommendations. Character Limit = 2,000."
            example: "Test Recommendations"
          relevanceOfThreat:
            type: string
            description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
            example: "Low"
          likelihood:
            type: string
            description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
            example: "Low"
          impact:
            type: string
            description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
            example: "Low"
          impactDescription:
            type: string
            description: "[Optional] Include description of Security Control's impact."
            example: "Impact text"
          residualRiskLevel:
            type: string
            description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
            example: "Low"
    TestResultsRequestPostBody:
      title: Test Results Query Body
      type: array
      required:
        - cci
        - testedBy
        - testDate
        - description
        - complianceStatus
      additionalProperties: false
      items:
        properties:
          cci:
            type: string
            description: "[Required] CCI associated with test result."
            example: "002108"
          testedBy:
            type: string
            description: "[Required] Last Name, First Name. 100 Characters."
            x-faker: name.findName
            example: "Smith, Joe"
          testDate:
            type: integer
            format: int64
            description: "[Required] Unix time format."
            example: 1638741660
          description:
            type: string
            description: "[Required] Include description of test result. 4000 Characters."
            example: "Test result description"
          complianceStatus:
            type: string
            description: "[Required] Test result compliance status"
            example: "Compliant"
    PoamRequestPostBody:
      title: POAM POST Query Body
      type: array
      required:
        - status
        - vulnerabilityDescription
        - sourceIdentVuln
        - pocOrganization
        - resources
      additionalProperties: false
      items:
        properties:
          # Required fields
          status:
            type: string
            description: "[Required] Values include the following: (Ongoing,Risk Accepted,Completed,Not Applicable"
            example: "Completed"
            enum: ["Ongoing", "Risk Accepted", "Completed", "Not Applicable"]
          vulnerabilityDescription:
            type: string
            description: "[Required] Provide a description of the POA&M Item. 2000 Characters."
            example: "Description text"
          sourceIdentVuln:
            type: string
            description: "[Required] Include Source Identifying Vulnerability text. 2000 Characters."
            example: "Source Indentifying Vulnerability text"
          pocOrganization:
            type: string
            description: "[Required] Organization/Office represented. 100 Characters."
            example: "Army"
          resources:
            type: string
            description: "[Required] List of resources used. 250 Characters."
            example: "Resource text."        
          # Optional/Required fields (REQ based on business rules)
          pocFirstName:
            type: string
            description: "[Required] First name of POC. 100 Characters."
            example: "John"
          pocLastName:
            type: string
            description: "[Required] Last name of POC. 100 Characters."
            example: "Smith"
          pocEmail:
            type: string
            description: "[Required] Email address of POC. 100 Characters."
            example: "smith@ah.com"
          pocPhoneNumber:
            type: string
            description: "[Required] Phone number of POC (area code) ***-**** format. 100 Characters."
            example: "555-555-5555"
          # Optional Fields
          externalUid:
            type: string
            description: "[Optional] Unique identifier external to the eMASS application for use with associating POA&Ms. 100 Characters."
            example: "d6d98b88-c866-4496-9bd4-de7ba48d0f52"
          controlAcronym:
            type: string
            description: "[Optional] Control acronym associated with the POA&M Item. NIST SP 800-53 Revision 4 defined."
            example: "AC-23"
          cci:
            type: string
            description: "[Optional] CCI associated with POA&M."
            example: "000132"
          securityChecks:
            type: string
            description: "[Optional] Security Checks that are associated with the POA&M."
            example: "SV-25123r1_rule,2016-A-0279"
          rawSeverity:
            type: string
            description: "[Optional] Values include the following options (I,II,III)"
            example: "I"
            enum: ["I", "II", "III"]
          relevanceOfThreat:
            type: string
            description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
            example: "Low"
            enum: ["Very Low", "Low", "Moderate", "High", "Very High"]
          likelihood:
            type: string
            description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
            example: "Low"
            enum: ["Very Low", "Low", "Moderate", "High", "Very High"]
          impact:
            type: string
            description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
            example: "Low"
            enum: ["Very Low", "Low", "Moderate", "High", "Very High"]
          impactDescription:
            type: string
            description: "[Optional] Include description of Security Control’s impact."
            example: "Impact text"
          residualRiskLevel:
            type: string
            description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
            example: "Low"
            enum: ["Very Low", "Low", "Moderate", "High", "Very High"]
          recommendations:
            type: string
            description: "[Optional] Include recommendations. Character Limit = 2,000."
            example: "Recommendations text"        
          mitigation:
            type: string
            description: "[Optional] Include mitigation explanation. 2000 Characters."
            example: "Mitigation text"
          # Conditional Fields
          severity:
            type: string
            description: "[Conditional] Required for approved items. Values include the following options: (Very Low, Low, Moderate,High,Very High)"
            example: "Low"
            enum: ["Very Low", "Low", "Moderate", "High", "Very High"]      
          scheduledCompletionDate:
            type: integer
            format: int64
            nullable: true
            description: "[Conditional] Required for ongoing and completed POA&M items. Unix time format."
            example: 1599644800
          comments:
            type: string
            description: "[Conditional] Field is required for completed and risk accepted POA&M items. 2000 Characters"
            x-faker: random.words
            example: "Comments text."
          completionDate:
            type: integer
            format: int64
            description: "[Conditional] Field is required for completed POA&M items. Unix time format."
            example: 1505916276
          milestones:
              type: array
              items:
                $ref: "#/components/schemas/MilestonesRequiredPost"      
    PoamRequestPutBody:
      title: POAM PUT Query Body
      type: array
      required:
        - poamId
        - displayPoamId
        - status
        - vulnerabilityDescription
        - sourceIdentVuln
        - pocOrganization
        - reviewStatus
      additionalProperties: false
      items:
        properties:
          # Required fields
          poamId:
            type: integer
            format: int64
            description: "[Required] Unique item identifier"
            example: 45
          displayPoamId:
            type: integer
            format: int64
            description: "[Required] Globally unique identifier for individual POA&M Items, seen on the front-end as “ID”."
            example: 100000010
          status:
            type: string
            description: "[Required] The POA&M status"
            example: "Completed"
            enum: ["Ongoing","Risk Accepted","Completed","Not Applicable"]
          vulnerabilityDescription:
            type: string
            description: "[Required] Provide a description of the POA&M Item. 2000 Characters."
            x-faker: random.words
            example: "Description text"
          sourceIdentVuln:
            type: string
            description: "[Required] Include Source Identifying Vulnerability text. 2000 Characters."
            x-faker: random.words
            example: "Source Indentifying Vulnerability text"
          pocOrganization:
            type: string
            description: "[Required] Organization/Office represented. 100 Characters."
            x-faker: company.companyName
            example: "Army"          
          resources:
            type: string
            description: "[Required] List of resources used. 250 Characters."
            x-faker: random.words
            example: "Resource text."
          # Optional Fields
          externalUid:
            type: string
            description: "[Optional] Unique identifier external to the eMASS application for use with associating POA&Ms. 100 Characters."
            example: "d6d98b88-c866-4496-9bd4-de7ba48d0f52"
          controlAcronym:
            type: string
            description: "[Optional] Control acronym associated with the POA&M Item. NIST SP 800-53 Revision 4 defined."
            example: “AC-3”
          cci:
            type: string
            description: "CCI associated with POA&M."
            example: "000002"        
          securityChecks:
            type: string
            description: "[Optional] Security Checks that are associated with the POA&M."
            x-faker: random.words
            example: "SV-25123r1_rule,2016-A-0279"
          rawSeverity:
            type: string
            description: "[Optional] Values include the following options (I,II,III)"
            example: "I"
          relevanceOfThreat:
            type: string
            description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
            example: "Low"
          likelihood:
            type: string
            description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
            example: "Low"
          impact:
            type: string
            description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
            example: "Low"
          impactDescription:
            type: string
            description: "[Optional] Include description of Security Control's impact."
            x-faker: random.words
            example: "Impact text"
          residualRiskLevel:
            type: string
            description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
            example: "Low"
          recommendations:
            type: string
            description: "[Optional] Include recommendations. Character Limit = 2,000."
            x-faker: random.words
            example: "Recommendations text"        
          mitigation:
            type: string
            description: "[Optional] Include mitigation explanation. 2000 Characters."
            x-faker: random.words
            example: "Mitigation text"
          # Conditional Fields
          pocFirstName:
            type: string
            description: "[Conditional] First name of POC. 100 Characters."
            x-faker: name.firstName
            example: "John"
          pocLastName:
            type: string
            description: "[Conditional] Last name of POC. 100 Characters."
            x-faker: name.lastName
            example: "Smith"
          pocEmail:
            type: string
            description: "[Conditional] Email address of POC. 100 Characters."
            x-faker: internet.email
            example: "smith@ah.com"
          pocPhoneNumber:
            type: string
            description: "[Conditional] Phone number of POC (area code) ***-**** format. 100 Characters."
            x-faker: phone.phoneNumber.email
            example: "555-555-5555"
          severity:
            type: string
            description: "[Conditional] Required for approved items. Values include the following options: (Very Low, Low, Moderate,High,Very High)"
            example: "Low"
          scheduledCompletionDate:
            type: integer
            format: int64
            nullable: true
            description: "[Conditional] Required for ongoing and completed POA&M items. Unix time format."
            example: 1599644800
          completionDate:
            type: integer
            format: int64
            description: "[Conditional] Field is required for completed POA&M items. Unix time format."
            example: 1505916276
          comments:
            type: string
            description: "[Conditional] Field is required for completed and risk accepted POA&M items. 2000 Characters"
            x-faker: random.words
            example: "Comments text."
          isActive:
            type: boolean
            description: "[Conditional] Optionally used in PUT to delete milestones when updating a POA&M."
            x-faker: random.boolean
            example: true   
          milestones:
              type: array
              items:
                $ref: "#/components/schemas/MilestonesRequiredPut"
    MilestonesRequestPostBody:
      title: Milestones POST Query Body
      type: array
      required:
        - poamId
        - description
        - scheduledCompletionDate      
      additionalProperties: false
      items:
        properties:
          description:
            type: string
            description: "[Required] Provide a description of the milestone."
            x-faker: random.words
            example: "Description text"
          scheduledCompletionDate:
            type: integer
            format: int64
            description: "[Required] Unix date format."
            example: 1599644800
    MilestonesRequestPutBody:
      title: Milestones PUT Query Body
      type: array
      required:
        - milestoneId
        - description
        - scheduledCompletionDate        
      additionalProperties: false
      items:
        properties:
          milestoneId:
            type: integer
            format: int64
            description: "[Required] Unique milestone identifier."
            example: 19
          description:
            type: string
            description: "[Required] Provide a description of the milestone."
            x-faker: random.words
            example: "Description text"
          scheduledCompletionDate:
            type: integer
            format: int64
            description: "[Required] Unix date format."
            example: 1599644800
    ArtifactsRequestPutBody:
      title: Artifacts PUT Query Body
      type: array
      required:
        - filename
        - isTemplate
        - type
        - category
      additionalProperties: false
      items:
        properties:
          # Required fields
          filename:
            type: string
            description: "[Required] File name should match exactly one file within the provided zip file. 1000 Characters."
            example: "AutorizationGuidance.pdf"
          isTemplate:
            type: boolean
            description: "[Required] Indicates it is an artifact template."
            example: false
          type:
            type: string
            description: "[Required] Artifact type options"
            example: "Policy"
          category:
            type: string
            description: "[Required] Artifact category options"
            example: "Change Request"
          # Optional fields
          name: 
            type: string
            description: "[Optional] Artifact name. Character Limit = 100."
            nullable: true
            x-faker: random.word
            example: "E-Authentication Assessment"
          description:
            type: string
            description: "[Optional] Artifact description. 10,000 Characters."
            example: "Artifact description text"        
          referencePageNumber:
            type: string
            description: "[Optional] Artifact reference page number. 50 Characters."
            example: "Reference page number"
          ccis:
            type: string
            description: "[Optional] CCI associated with test result."
            example: "000002"                
          controls:
            type: string
            nullable: true
            description: "[Optional] Control acronym associated with the artifact. NIST SP 800-53 Revision 4 defined."
            example: "AC-8,AC-2(4)"     
          expirationDate:
            type: integer
            format: int64
            nullable: true
            description: "[Optional] Date Artifact expires and requires review. In Unix Date format."
            example: 1549036928
          lastReviewedDate:
            type: integer
            format: int64
            nullable: true
            description: "[Optional] Date Artifact was last reviewed. Unix time format."
            example: 1549036928
          signedDate:
            type: integer
            format: int64
            nullable: true
            description: "[Optional] Date artifact was signed. Unix time format."
            example: 1549036928
    CacRequestPostBody:
      title: CAC POST Query Body
      type: array
      additionalProperties: false
      items:
        properties:
          controlAcronym:
            type: string
            description: "[Required] System acronym name."
            example: "AC-3"
          comments:
            type: string
            description: "[Conditional] Control Approval Chain comments - 2000 Characters."
            example: "Control Approval Chain comments text."
    PacRequestPostBody:
      title: PAC POST Query Body
      type: array
      additionalProperties: false
      items:
        properties:
          workflow:
            type: string
            description: "[Required] The PAC workflow"
            example: "Assess and Authorize"
          name:
            type: string
            description: "[Required] Package name. 100 Characters."
            example: "Package name text"
          comments:
            type: string
            description: "[Required] Character Limit = 4,000."
            example: "Comments text."      
    StaticCodeRequestPostBody:
      title: Static Code PUT Query Body
      type: object
      additionalProperties: false
      properties:
        application:
          type: object
          properties:
            applicationName:
              type: string
              description: "[Required] Name of the software application that was assessed."
              x-faker: company.companyName
              example: 'Artemis'
            version:
              type: string
              description: "[Required] The version of the application."
              x-faker: system.semver
              example: 'Version 5.0'
        applicationFindings:
          type: array
          items:
            $ref: "#/components/schemas/StaticCodeApplication"      
    CloudResourcesRequestPostBody:
      title: Cloude Resource POST Request Body
      type: array
      additionalProperties: false
      items:
        properties: 
          provider:
            type: string
            description: "[Required] Cloud service provider name"
            example: "azure"
          resourceId:
            type: string
            description: "[Required] Unique identifier/resource namespace for policy compliance result"
            example: "/subscriptions/123456789/sample/resource/namespace/default"
          resourceName:
            type: string
            description: "[Required] Friendly name of Cloud resource"
            example: "Storage Resource"
          resourceType:
            type: string
            description: "[Required] Type of Cloud resource"
            example: "Microsoft.storage.table"
          initiatedBy:
            type: string
            description: "[Optional] Email of POC"
            example: "john.doe.ctr@mail.mil"
          cspAccountId:
            type: string
            description: "[Optional] System/owner's CSP account ID/number"
            example: "123456789"
          cspRegion:
            type: string
            description: "[Optional] CSP region of system"
            example: "useast2"
          isBaseline:
            type: boolean
            description: "[Optional] True/false flag for providing results as baseline. If true, all existing compliance results for the resourceId will be replaced by results in the current call"
            example: true
          tags:
            type: object
            description: "[Optional] Informational tags associated to results for other metadata"
            properties:
              test:
                type: string
                example: "testtag"
          complianceResults:
            type: array
            items:
              properties:
                cspPolicyDefinitionId:
                  type: string
                  description: "[Required] Unique identifier/compliance namespace for CSP/Resource's policy definition/compliance check"
                  example: "/providers/sample/policy/namespace/au11_policy"
                policyDefinitionTitle:
                  type: string
                  description: "[Required] Friendly policy/compliance check title. Recommend short title"
                  example: "AU-11 - Audit Record Retention"
                complianceCheckTimestamp:
                  type: integer
                  format: int64
                  description: "[Optional] Unix date format"
                  example: 1644003780
                isCompliant:
                  type: boolean
                  description: "[Required] Compliance status of the policy for the identified cloud resource"
                  example: false
                control:
                  type: string
                  description: "[Optional] Comma separated correlation to Security Control (e.g. exact NIST Control acronym)"
                  example: "AU-11"
                assessmentProcedure:
                  type: string
                  description: "[Optional] Comma separated correlation to Assessment Procedure (i.e. CCI number for DoD Control Set)"
                  example: "000167,000168"
                complianceReason:
                  type: string
                  description: "[Optional] Reason/comments for compliance result"
                  example: "retention period not configured"                                                                        
                policyDeploymentName:
                  type: string
                  description: "[Optional] Name of policy deployment"
                  example: "testDeployment"    
                policyDeploymentVersion:
                  type: string
                  description: "[Optional] Version of policy deployment"
                  example: "1.0.0"    
                severity:
                  type: string
                  description: "[Optional] Severity value"
                  example: "High"
                  enum: ["Low" , "Medium", "High", "Critical"]
    ContainersRequestPostBody:
      title: Containers POST Request Body
      type: array
      additionalProperties: false
      items:
        properties:
          containerId:
            type: string
            description: "[Required] Unique identifier of the container"
            example: "command-control"
          containerName:
            type: string
            description: "[Required] Friendly name of the container"
            example: "command-control"
          podName:
            type: string
            description: "[Optional] Name of pod (e.g. Kubernetes pod)"
            example: "command-control-955596ffc"
          podIp:
            type: string
            description: "[Optional] IP address of pod"
            example: "1.1.1.101"
          namespace:
            type: string
            description: "[Optional] Namespace of container in container orchestration (e.g. Kubernetes namespace)"
            example: "command-control"
          time:
            type: integer
            format: int64
            description: "[Required] Datetime of scan/result. Unix date format"
            example: 1648217219
          tags:
            type: object
            description: "[Optional] Informational tags associated to results for other metadata"
            properties:
              test:
                type: string
                example: "testtag"
          benchmarks:
            type: array
            items:
              properties:
                benchmark:
                  type: string
                  description: "[Required] Identifier of the benchmark/grouping of compliance results. (e.g. for STIG results, provide the benchmark id for the STIG technology)"
                  example: "RHEL_8_STIG"
                isBaseline:
                  type: boolean
                  description: "[Optional] True/false flag for providing results as baseline. If true, all existing compliance results for the provided benchmark within the container will be replaced by results in the current call"
                  example: false
                results:
                  type: array
                  items:
                    properties:
                      ruleId:
                        type: string
                        description: "[Required] Identifier for the compliance result, vulnerability, etc. the result is for"
                        example: "SV-230221r743913_rule"
                      status:
                        type: string
                        description: "[Required] Benchmark result status"
                        example: "Pass"
                        enum: ['Pass', 'Fail', 'Other', 'Not Reviewed', 'Not Checked', 'Not Applicable']
                      lastSeen:
                        type: integer
                        format: int64
                        description: "Date last seen, Unix date format"
                        example: 1648217219
                      message:
                        type: string
                        description: "[Optional] Comments for the result"
                        example: "test message"
    #----------------------------------------------------------------------------
    # Request Body supporting fields for (POSTs & PUTs)
    #----------------------------------------------------------------------------
    MilestonesRequiredPost:
      title: Milestones
      type: object
      required:
        - description
        - scheduledCompletionDate  
      additionalProperties: false
      properties:
        description:
          type: string
          description: "[Required] Include milestone description."
          x-faker: random.words
          example: "Description text"
        scheduledCompletionDate:
          type: integer
          format: int64
          description: "[Required] Required for ongoing and completed POA&M items. Unix time format."
          example: 1599644800
    MilestonesRequiredPut:
      title: Milestones
      type: object
      required:
        - milestoneId
        - description
        - scheduledCompletionDate  
      additionalProperties: false
      properties:
        milestoneId:
          type: integer
          format: int64
          description: "[Required] Unique item identifier"
          example: 19
        description:
          type: string
          description: "[Required] Include milestone description."
          x-faker: random.words
          example: "Description text"
        scheduledCompletionDate:
          type: integer
          format: int64
          description: "[Required] Shecdule completion date. Unix time format."
          example: 1599644800
    StaticCodeApplication:
      title: Static Code Application POST object"
      type: object
      additionalProperties: false
      properties:
        rawSeverity:
          type: string
          description: "[Optional] Scan vulnerability ratting"
          enum: [Low, Medium, Moderate, High, Critical]
          example: "Moderate"          
        codeCheckName:
          type: string
          description: "[Required] Name of the software vulnerability or weakness."
          x-faker:
            random.arrayElement: [['Hidden Field', 'Redundant Check', 'Invalid Field', 'Vulnerable Field']]
          example: "Hidden Field"            
        count:
          type: integer
          format: int64
          description: "[Required] Number of instances observed for a specified finding."
          x-faker: random.number
          example: 14
        scanDate:
          type: integer
          format: int64
          description: "[Required] The date of the scan. Unix date format."
          example: 1625070000
        cweId:
          type: string
          description: '[Required] The Common Weakness Enumerator (CWE) identifier.'
          x-faker: number.number
          example: '155'
        clearFindings:
          type: boolean
          description: "[Optional] When used by itself, can clear out all application findings for a single application/version pairing."
          x-faker: random.boolean
          example: false          
    #----------------------------------------------------------------------------
    # Request Body example fields for (DELETE)
    #----------------------------------------------------------------------------
    PoamRequestDeleteBody:
      title: DeletePoams
      type: array
      items:
        type: object
        additionalProperties: false
        properties:
          poamId:
            type: integer
            format: int64
            description: "[Required] Unique item identifier"
            example: 45
    MilestonesRequestDeleteBody:
      title: DeletePoams
      type: array
      items:
        type: object
        additionalProperties: false
        properties:
          milestoneId:
            type: integer
            format: int64
            description: "[Required] Unique item identifier"
            example: 19
    ArtifactsRequestDeleteBody:
      title: DeleteArtifacts
      type: array
      items:
        type: object
        additionalProperties: false
        properties:
          filename:
            type: string
            description: "[Required] File name should match exactly one file within the provided zip file. 1000 Characters."
            x-faker: system.commonFileName
            example: "AutorizationGuidance.pdf"
    #----------------------------------------------------------------------------
    # 200 Responses
    #----------------------------------------------------------------------------
    Test:
      title: "api GET response schema"    
      type: object
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: object
          additionalProperties: false
          properties:
            success:
              type: boolean
              x-faker: random.boolean
              example: true
    Register:
      title: "api-key POST response schema"
      type: object
      properties:
        meta:
           "$ref": "#/components/schemas/Response200"
        data:
          type: object
          additionalProperties: false
          properties:
            apikey:
              type: string
              x-faker: random.uuid
              example: f0126b6b-f232-45c9-a8de-01d5f003deda
    SystemResponse:
      title: "System GET response schema"
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          $ref: "#/components/schemas/Systems"
    SystemsResponse:
      title: "Systems GET response schema"
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: "#/components/schemas/Systems"
    SystemRolesResponse:
      title: "Roles GET response schema"
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            type: object
            properties:
              roleCategory:
                type: string
                x-faker: random.word
                default: "PAC"
              role:
                type: string
                x-faker: random.words
                default: "PM/IAM"
    SystemRolesCategoryResponse:
      title: "Roles by category GET response schema"    
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/RoleCategory"
    ControlsResponseGet:
      title: "Controls GET response schema"      
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ControlsGet'
    ControlsResponsePut:
      title: "Controls PUT response schema"      
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: "#/components/schemas/ControlsPut"
    TestResultsResponseGet:
      title: "Test Results GET response schema"      
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: "#/components/schemas/TestResultsGet"
    TestResultsResponsePost:
      title: "Test Results POST response schema"      
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: "#/components/schemas/TestResultsPost"
    PoamResponseGetSystems:
      title: "POAMS GET 'Systems' response schema"      
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: "#/components/schemas/PoamGet"
    PoamResponseGetPoams:
      title: "POAMS GET 'Poam' response schema"      
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          $ref: "#/components/schemas/PoamGet"            
    PoamResponsePost:
      title: "POAMS POST response schema"        
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: "#/components/schemas/PoamPostPutDel"
    PoamResponsePut:
      title: "POAMS PUT response schema"        
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: "#/components/schemas/PoamPostPutDel"
    PoamResponseDelete:
      title: "POAMS DELETE response schema"      
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: "#/components/schemas/PoamPostPutDel"                 
    MilestoneResponseGet:
      title: "Milestones GET (return array) response schema"      
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: "#/components/schemas/MilestonesGet"
    MilestoneResponseGetMilestone:
      title: "Milestones GET (return object) response schema"      
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          $ref: "#/components/schemas/MilestonesGet"            
    MilestoneResponsePost:
      title: "Milestones POST response schema"        
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: "#/components/schemas/MilestonesPutPostDelete"
    MilestoneResponsePut:
      title: "Milestones PUT response schema"        
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: "#/components/schemas/MilestonesPutPostDelete"
    ArtifactsResponseGet:
      title: "Artifacts GET response schema"        
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactsGet'
    ArtifactsResponseDel:
      title: "Artifacts DELETE response schema"        
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            additionalProperties: false
            properties:
              filename:
                type: string
                description: "[Required] File name should match exactly one file within the provided zip file. 1000 Characters."
                x-faker: system.commonFileName
                example: "AutorizationGuidance.pdf"
              success:
                type: boolean
                x-faker: random.boolean
                example: true
              systemId:
                type: integer
                format: int64
                x-faker: random.number
                example: 35
    ArtifactsResponsePutPost:
      title: "Artifacts POST and PUT response schema"    
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              filename:
                type: string
                description: "[Required] File name should match exactly one file within the provided zip file. 1000 Characters."
                x-faker: system.commonFileName
                example: "AutorizationGuidance.pdf"
              success:
                type: boolean
                x-faker: random.boolean
                example: true
              systemId:
                type: integer
                format: int64
                x-faker: random.number
                example: 35
              errors:
                $ref: '#/components/schemas/Errors'
    CacResponseGet:
      title: "CAC GET response schema"
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: '#/components/schemas/CacGet'
    CacResponsePost:
      title: "CAC POST response schema"
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              controlAcronym:
                type: string
                description: "[Required] System acronym name."
                x-faker:
                  random.arrayElement: [["AC-1", "AC-2","S-1","S-23","SI-16","SI-56","UA-16","SI-4(11)"]]
                example: "AC-3"
              success:
                type: boolean
                x-faker: random.boolean
                example: true
              systemId:
                type: integer
                format: int64
                x-faker: random.number
                example: 35
              errors:
                $ref: '#/components/schemas/Errors'
    PacResponseGet:
      title: "PAC GET response schema"
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/PacGet'
    PacResponsePost:
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: '#/components/schemas/PacPost'
    StaticCodeResponsePost:
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: '#/components/schemas/StaticCodePost'
    CloudResourcesResponsePost: 
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: '#/components/schemas/CloudResourcesPost'
    ContainersResponsePost: 
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: '#/components/schemas/ContainersResourcesPost'    
    CmmcResponseGet:
      title: "CMMC GET response schema"
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: '#/components/schemas/CmmcGet'    
    WorkflowDefinitionResponseGet:
      title: "Workflow Definition GET response schema"
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowDefinitionGet'       
    WorkflowInstancesResponseGet:
      title: "Workflow Instances GET response schema"
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowInstancesGet'
        pagination:
          type: object
          properties:
            totalCount:
              type: integer
              x-faker: random.number
              example: 12
            totalPages:
              type: integer
              x-faker: random.number
              example: 2
            prevPageUrl:
              type: string
              x-faker:
                random.arrayElement: [["https://my.endpoint.url.org/previousPage"]]
              example: "https://my.endpoint.url.org/previousPage"
            nextPageUrl:
              type: string
              x-faker:
                random.arrayElement: [["https://my.endpoint.url.org/nextPage"]]
              example: "https://my.endpoint.url.org/nextPage"
    WorkflowInstanceResponseGet:
      title: "Workflow Instances GET response schema"
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          $ref: '#/components/schemas/WorkflowInstanceGet'
    Success200Response:
      title: "Default success response schema"
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              success:
                type: boolean
                x-faker: random.boolean
                example: true
              errors:
                $ref: '#/components/schemas/Errors'
    Empty200Response:
      type: object
    DashboardMockResponse:
      title: "Dashboards GET mock response"
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/Response200"
        data:
          type: array
          items:
            $ref: "#/components/schemas/MockObject"
        pagination:
          type: object
          properties:
            totalCount: 
              type: integer
              example: 2
            totalPages:
              type: integer
              example: 1
            pageIndex:
              type: integer
              example: 2
            pageSize:
              type: integer
              example: 20000
            prevPageUrl: 
              type: string
              x-faker: internet.url
              example: "https://myfakeurl.reponse.page.com?PreviousPage"
            nextPageUrl:
              type: string
              x-faker: internet.url
              example: "https://myfakeurl.reponse.page.com?NextPage"
    #----------------------------------------------------------------------------
    # Supporting 200 Responses - Endpoint response - returned values
    #----------------------------------------------------------------------------
    Systems:
      title: "Systems - return query from the server for the GET call"
      type: object
      additionalProperties: false
      properties:
        registrationCompletionDate:
          type: integer
          nullable: true
          description: "[Read-Only] Date the system was registered into eMASS."
          example: 1638741770
        systemLifeCycleAcquisitionPhase:
          type: string
          nullable: true
          description: "[Read-Only] Identifies the current System Acquisition Phase for programs of record."
          x-faker: company.bsBuzz
          example: "Pre-Milestone A"
        specialType:
          type: string
          nullable: true
          description: "[Read-Only] Lists applicable tracking indicator(s)."
          x-faker: company.catchPhraseNoun
          example: "Special Type 1"
        specialTypeDescription:
          type: string
          nullable: true
          description: "[Read-Only] Provides a brief reason for any tracking indicator(s) selected."
          x-faker: company.catchPhraseDescriptor
          example: "Test Special Type Description"
        missionPortfolio:
          type: string
          nullable: true
          description: "[Read-Only] Identifies the appropriate portfolio or capability area. Navy only."
          x-faker: hacker.phrase
          example: "Not Applicable"        
        isNNPI:
          type: boolean
          nullable: true
          description: "[Read-Only] Indicates whether Naval Nuclear Propulsion Information (NNPI) is stored, disseminated, or processed through this system. Navy only."
          x-faker: random.boolean
          example: false
        isRBC:
          type: boolean
          nullable: true
          description: "[Read-Only] Indicates whether the system is pursuing an RBC authorization. Navy only."
          x-faker: random.boolean
          example: false
        isWaiver:
          type: boolean
          nullable: true
          description: "[Read-Only] Indicates if the system has a waiver from OPNAV N2N6G (DDCIO(N)) to proceed with a DIACAP accreditation. Navy and DIACAP only."
          x-faker: random.boolean
          example: true
        programOffice:
          type: string
          nullable: true
          description: "[Read-Only] The system record's Program Office. Navy only."
          x-faker: name.jobTitle
          example: "Test Program Office"
        vramId:
          type: string
          nullable: true
          description: "[Read-Only] Vulnerability Remediation Asset Manager (VRAM) identification number. \"N/A\" indicates the system record is not currently registered in VRAM.  Navy only."
          x-faker: system.semver
          example: "12345"           
        systemId:
          type: integer
          format: int64
          description: "[Read-only] Unique system record identifier."
          x-faker: random.number
          example: 33
        policy:
          type: string
          nullable: true
          description: "[Read-only] RMF/DIACAP Policy identifier for the system record."
          example: RMF
          enum: ["RMF", "DIACAP"]
        registrationType:
          type: string
          nullable: true
          description: "[Read-Only] Registration types parameters (assessAndAuthorize, assessOnly, guest, regular, functional, cloudServiceProvider.)"
          enum: ["Assess and Authorize", "Assess Only", "Guest", "Regular", "Functional", "Cloud Service Provider", "Common Control Provider"]
          example: "Assess and Authorize"
        name:
          type: string
          nullable: true
          description: "[Read-only] Name of the system record."
          x-faker: company.companyName
          example: "System XYZ"
        acronym:
          type: string
          nullable: true
          description: "[Read-only] Acronym of the system record."
          x-faker:
            random.arrayElement: [["AC-1", "AC-2","S-1","S-23","SI-16","SI-56","UA-16","SI-4(11)"]]
          example: "PM-6"
        description:
          type: string
          nullable: true
          description: "[Read-only] Description of the system record."
          x-faker: random.words
          example: "This is a test system for the eMASS API documentation"
        instance:
          type: string
          nullable: true
          description: "[Read-Only] Name of the top-level component that owns the system."
          x-faker: company.companySuffix
          example: "Navy"
        owningOrganization:
          type: string
          nullable: true
          description: "[Read-Only] Owning organization of the system record. Values match the eMASS instance Organizational Hierarchy."
          x-faker: company.companyName
          example: "Defense Information Systems Agency"
        secondaryOrganization:
          type: string
          nullable: true
          description: "[Read-only] Secondary organization that owns the system record (i.e. Sub-Organization-level."
          x-faker: company.companyName
          example: "ID31"        
        versionReleaseNo:
          type: string
          nullable: true
          description: "[Read-only] Version/Release Number of system record."
          x-faker: system.semver
          example: "V1"        
        systemType:
          type: string
          nullable: true
          description: "[Read-only] Type of the system record. RMF values include the following options (IS Major Application, IS Enclave, Platform IT System). DIACAP values include the following options (Platform IT Interconnection, AIS Application, Outsourced IT-Based Process (DoD-controlled), Enclave, Outsourced IT-Based Process (service provider shared))"
          enum: ["IS Major Application", "IS Enclave", "Platform IT", "Platform IT System", "Platform IT Interconnection", "AIS Application", "Outsourced IT-Based Process (DoD-controlled)", "Enclave", "Outsourced IT-Based Process (service provider shared)"]
          example: "IS Major Application"
        isNSS:
          type: boolean
          nullable: true
          description: "[Read-only] Is the system record a National Security System?"
          x-faker: random.boolean
          example: true
        isPublicFacing:
          type: boolean
          nullable: true
          description: "[Read-only] Does the system record have a public facing component/presence."
          x-faker: random.boolean
          example: true
        coamsId:
          type: integer
          format: int64
          nullable: true
          description: "[Read-only] Corresponding Cyber Operational Attributes Management System (COAMS) identifier for the system record."
          example: 93054
        isTypeAuthorization:
          type: boolean
          nullable: true
          description: "[Read-only] Identifies if system is a Type Authorization."
          x-faker: random.boolean
          example: true
        ditprId:
          type: string
          description: "[Read-only] DITPR ID of the system record."
          x-faker: system.semver
          example: "30498"
        apmsId:
          type: string
          nullable: true
          description: "[Read-Only] Same field as ditprId but displays as apmsId for Army only."
          x-faker: random.alphaNumeric
          example: "30498"
        vasiId:
          type: string
          nullable: true
          description: "[Read-Only] Same field as ditprId but displays as vasiId for VA only."
          x-faker: random.alphaNumeric
          example: "30498"
        authorizationStatus:
          type: string
          nullable: true
          description: "[Read-only] Authorization Status of the system record."
          x-faker:
            random.arrayElement: [["Authorization to Operate (ATO)", "Authorization to Operate with Conditions (ATO w/Conditions)",
                "Interim Authorization to Test (IATT)","Denied Authorization to Operate (DATO)","Not Yet Authorized",
                "Decommissioned","Authorization to Operate (ATO)","Interim Authorization to Operate (IATO)",
                "Interim Authorization to Test (IATT)","Denied Authorization to Operate (DATO)","Unaccredited","Decommissioned"]]
          example: "Not Yet Authorized"
        authorizationDate:
          type: integer
          nullable: true
          description: "[Read-only] Authorization Date of the system record."
          x-faker: 
            random.number: 1234567890
          example: 1638741660
        authorizationTerminationDate:
          type: integer
          nullable: true
          description: "[Read-only] Authorization Termination Date of the system record."
          example: 1638741660
        authorizationLength:
          type: integer
          nullable: true
          description: "[Read-only] Length of system's Authorization. Calculated based off of Authorization Date & Authorization Termination Date."
          minimum: 28
          maximum: 1825
          example: 365          
        termsForAuth:
          type: string
          nullable: true
          description: "[Read-only] Terms/Conditions for receiving and maintaining the system's Authorization. Assigned by the Authorizing Official."
          x-faker: company.bs
          example: "Terms/Conditions to maintain a valid ATO"
        securityPlanApprovalStatus:
          type: string
          nullable: true
          description: "[Read-only] Status of the approval of the system's RMF Security Plan. Values include the following options (Approved, Denied, Not Yet Approved)."
          enum: ["Approved", "Not Yet Approved", "Denied"]
          example: "Approved"
        securityPlanApprovalDate:
          type: integer
          nullable: true
          description: "[Read-only] Approval date of the system's RMF Security Plan."
          example: 1638741660
        missionCriticality:
          type: string
          nullable: true
          description: "[Read-only] Mission Criticality of the system record."
          x-faker: random.words
          example: "Mission Support (MS)"
        geographicalAssociation:
          type: string
          nullable: true
          description: "[Read-only] Geographical Association of the system record."
          x-faker: random.words
          example: "VA Operated IS"
        systemOwnership:
          type: string
          nullable: true
          description: "[Read-only] Ownership of the system record."
          x-faker: commerce.productName
          example: "Region 1"
        governingMissionArea:
          type: string
          nullable: true
          description: "[Read-only] Governing Mission Area of the system record."
          x-fakes: radom.words
          example: "DoD portion of the Intelligence MA (DIMA)"
        primaryFunctionalArea:
          type: string
          nullable: true
          description: "[Read-only] Primary functional area of the system record."
          x-faker:
            random.arrayElement: [["Allies", "CBRNE", "Civilian Personnel & Readiness", "Command and Control", "Communications", "Communications Security (COMSEC)",
                "Economic", "Environmental Security", "Facilities", "Finance", "Health/Medical", "Human Resources", "Information Management",
                "Inspector General", "Intelligence", "Logistics", "Military Personnel and Readiness", "Nuclear", "Nuclear, Chemical, and Biological",
                "Operations", "Personnel and Readiness", "Procurement/Acquisition", "Reserve Components", "Scientific and Engineering", "Space and Weather",
                "Test and Evaluation", "Trainers", "Weapons", "Legal", "Transportation", "Not Applicable (N/A)", "Integration and Testing"]]
          example: "Health/Medical"
        secondaryFunctionalArea:
          type: string
          nullable: true
          description:  "[Read-only] Secondary functional area of the system record."
          x-faker:
            random.arrayElement: [["Allies", "CBRNE", "Civilian Personnel & Readiness", "Command and Control", "Communications", "Communications Security (COMSEC)",
                "Economic", "Environmental Security", "Facilities", "Finance", "Health/Medical", "Human Resources", "Information Management",
                "Inspector General", "Intelligence", "Logistics", "Military Personnel and Readiness", "Nuclear", "Nuclear, Chemical, and Biological",
                "Operations", "Personnel and Readiness", "Procurement/Acquisition", "Reserve Components", "Scientific and Engineering", "Space and Weather",
                "Test and Evaluation", "Trainers", "Weapons", "Legal", "Transportation", "Not Applicable (N/A)", "Integration and Testing"]]
          example: "Logistics"
        primaryControlSet:
          type: string
          nullable: true
          description: "[Read-only] Primary Control Set of the system record. RMF values include the following options (NIST SP 800-53 Revision 4), DIACAP values include the following options (DoDI 8500.2)"
          enum: ["NIST SP 800-53 Revision 4", "DoDI 8500.2"]
          example: "NIST SP 800-53 Revision 4"
        confidentiality:
          type: string
          nullable: true
          description: "[Read-only] Confidentiality of the system record. RMF values include the following options (High, Moderate, Low)"
          enum: ["High", "Moderate", "Low"]
          example: "Low"
        integrity:
          type: string
          nullable: true
          description: "[Read-only] Integrity of the system record. RMF values include the following options (High, Moderate, Low)"
          enum: ["High", "Moderate", "Low"]
          example: "Moderate"
        availability:
          type: string
          nullable: true
          description: "[Read-only] Availability of the system record. RMF values include the following options (High, Moderate, Low)"
          enum: ["High", "Moderate", "Low"]
          example: "High"
        appliedOverlays:
          type: string
          nullable: true
          description: "[Read-only] Overlays applied to the system record."
          x-faker: random.words
          example: "Classified Information"
        rmfActivity:
          type: string
          nullable: true
          description: "[Read-only] RMF Activity of the system record."
          x-faker:
            random.arrayElement: [["Initiate and plan C&A", "Initiate and plan cybersecurity Assessment Authorization", 
                 "Implement and validate assigned security controls", "Make assessment determination and authorization decision",
                 "Maintain ATO and conduct reviews", "Decommission"]]
          example: "Maintain ATO and conduct reviews"
        crossDomainTicket:
          type: string
          nullable: true
          description: "[Read-only] Cross Domain Tickets of the system record."
          x-faker: random.words
          example: "Cross Domain Ticket test"
        ditprDonId:
          type: string
          nullable: true
          description: "[Read-Only] DITPR-DON identifier of the system record."
          x-faker: random.alphaNumeric
          example: "5910, 1234, 8765"
        mac:
          type: string
          nullable: true
          description: "[Read-Only] MAC level of the system record."
          enum: [ "I", "II", "III"]
          example: "II"
        dodConfidentiality:
          type: string
          nullable: true
          description: "[Read-Only] DoD Confidentiality level of the system record."
          enum: ["Public", "Sensitive", "Classified"]
          example: "Public"
        contingencyPlanTested:
          type: boolean
          nullable: true
          description: "[Read-only] Has the system record's Contingency Plan been tested?"
          x-faker: random.boolean
          example: true
        contingencyPlanTestDate:
          type: integer
          nullable: true
          description: "[Read-only] Date the system record's Contingency Plan was tested."
          example: 1426957321
        securityReviewDate:
          type: integer
          nullable: true
          description: "[Read-only] Date the system record's Annual Security Review was conducted."
          example: 1531958400
        hasOpenPoamItem:
          type: boolean
          nullable: true
          description: "[Read-Only] Does the system record have an Ongoing or Risk Accepted POA&M Item?"
          x-faker: random.boolean
          example: true     
        hasOpenPoamItem90to120PastScheduledCompletionDate:
          type: boolean
          nullable: true
          description: "[Read-Only] Does the system record have an Ongoing or Risk Accepted POA&M Item 90 to 120 days past its Scheduled Completion Date?"
          x-faker: random.boolean
          example: false                 
        hasOpenPoamItem120PlusPastScheudledCompletionDate:
          type: boolean
          nullable: true
          description: "[Read-Only] Does the system record have an Ongoing or Risk Accepted POA&M Item 120 days past its Scheduled Completion Date?"
          x-faker: random.boolean
          example: false          
        impact:
          type: string
          nullable: true
          description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
          enum: ["Low", "Moderate", "High"]
          example: "Low"
        hasCUI:
          type: boolean
          nullable: true
          description: "[Read-only] Does the system record contain and/or process Controlled Unclassified information?"
          x-faker: random.boolean
          example: false  
        hasPII:
          type: boolean
          nullable: true
          description: "[Read-only] Does the system record contain and/or process Personally Identifiable Information?"
          x-faker: random.boolean
          example: false
        hasPHI:
          type: boolean
          nullable: true
          description: "[Read-only] Does the system record contain and/or process Personal Health Information?"
          x-faker: random.boolean
          example: false
        ppsmRegistryNumber:
          type: string
          nullable: true
          description: "[Read-only] Unique identifier for the DoD’s Ports, Protocols, and Services Management Registry system."
          x-faker: random.words
          example: "Test PPSM Registry Number"        
        interconnectedInformationSystemAndIdentifiers:
          type: string
          nullable: true
          description: "[Read-only] Identify the interconnected information systems and corresponding identifiers within control CA-3."
          x-faker: random.word
          example: "Test"    
        isPiaRequired:
          type: boolean
          nullable: true
          description: "[Read-only] Does the system require a Privacy Impact Assessment?"
          x-faker: random.boolean
          example: true
        piaStatus:
          type: string
          nullable: true
          description: "[Read-only] Status of the PIA, availability values include the following options (Not Started, In Progress, Completed)"
          enum: ["Not Started", "In Progress", "Completed"]
          example: "Not Started"
        piaDate:
          type: integer
          nullable: true
          description: "[Read-only] Date in which the system's PIA took place."
          example: 1622048629
        userDefinedField1:
          type: string
          nullable: true
          description: "[Read-only] User-defined field to augment Ad Hoc Reporting."
          x-faker:
            random.arrayElement: [["Test User-defined Field 1","Test User-defined Field 2","Test User-defined Field 3","Test User-defined Field 4","Test User-defined Field 4"]]
          example: "Test User-defined Field 1"
        userDefinedField2:
          type: string
          nullable: true
          description: "[Read-only] User-defined field to augment Ad Hoc Reporting."
          x-faker:
            random.arrayElement: [["Test User-defined Field 1","Test User-defined Field 2","Test User-defined Field 3","Test User-defined Field 4","Test User-defined Field 4"]]
          example: "Test User-defined Field 2"
        userDefinedField3:
          type: string
          nullable: true
          description: "[Read-only] User-defined field to augment Ad Hoc Reporting."
          x-faker:
            random.arrayElement: [["Test User-defined Field 1","Test User-defined Field 2","Test User-defined Field 3","Test User-defined Field 4","Test User-defined Field 4"]]
          example: "Test User-defined Field 3"
        userDefinedField4:
          type: string
          nullable: true
          description: "[Read-only] User-defined field to augment Ad Hoc Reporting."
          x-faker:
            random.arrayElement: [["Test User-defined Field 1","Test User-defined Field 2","Test User-defined Field 3","Test User-defined Field 4","Test User-defined Field 4"]]
          example: "Test User-defined Field 4"
        userDefinedField5:
          type: string
          nullable: true
          description: "[Read-only] User-defined field to augment Ad Hoc Reporting."
          x-faker:
            random.arrayElement: [["Test User-defined Field 1","Test User-defined Field 2","Test User-defined Field 3","Test User-defined Field 4","Test User-defined Field 4"]]
          example: "Test User-defined Field 5"
        currentRmfLifecycleStep:
          type: string
          nullable: true
          description: "[Read-only] Displays the system's current step within the RMF Lifecycle."
          enum: ["1 - Categorize", "2 - Select", "3 - Implement", "4 - Assess", "5 - Authorize", "6 - Monitor"]
          example: "4 - Assess"
        otherInformation:
          type: string
          nullable: true
          description: "[Read-only] Include any additional information required by the organization."
          x-faker: random.words
          example: "Additional Comments"
        reportsForScorecard:
          type: boolean
          nullable: true
          description: "[Read-only] Indicates if the system reports to the DoD Cyber Hygiene Scorecard."
          x-faker: random.boolean
          example: true
        highestSystemDataClassification:
          type: string
          nullable: true
          description: "[Read-Only] The overall classification level of information that the System is approved to collect, process, store, and/or distribute."
          x-faker:
            random.arrayElement: [["Public Trust", "For Official Use Only (FOUO)", "Controlled Unclassified Information (CUI)",
                "Unclassified", "Restricted Data/Formerly Restricted Data", "Sensitive Compartmented Information",
                "Special Access Program", "Secret", "Top Secret", "Confidential"]]
          example: "Unclassified"
        overallClassification:
          type: string
          nullable: true
          description: "[Read-Only] Same field as highestSystemDataClassification, but displays as overallClassification for NISP only."
          x-faker:
            random.arrayElement: [["Public Trust", "For Official Use Only (FOUO)", "Controlled Unclassified Information (CUI)",
                "Unclassified", "Restricted Data/Formerly Restricted Data", "Sensitive Compartmented Information",
                "Special Access Program", "Secret", "Top Secret", "Confidential"]]
          example: "Unclassified"
        isHVA:
          type: boolean
          nullable: true
          description: "[Read-Only] Indicates if the system contains High Value Assets. Does not display if value is null"
          x-faker: random.boolean
          example: true
        isFinancialManagement:
          type: boolean
          nullable: true
          description: |
            [Read-Only] Per OMB Circular A-127, a financial management system includes the core financial systems and the financial portions 
            of mixed systems necessary to support financial management, including automated and manual processes, procedures, and 
            controls, data, hardware, software, and support personnel dedicated to the operation and maintenance of system functions.
            The following are examples of financial management systems: core financial systems, procurement systems, loan systems, grants
            systems, payroll systems, budget formulation systems, billing systems, and travel systems.
          x-faker: random.boolean
          example: true
        isReciprocity:
          type: boolean
          nullable: true
          description: |
            [Read-Only] A reciprocity system is any information system that is part of a mutual agreement among participating
            organizations to accept each other's security assessments in order to reuse information system resources and/or
            to accept each other's assessed security posture in order to share information.
          x-faker: random.boolean
          example: true
        reciprocityExemption:
          type: string
          nullable: true
          description: |
            [Read-Only] The following justifications are acceptable for exemption from reciprocity: (a) the existence of
            the system is classified (not the data, but the existence of the system) or (b) the system's authorization to
            operate is in the process of being pulled (e.g. DATO, Decommission).
          x-faker: random.words
          example: "Decommission"
        cloudComputing:
          type: boolean
          nullable: true
          description: "[Read-Only] Is this a cloud-based IS?"
          x-faker: random.boolean
          example: false
        cloudType:
          type: string
          nullable: true
          description: "[Read-Only] Values include the following: (Hybrid, Private, Public)"
          enum: ["Hybrid", "Private", "Public"]
          example: "Public"
        atcStatus:
          type: string
          nullable: true
          description: |
            [Read-Only] The Authority to Connect decision. Values include the following: 
            (Authority to Connect (ATC), Denial of Authority to Connect (DATC), Not Yet Connected,
            Decommissioned)
          enum: ["Authority to Connect (ATC)", "Denial of Authority to Connect (DATC)", "Not Yet Connected","Decommissioned"]
          example: "Decommissioned"
        isSaaS:
          type: boolean
          nullable: true
          description: "[Read-Only] Software as a Service (SaaS) cloud service model."
          x-faker: random.boolean
          example: true
        isPaaS:
          type: boolean
          nullable: true
          description: "[Read-Only] Platform as a Service (PaaS) cloud service model."
          x-faker: random.boolean
          example: false
        isIaaS:
          type: boolean
          nullable: true
          description: "[Read-Only] Infrastructure as a Service (IaaS) cloud service model."
          x-faker: random.boolean
          example: true
        otherServiceModels:
          type: string
          nullable: true
          description: "[Read-Only] Free text field to include other cloud service models."
          x-faker: random.words
          example: "Test Other Service"
        needDate:
          type: integer
          nullable: true
          description: "[Read-Only] Indicates the date by which the System needs to be deployed to a production environment."
          x-faker: 
            random.number: 1234567890
          example: 1638741660
        overallRiskScore:
          type: string
          nullable: true
          description: "[Read-Only] The overall risk score of the system"
          x-faker: random.word
          example: "Moderate"
        isHRR:
          type: boolean
          nullable: true
          description: "[Read-Only] Identifies whether a System has been designated as High Risk Review. USCG and Navy only."
          x-faker: random.boolean
          example: false
        atcDate:
          type: integer
          nullable: true
          description: "[Read-Only] The Connectivity Authorization Date."
          x-faker: 
            random.number: 1234567890
          example: 1638741660
        atcTerminationDate:
          type: integer
          nullable: true
          description: "[Read-Only] The Connectivity Authorization Termination Date."
          x-faker: 
            random.number: 1234567890
          example: 1638741660
        systemDevelopmentLifeCycle:
          type: string
          nullable: true
          description: "[Read-Only] Indicate the date by which the System needs to be deployed to a production environment. VA only."
          x-faker: random.words
          example: "Test Other Service"
        isFISMAReportable:
          type: boolean
          nullable: true
          description: "[Read-Only] Is this IS reportable per Federal Information Security Management Act (FISMA) established requirements? VA only"
          x-faker: random.boolean
          example: false
        groupTagging:
          type: string
          nullable: true
          description: "[Read-Only] System Tags for enterprise level, to include CIO and CISO, tracking efforts. VA only."
          x-faker:
            random.arrayElement: [["Group Tag 1", "Group Tag 2", "Group Tag 3", "Group Tag 4", "Group Tag 5"]]
          example: "Group Tag 1"
        groupTagDescriptions:
          type: string
          nullable: true
          description: "[Read-Only] System Tag explanation(s) for enterprise level, to include CIO and CISO, tracking efforts. VA only."
          x-faker:
            random.arrayElement: [["Group Tag 1 explanation", "Group Tag 2 explanation", "Group Tag 3 explanation", "Group Tag 4 explanation", "Group Tag 5 explanation"]]
          example: "Group Tag 1 explanation"
        package:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/PacGet"   
        connectivityCcsd:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/ConnectivityCcsd"
    ConnectivityCcsd:
      title: System CCSD Connectivity
      type: object
      additionalProperties: false
      properties:
        ccsdNumber:
          type: string
          nullable: true
          description: "[Read-Only] Identifier for specific connections to the system."
          x-faker: random.word
          example: "CCSD Number"
        connectivity:
          type: string
          nullable: true
          description: "[Read-Only] Choose connection type for the system."
          x-faker: random.word
          example: "Test Connectivity"          
    RoleCategory:
      title: System Roles Gategories
      type: object
      additionalProperties: false
      properties:
        systemId:
          type: integer
          format: int64
          description: "[Read-only] Unique system record identifier."
          x-faker: random.number
          example: 35
        systemName:
          type: string
          nullable: true
          description: "[Read-only] Name of the system record."
          x-faker: company.companyName
          example: "eMASS API Example System"
        systemAcronym:
          type: string
          nullable: true
          description: "[Read-only] Acronym of the system record."
          x-faker:
            random.arrayElement: [["AC-1", "AC-2","S-1","S-23","SI-16","SI-56","UA-16","SI-4(11)"]]
          example: "S-XYZ"
        roles:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Roles"
    Roles:
      title: System Role
      type: object
      additionalProperties: false
      properties:
        roleCategory:
          type: string
          description: "[Required] System role categories"
          example: "PAC"
          x-faker:
            random.arrayElement: [["CAC", "PAC","Other"]]
        role:
          type: string
          description: "[Required] System role description"
          example: "AO"
          x-faker:
            random.arrayElement: [["PM/IAM", "SCA", "AO", "ISSO", "IAO", "Validator (IV&V)", "User Rep (View Only)", "Auditor", "Artifact Manager","C&A Team"]]
        users:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Users"
    Users:
      title: System role users
      type: object
      additionalProperties: false
      properties:
        firstName:
          type: string
          x-faker: name.firstName
          example: "John"
        lastName:
          type: string
          x-faker: name.lastName
          example: "Smith"
        email:
          type: string
          format: email
          x-faker: internet.email
          example: "John.Smith@hb.com"
    ControlsGet:
      title: Controls - server returned data from the GET call
      type: object
      additionalProperties: false
      properties:
        systemId:
          type: integer
          format: int64
          description: "[Required] Unique system record identifier."
          x-faker: random.number
          example: 35
        name:
          type: string
          nullable: true
          description: "[Read-only] Name of the system record."
          x-faker: company.bs
          example: "System XYZ"
        acronym:
          type: string
          description: "[Required] Acronym of the system record."
          example: "AC-3"
          x-faker:
            random.arrayElement: [["AC-1", "AC-2","S-1","S-23","SI-16","SI-56","UA-16","SI-4(11)"]]          
        ccis:
          type: string
          nullable: true
          description: "[Read-only] Comma separated list of CCIs associated with the control."
          example: "000001,000002"
          x-faker:
            random.arrayElement: [["000012,000045", "000005","000125,000145","000063,000451,000254","000852","001234,002115","000155"]]            
        isInherited:
          type: boolean
          nullable: true
          description: "[Read-only] Indicates whether a control is inherited."
          x-faker: random.boolean
          example: true
        modifiedByOverlays:
          type: string
          nullable: true
          description: "[Read-only] List of overlays that affect the control."
          example: "Requirements"
          enum: ["Privacy", "Requirements", "Concurrency"]
        includedStatus:
          type: string
          nullable: true
          description: "[Read-only] Indicates the manner by which a control was included in the system’s categorization."
          example: "Manually"
        complianceStatus:
          type: string
          nullable: true
          description: "[Read-only] Compliance of the control."
          x-faker: random.word
          example: "Status"
        responsibleEntities:
          type: string
          description: "[Required] Include written description of Responsible Entities that are responsible for the Security Control. Character Limit = 2,000."
          example: "Unknown"
        implementationStatus:
          type: string
          nullable: true
          description: "[Optional] Implementation Status of the Security Control for the information system."
          example: "Planned"
          enum: ["Planned", "Implemented", "Inherited", "Not Applicable", "Manually Inherited"]
        commonControlProvider:
          type: string
          nullable: true
          description: "[Conditional] Indicate the type of Common Control Provider for an “Inherited” Security Control."
          example: "DoD"
          enum: ["DoD", "Component", "Enclave"]
        naJustification:
          type: string
          nullable: true
          description: "[Conditional] Provide justification for Security Controls deemed Not Applicable to the system."
          example: "System EOL within 120 days"
        controlDesignation:
          type: string
          description: "[Required] Control designations"
          example: "Common"
          enum: ["Common", "System-Specific", "Hybrid"]
        estimatedCompletionDate:
          type: integer
          description: "[Required] Field is required for Implementation Plan."
          example: 1638741660
        implementationNarrative:
          type: string
          description: "[Required] Includes security control comments. Character Limit = 2,000."
          x-faker: random.words
          example: "Test Imp. Narrative"
        slcmCriticality:
          type: string
          nullable: true
          description: "[Conditional] Criticality of Security Control regarding SLCM. Character Limit = 2,000."
          x-faker: random.word
          example: "Test Criticality"
        slcmFrequency:
          type: string
          nullable: true
          description: "[Conditional] SLCM frequency"
          example: "Annually"
          enum: ["Constantly", "Daily", "Weekly", "Monthly", "Quarterly", "Semi-Annually", "Annually", "Every Two Years", "Every Three Years", "Undetermined"]
        slcmMethod:
          type: string
          nullable: true
          description: "[Conditional] SLCM method utilized"
          example: "Automated"
          enum: ["Automated", "Semi-Automated", "Manual", "Undetermined"]
        slcmReporting:
          type: string
          nullable: true
          description: "[Conditional] Method for reporting Security Control for SLCM. Character Limit = 2,000."
          x-faker: random.word
          example: "Test Reporting"
        slcmTracking:
          type: string
          nullable: true
          description: "[Conditional] How Non-Compliant Security Controls will be tracked for SLCM. Character Limit = 2,000."
          x-faker: random.word
          example: "Test Tracking"
        slcmComments:
          type: string
          nullable: true
          description: "[Conditional] Additional comments for Security Control regarding SLCM. Character Limit = 4,000."
          x-faker: random.word
          example: "Test SLCM Comments"
        severity:
          type: string
          nullable: true
          description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
          example: "Low"
          enum: ["Very Low", "Low", "Moderate", "High", "Very High"]
        vulnerabiltySummary:
          type: string
          nullable: true
          description: "[Optional] Include vulnerability summary. Character Limit = 2,000."
          x-faker: random.words
          example: "Test Vulnerability Summary"
        recommendations:
          type: string
          nullable: true
          description: "[Optional] Include recommendations. Character Limit = 2,000."
          x-faker: random.words
          example: "Test Recommendations"
        relevanceOfThreat:
          type: string
          nullable: true
          description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
          example: "Low"
          enum: ["Very Low", "Low", "Moderate", "High", "Very High"]
        likelihood:
          type: string
          nullable: true
          description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
          example: "Low"
          enum: ["Very Low", "Low", "Moderate", "High", "Very High"]
        impact:
          type: string
          nullable: true
          description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
          example: "Low"
          enum: ["Very Low", "Low", "Moderate", "High", "Very High"]
        impactDescription:
          type: string
          nullable: true
          description: "[Optional] Include description of Security Control’s impact."
          x-faker: random.words
          example: "Impact text"
        residualRiskLevel:
          type: string
          nullable: true
          description: "[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)"
          example: "Low"
          enum: ["Very Low", "Low", "Moderate", "High", "Very High"]
        testMethod:
          type: string
          nullable: true
          description: "[Optional] Identifies the assessment method / combination that will determine if the security requirements are implemented correctly."
          example: "Test"
          enum: ['Test', 'Interview', 'Examine', 'Test, Interview', 'Test, Examine', 'Interview, Examine','Test, Interview, Examine']
    ControlsPut:
      title: Controls - return query from the server for the PUT call
      type: object
      additionalProperties: false
      properties:
        acronym:
          type: string
          description: "Acronym of the system record."
          example: "AC-34"
          x-faker:
            random.arrayElement: [["AC-1", "AC-2","S-1","S-23","SI-16","SI-56","UA-16","SI-4(11)"]]          
        success:
          type: boolean
          description: "Indicates if operations result (success/fail)"
          x-faker: random.boolean
          example: true
        systemId:
          type: integer
          format: int64
          description: "The system identifier for the system being updated."
          x-faker: random.number
          example: 33
        errors:
          $ref: '#/components/schemas/Errors'
    TestResultsGet:
      title: Test Results - server returned data from the GET call
      type: object
      additionalProperties: false
      properties:
        systemId:
          type: integer
          format: int64
          description: "[Required] Unique eMASS identifier. Will need to provide correct number"
          x-faker: random.number
          example: 35
        control:
          type: string
          nullable: true
          description: "[Read-Only] Control acronym associated with the test result. NIST SP 800-53 Revision 4 defined."
          example: "AC-3"
          x-faker:
            random.arrayElement: [["AC-1", "AC-2","S-1","S-23","SI-16","SI-56","UA-16","SI-4(11)"]]           
        cci:
          type: string
          description: "[Required] CCI associated with test result."
          example: "000002"
          x-faker:
            random.arrayElement: [["000012","000045","000005","000125","000145","000063","000451","000254","000852","001234","002115","000155"]]          
        isInherited:
          type: boolean
          nullable: true
          description: "[Read-only] Indicates whether a test result is inherited."
          x-faker: random.boolean
          example: true
        testedBy:
          type: string
          description: "[Required] Last Name, First Name. 100 Characters."
          x-faker: name.findName
          example: "Smith, Joe"
        testDate:
          type: integer
          format: int64
          description: "[Required] Unix time format."
          example: 1638741660
        description:
          type: string
          description: "[Required] Include description of test result. 4000 Characters."
          x-faker: random.words
          example: "Test result description"
        type:
          type: string
          nullable: true
          description: "[Read-Only] Indicates the location in the Control Approval Chain when the test result is submitted."
          example: "Self-Assessment"
          x-faker:
            random.arrayElement: [["Self-Assessment", "Schedule-Assessment", "Deep Evaluation"]]
        complianceStatus:
          type: string
          description: "[Required] Test result compliance status"
          example: "Compliant"
          enum: ["Compliant", "Non-Compliant", "Not Applicable"]
    TestResultsPost:
      title: Test Results - return query from the server for the POST call
      type: object
      additionalProperties: false
      properties:
        cci:
          type: string
          description: "CCI associated with test result."
          example: "000001,000002"
          x-faker:
            random.arrayElement: [["000012","000045","000005","000125","000145","000063","000451","000254","000852","001234","002115","000155"]]          
        success:
          type: boolean
          description: "Indicates if operations result (success/fail)"
          x-faker: random.boolean
          example: true
        systemId:
          type: integer
          format: int64
          description: "The system identifier for the system being updated."
          x-faker: random.number
          example: 35
        errors:
          $ref: '#/components/schemas/Errors'
    PoamGet:
      title: POAM - return query from the server for the GET call
      type: object
      additionalProperties: false
      properties:
        externalUid:
          type: string
          nullable: true
          description: "[Optional] Unique identifier external to the eMASS application for use with associating POA&Ms. 100 Characters."
          x-faker: random.uuid
          example: "d6d98b88-c866-4496-9bd4-de7ba48d0f52"
        systemId:
          type: integer
          format: int64
          description: "[Required] Unique eMASS system identifier."
          x-faker: random.number
          example: 830
        poamId:
          type: integer
          format: int64
          description: "[Required] Unique item identifier"
          x-faker: random.number
          example: 45
        displayPoamId:
          type: integer
          format: int64
          description: "[Required] Globally unique identifier for individual POA&M Items, seen on the front-end as “ID”."
          x-faker: random.number
          example: 100000010
        isInherited:
          type: boolean
          nullable: true
          description: "[Read-only] Indicates whether a test result is inherited."
          x-faker: random.boolean
          example: true
        controlAcronym:
          type: string
          nullable: true
          description: "[Optional] System acronym name."
          x-faker:
            random.arrayElement: [["AC-1","AC-2","S-1","S-23","SI-16","OI-33","SI-56","UA-16","SI-4(11)"]]
          example: “AC-3”
        cci:
          type: string
          nullable: true
          description: "[Optional] CCI associated with POA&M Item.."
          example: "000001,000002"
          x-faker:
            random.arrayElement: [["000012","000045","000005","000125","000145","000063","000451","000254","000852","001234","002115","000155"]]          
        status:
          type: string
          description: "[Required] Values include the following: (Ongoing,Risk Accepted,Completed,Not Applicable"
          example: "Completed"
          enum: ["Ongoing", "Risk Accepted", "Completed", "Not Applicable", "Archived"]
        reviewStatus:
          type: string
          nullable: true
          description: "[Read-Only] Values include the following options: (Not Approved,Under Review,Approved)"
          example: "Under Review"
          enum: ["Not Approved", "Under Review", "Approved"]
        vulnerabilityDescription:
          type: string
          description: "[Required] Provide a description of the POA&M Item. 2000 Characters."
          x-faker: random.words
          example: "Description text"    
        sourceIdentVuln:
          type: string
          description: "[Required] Include Source Identifying Vulnerability text. 2000 Characters."
          x-faker: random.words
          example: "Source Indentifying Vulnerability text"        
        securityChecks:
          type: string
          nullable: true
          description: "[Optional] Security Checks that are associated with the POA&M."
          x-faker: random.words
          example: "SV-25123r1_rule,2016-A-0279"
        milestones:
          type: array
          items:
            $ref: "#/components/schemas/MilestonesGet"
        pocOrganization:
          type: string
          description: "[Required] Organization/Office represented. 100 Characters."
          x-faker: company.companyName
          example: "Army"
        pocFirstName:
          type: string
          nullable: true
          description: "[Conditional] First name of POC. 100 Characters."
          x-faker: name.firstName
          example: "John"
        pocLastName:
          type: string
          nullable: true
          description: "[Conditional] Last name of POC. 100 Characters."
          x-faker: name.lastName
          example: "Smith"
        pocEmail:
          type: string
          nullable: true
          description: "[Conditional] Email address of POC. 100 Characters."
          x-faker: internet.email
          example: "smith@ah.com"
        pocPhoneNumber:
          type: string
          nullable: true
          description: "[Conditional] Phone number of POC. 100 Characters."
          x-faker: phone.phoneNumber.email
          example: "555-555-5555"
        severity:
          type: string
          nullable: true
          description: "[Conditional] Required for approved items. Values include the following options (Very Low,Low,Moderate,High,Very High)"
          example: "Low"
          enum: ["Very Low", "Low", "Moderate", "High", "Very High"]
        rawSeverity:
          type: string
          nullable: true
          description: "[Optional] Values include the following options (I,II,III)"
          example: "I"
          enum: ["I", "II", "III"]
        relevanceOfThreat:
          type: string
          nullable: true
          description: "[Optional] Values include the following options: (Very Low,Low,Moderate,High,Very High)"
          example: "Low"
          enum: ["Very Low", "Low", "Moderate", "High", "Very High"]
        likelihood:
          type: string
          nullable: true
          description: "[Optional] Values include the following options: (Very Low,Low,Moderate,High,Very High)"
          example: "Moderate"
          enum: ["Very Low", "Low", "Moderate", "High", "Very High"]
        impact:
          type: string
          nullable: true
          description: "[Optional] Values include the following options: (Very Low,Low,Moderate,High,Very High)"
          example: "High"
          enum: ["Very Low", "Low", "Moderate", "High", "Very High"]
        impactDescription:
          type: string
          nullable: true
          description: "[Optional] Include description of Security Control’s impact."
          x-faker: random.words
          example: "Impact Description text"
        residualRiskLevel:
          type: string
          nullable: true
          description: "[Optional] Values include the following options: (Very Low,Low,Moderate,High,Very High)"
          example: "Very Low"
          enum: ["Very Low", "Low", "Moderate", "High", "Very High"]
        recommendations:
          type: string
          nullable: true
          description: "[Optional] Include recommendations. Character Limit = 2,000."
          x-faker: random.words
          example: "Recommendations text"
        resources:
          type: string
          description: "[Required] List of resources used. 250 Characters."
          x-faker: random.words
          example: "Resource text."
        scheduledCompletionDate:
          type: integer
          format: int64
          nullable: true
          description: "[Conditional] Required for ongoing and completed POA&M items. Unix time format."
          example: 1599644800
        completionDate:
          type: integer
          format: int64
          nullable: true
          description: "[Conditional] Field is required for completed POA&M items. Unix time format."
          example: 1505916276
        extensionDate:
          type: integer
          format: int64
          nullable: true
          description: >
            [Read-Only] Value returned for a POA&M Item with review status
            Approved” and has a milestone with a scheduled completion date
            that extends beyond the POA&M Item’s scheduled completion date.
          example: 1505916298
        comments:
          type: string
          nullable: true
          description: "[Conditional] Field is required for completed and risk accepted POA&M items. 2000 Characters"
          x-faker: random.words
          example: "Comments text."
        mitigation:
          type: string
          nullable: true
          description: "[Optional] Include mitigation explanation. 2000 Characters."
          x-faker: random.words
          example: "Mitigation text"
        isActive:
          type: boolean
          nullable: true
          description: "[Conditional] Optionally used in PUT to delete milestones when updating a POA&M."
          x-faker: random.boolean
          example: true       
    PoamPostPutDel:
      type: object
      additionalProperties: false
      properties:
        systemId:
          type: integer
          format: int64
          description: "The system identifier for the system being updated."
          x-faker: random.number
          example: 33
        poamId:
          type: integer
          format: int64
          description: "The newly created POAM identifier"
          x-faker: random.number
          example: 45
        externalUid:
          type: string
          description: "The unique identifier external to the eMASS application for use with associating POA&Ms. 100 Characters."
          x-faker: random.uuid
          example: "d6d98b88-c866-4496-9bd4-de7ba48d0f52"
        success:
          type: boolean
          description: "Indicates if operations result (success/fail)"
          x-faker: random.boolean
          example: true
        errors:
          $ref: '#/components/schemas/Errors'
    MilestonesGet:
      title: Milestones - return query from the server for the GET call
      type: object
      additionalProperties: false
      properties:
        systemId:
          type: integer
          format: int64
          description: "[Required] Unique eMASS system identifier."
          x-faker: random.number
          example: 830
        milestoneId:
          type: integer
          format: int64
          description: "[Required] Unique item identifier"
          x-faker: random.number
          example: 19
        poamId:
          type: integer
          format: int64
          description: "[Required] Unique item identifier"
          x-faker: random.number
          example: 45
        description:
          type: string
          description: "[Required] Include milestone description."
          x-faker: random.words
          example: "Description text"
        scheduledCompletionDate:
          type: integer
          format: int64
          description: "[Required] Required for ongoing and completed POA&M items. Unix time format."
          example: 1599644800
        reviewStatus:
          type: string
          description: "[Read-Only] Values include the following options: (Not Approved,Under Review,Approved)"
          example: "Under Review"
          enum: ["Not Approved", "Under Review", "Approved"]          
    MilestonesPutPostDelete:
      type: object
      additionalProperties: false
      properties:
        systemId:
          type: integer
          format: int64
          description: "The system identifier that the POAM was added."
          x-faker: random.number
          example: 35
        poamId:
          type: integer
          format: int64
          description: "The newly created POAM identifier"
          x-faker: random.number
          example: 45
        milestoneId:
          type: integer
          format: int64
          description: "The Milestone unique item identifier"
          x-faker: random.number
          example: 77
        externalUid:
          type: string
          description: "The unique identifier external to the eMASS application for use with associating POA&Ms. 100 Characters."
          x-faker: random.uuid
          example: "d6d98b88-c866-4496-9bd4-de7ba48d0f52"
        success:
          type: boolean
          description: "Indicates if operations result (success/fail)"
          x-faker: random.boolean
          example: true
        errors:
          $ref: '#/components/schemas/Errors'
    ArtifactsGet:
      title: Artifacts - return query from the server for the GET call
      type: object
      additionalProperties: false
      properties:
        systemId:
          type: integer
          format: int64
          description: "[Required] Unique eMASS system identifier."
          x-faker: random.number
          example: 35
        filename:
          type: string
          description: "[Required] File name should match exactly one file within the provided zip file. 1000 Characters."
          x-faker: system.commonFileName
          example: "AutorizationGuidance.pdf"
        isInherited:
          type: boolean
          nullable: true
          description: "[Read-only] Indicates whether an artifact is inherited."
          x-faker: random.boolean
          example: true
        isTemplate:
          type: boolean
          nullable: true
          description: "[Required] Indicates whether an artifact template."
          x-faker: random.boolean
          example: false
        type:
          type: string
          description: "[Required] Artifact type options"
          x-faker: random.word
          example: "Policy"
          # enum: ["Procedure", "Diagram", "Policy", "Labor", "Document", "Image", "Other", "Scan Result", "Auditor Report"]          
        category:
          type: string
          description: "[Required] Artifact category options"
          x-faker: random.word
          example: "Change Request"
          # enum: ["Implementation Guidance", "Evidence"]
        name: 
          type: string
          description: "[Optional] Artifact name. Character Limit = 100."
          nullable: true
          x-faker: random.word
          example: "E-Authentication Assessment"
        description:
          type: string
          nullable: true
          description: "[Optional] Artifact description. 10,000 Characters."
          x-faker: random.words
          example: "Artifact description text"
        referencePageNumber:
          type: string
          nullable: true
          description: "[Optional] Artifact reference page number. 50 Characters."
          x-faker: random.words
          example: "Reference page number"
        ccis:
          type: string
          nullable: true
          description: "[Optional] CCI associated with test result."
          example: "000001,000002"
          x-faker:
            random.arrayElement: [["000012,000045", "000005","000125,000145","000063,000451,000254","000852","001234,002115","000155"]]            
        controls:
          type: string
          nullable: true
          description: "[Optional] Control acronym associated with the artifact. NIST SP 800-53 Revision 4 defined."
          x-faker: company.companySuffix
          example: "AC-8,AC-2(4)"
        mimeContentType:
          type: string
          nullable: true
          description: "[Read-Only] Standard MIME content type derived from file extension."
          x-faker: system.mimeType
          example: "application/zip"
        fileSize:
          type: string
          nullable: true
          description: "[Read-Only] File size of attached artifact."
          example: "4MB"
          x-faker:
            random.arrayElement: [["369 KB","459 KB","134 KB","659 KB","555 KB","1 MB","1.3 MB","2 MB","2.7 MB","3.1 MB","4 MB"]]          
        expirationDate:
          type: integer
          format: int64
          nullable: true
          description: "[Optional] Date Artifact expires and requires review. In Unix Date format."
          example: 1549036926
        lastReviewedDate:
          type: integer
          format: int64
          nullable: true
          description: "[Optional] Date Artifact was last reviewed. Unix time format."
          example: 1549036928
        signedDate:
          type: integer
          format: int64
          nullable: true
          description: "[Optional] Date artifact was signed. Unix time format."
          example: 1549036928
    CacGet:
      title: CAC - return query from the server for the GET call
      type: object
      additionalProperties: false
      properties:
        systemId:
          type: integer
          format: int64
          description: "[Required] Unique eMASS system identifier."
          x-faker: random.number
          example: 35
        controlAcronym:
          type: string
          description: "[Required] System acronym name."
          example: "AC-3"
          x-faker:
            random.arrayElement: [["AC-1", "AC-2","S-1","S-23","SI-16","SI-56","UA-16","SI-4(11)"]]
        complianceStatus:
          type: string
          nullable: true
          description: "[Read-only] Compliance status of the control."
          x-faker: random.word
          example: "Compliant"
        currentStageName:
          type: string
          nullable: true
          description: "[Read-Only] Role in current stage."
          x-faker: random.word
          example: "SCA-V"
        currentStage:
          type: integer
          nullable: true
          description: "[Read-Only] Current step in the Control Approval Chain."
          example: 2
          minimum: 1
          maximum: 50
        totalStages:
          type: integer
          nullable: true
          description: "[Read-Only] Total number of steps in Control Approval Chain."
          example: 2
          minimum: 1
          maximum: 50
        comments:
          type: string
          nullable: true
          description: "[Conditional] Control Approval Chain comments - 2000 Characters."
          x-faker: random.words
          example: "Control Approval Chain comments text."
    PacGet:
      title: PAC - return query from the server for the GET call
      type: object
      properties:
        systemId:
          type: integer
          format: int64
          description: "[Required] Unique eMASS system identifier."
          x-faker: random.number
          example: 35
        workflow:
          type: string
          description: "[Required] Values include the following:(Assess and Authorize, Assess Only, Security Plan Approval)"
          example: "Assess and Authorize"
          enum: ["Assess and Authorize", "Assess Only", "Security Plan Approval"]
        name:
          type: string
          description: "[Required] Package name. 100 Characters."
          x-faker: random.word
          example: "Package name text"
        currentStageName:
          type: string
          nullable: true
          description: "[Read-Only] Name of the current stage in the active workflow."
          x-faker: random.word
          example: "SCA-R"
        currentStage:
          type: integer
          nullable: true
          description: "[Read-Only] Number of the current stage in the active workflow."
          example: 4
        totalStages:
          type: integer
          nullable: true
          description: "[Read-Only] Total number of stages in the active workflow."
          example: 6
        daysAtCurrentStage:
          type: integer
          nullable: true
          description: "[Read-Only] Indicates the number of days at current workflow stage."
          example: 2
        comments:
          type: string
          description: "[Required] Comments related to package approval chain. Character Limit = 4,000."
          x-faker: random.words
          example: "Comments text."
    PacPost:
      title: PAC - return query from the server for the POST call
      type: object
      properties:
        workflow:
          type: string
          description: "[Required] Values include the following:(Assess and Authorize, Assess Only, Security Plan Approval)"
          example: "Assess and Authorize"
          enum: ["Assess and Authorize", "Assess Only", "Security Plan Approval"]
        success:
          type: boolean
          x-faker: random.boolean
          example: true
        systemId:
          type: integer
          format: int64
          x-faker: random.number
          example: 35
        errors:
          $ref: '#/components/schemas/Errors'
    StaticCodePost:
      title: Static Code - return query from the server for the POST call
      type: object
      properties:
        applicationName:
          type: string
          description: "[Required] Name of the software application that was assessed."
          x-faker: company.companyName
          example: 'Artemis'
        version:
          type: string
          description: "[Required] The version of the application."
          x-faker: system.semver
          example: 'Version 5.0'        
        success:
          type: boolean
          x-faker: random.boolean
          example: true
        systemId:
          type: integer
          format: int64
          x-faker: random.number
          example: 35
        errors:
          $ref: '#/components/schemas/Errors'          
    CloudResourcesPost: 
      title: Cloud Resources - return query from the server for the POST call
      type: object
      properties:
        resourceId:
          type: string
          description: "[Required] Unique identifier/resource namespace for policy compliance result"
          example: "/subscriptions/123456789/sample/resource/namespace/default"   
        success:
          type: boolean
          x-faker: random.boolean
          example: true
        systemId:
          type: integer
          format: int64
          x-faker: random.number
          example: 35
        errors:
          $ref: '#/components/schemas/Errors'  
    ContainersResourcesPost:
      title: Containers - return query from the server for the POST call
      type: object
      properties:
        containerId:
          type: string
          description: "[Required] Unique identifier of the container"
          example: "command-control"
        success:
          type: boolean
          x-faker: random.boolean
          example: true
        systemId:
          type: integer
          format: int64
          x-faker: random.number
          example: 35
        errors:
          $ref: '#/components/schemas/Errors'      
    CmmcGet:
      title: CMMC - return query from the server for the GET call
      type: object
      additionalProperties: false
      properties:    
        operation:
          type: string
          nullable: true
          description: "[Read-Only] Indicates the action that should be taken on the assessment record since the provided sinceDate."
          example: "UPDATED"
          enum: ["ADDED", "UPDATED", "DELETED"]
        hqOrganizationName:
          type: string
          nullable: true
          description: "[Read-Only] The name of the DIB Company."
          x-faker: company.companyName
          example: "Army"
        uei:
          type: string
          nullable: true
          description: "[Read-Only] The Unique Entity Identifier assigned to the DIB Company."
          x-faker: finance.account
          example: "9809123"
        cageCodesInScope:
          type: string
          nullable: true
          description: "[Read-Only] The five position code(s) associated with the Organization Seeking Certification (OSC)."
          x-faker: random.semver
          example: "89ED9; 99D8B"
        oscName:
          type: string
          nullable: true
          description: "[Read-Only] The name of the Organization Seeking Certification."
          x-faker: company.companyName
          example: "UC Labs"
        scope:
          type: string
          nullable: true
          description: "[Read-Only] The scope of the OSC assessment."
          example: "Enterprise"
          x-faker:
            random.arrayElement: [["Enterprise", "Non-Enterprise"]]
        scopeDescription:
          type: string
          nullable: true
          description: "[Read-Only] Brief description of the scope of the OSC assessment"
          x-faker: random.words
          example: "Assessment of UC's Lab"
        awardedCMMCLevel:
          type: string
          nullable: true
          description: "[Read-Only] The CMMC award level."
          example: "Not Certified"
          x-faker:
            random.arrayElement: [["Not Certified", "Level 1", "Level 2", "Level 3", "Level 4", "Level 5"]]
        expirationDate:
          type: integer
          format: int64
          nullable: true
          description: "[Read-Only] Expiration date of the awarded CMMC certification."
          example: 1638741660
        assessmentId:
          type: string
          nullable: true
          description: "[Read-Only] Unique identifier for the assessment/certificate."
          x-faker: random.uuid
          example: "41b89528-a7a8-470a-90f4-c3fd1267d6f7"        
        modelVersion:
          type: string
          nullable: true
          description: "[Read-Only] Version of the CMMC Model used as part of the assessment."
          x-faker: system.semver
          example: "1.12"
        highestLevelCageCode:
          type: string
          nullable: true
          description: "[Read-Only] Identifies the highest-level CAGE Code associated with a given organization."
          x-faker: 
            random.alphaNumeric: 5
          example: "99D8B"
        certificationUniqueId:
          type: string
          nullable: true
          description: "[Read-Only] Identifies the unique ID that is associated with a given CMMC certification for an organization."
          x-faker: 
            random.alphaNumeric: 9
          example: "L20000003"
        poam:
          type: boolean
          nullable: true
          description: "[Read-Only] Identifies whether any security requirements received a POA&M during the assessment."
          x-faker: random.boolean
          example: false
        overallScore:
          type: integer
          format: int64
          description: "[Read-Only] Identifies the overall calculated score for the assessment based on the assigned values to each applicable security requirement."
          x-faker: 
            random.number: 150
          example: 110
        oscAssessmentOfficialLastName:
          type: string
          nullable: true
          description: "[Read-Only] Last name of the company official contracting with the C3PAO for the assessment."
          x-faker: name.lastName
          example: "Smith"
        oscAssessmentOfficialFirstName:
          type: string
          nullable: true
          description: "[Read-Only] First name of the company official contracting with the C3PAO for the assessment."
          x-faker: name.firstName 
          example: "John"        
        oscAssessmentOfficialEmail:
          type: string
          nullable: true
          description: "[Read-Only] Email of the company official contracting with the C3PAO for the assessment."
          x-faker: internet.email
          example: "john.smith6.ctr@mail.mil"
        oscAssessmentOfficialTitle:
          type: string
          nullable: true
          description: "[Read-Only] Title of the company official contracting with the C3PAO for the assessment."
          x-faker: name.jobTitle
          example: "The Boss"
        ssps:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Ssps'
    Ssps:
      title: System Role
      type: object
      additionalProperties: false
      properties:
        sspName:
          type: string
          nullable: true
          description: "[Read-Only] Name of the System Security Plan."
          x-faker: company.companyName
          example: "UC Lab"
        sspVersion:
          type: string
          nullable: true
          description: "[Read-Only] Version of the System Security Plan."
          x-faker: system.semver
          example: "4.3.0"
        sspDate:
          type: integer
          format: int64
          nullable: true
          description: "[Read-Only] Date of the System Security Plan. Unix date format."
          example: 1638741660
    WorkflowDefinitionGet:
      title: Workflow Definition - return query from the server for the GET call
      type: object
      properties:
        workflowUid:
          type: string
          nullable: true
          description: "[Read-Only] Unique workflow definition identifier."
          x-faker: random.uuid
          example: "6f810301-5b3b-4f89-81e7-587fef9142a9"
        workflow:
          type: string
          nullable: true
          description: "[Read-Only] The workflow type."
          example: "RMF Step 1: Security Category"
          x-faker:
            random.arrayElement: [["RMF Step 1: Security Category", "RMF Step 2: Security Category", "RMF Step 3: Security Category"]]
        version:
          type: string
          nullable: true
          description: "[Read-Only] Version of the workflow definition."
          x-faker: system.semver
          example: "4"
        description:
          type: string
          nullable: true
          description: "[Read-Only] Description of the workflow or the stage transition."
          x-faker: lorem.sentence 
          example: "The workflow description"
        isActive:
          type: boolean
          nullable: true
          description: "[Read-Only] Returns true if the workflow is available to the site."
          x-faker: random.boolean
          example: false
        stages:
          type: array
          nullable: true
          additionalProperties: false
          items:
            $ref: '#/components/schemas/Stage'
    Stage:
      title: Workflow Definition Stage
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
          description: "[Read-Only] Name of the stage. For older workflows, this will match the user assigned to the stage."
          example: "Not Started"
          x-faker:
            random.arrayElement: [["Not Started","Categorize System","Submit Categorization","Approval","Complete","Cancelled","AO","SCA","PM/IAM"]]
        transitions:
          type: array
          nullable: true
          additionalProperties: false
          items:
            $ref: '#/components/schemas/DefinitionTransitions'
    DefinitionTransitions:
      title: Workflow Definition Transition
      type: object
      additionalProperties: false
      properties:
        endStage:
          type: string
          nullable: true
          description: "[Read-Only] The landing stage that is active after performing a transition."
          x-faker: random.word
          example: "Submit Categorization"
        description:  
          type: string
          nullable: true
          description: "[Read-Only] Description that matches the action dropdown that appears for PAC users."
          x-faker: random.words
          example: "Initiate Workflow"
        roles:
          type: array
          nullable: true
          additionalProperties: false
          items:
            example: "PM/ISO, System Admin, eMASS System Admin, ISSE, ISSM, IO"
            x-faker:
              random.arrayElement: [['PM/ISO', 'System Admin', 'eMASS System Admin', 'ISSE', 'ISSM', 'IO', 'Other', 'Unknown']]
    WorkflowInstancesGet: 
      title: Workflow Instances - return query for the GET workflow instances in a site
      type: object
      properties:
        workflowUid:
          type: string
          nullable: true
          description: "[Read-Only] Unique workflow definition identifier."
          x-faker: random.uuid
          example: "6f810301-5b3b-4f89-81e7-587fef9142a9"
        systemId:
          type: integer
          format: int64
          nullable: true
          description: "[Read-only] Unique system record identifier."
          x-faker: random.number
          example: 35 
        systemName:
          type: string
          nullable: true
          description: "[Read-Only] The system name."
          x-faker: company.companyName
          example: "Test system 1"
        workflowInstanceId:
          type: integer
          format: int64
          nullable: true
          description: "[Read-Only] Unique workflow instance identifier."
          x-faker: random.number
          example: 35
        packageName:
          type: string
          nullable: true
          description: "[Read-Only] The package name."
          example: "Test RMF Step 1 package"
        createdDate:
          type: integer
          format: int64
          nullable: true
          description: "[Read-Only] Date the workflow instance or the workflow transition was created."
          example: 1636124623
        lastEditedDate:
          type: integer
          format: int64
          nullable: true
          description: "[Read-Only] Date the workflow was last acted on."
          example: 1631130837
        lastEditedBy:
          type: string
          nullable: true
          description: "[Read-Only] User that last acted on the workflow."
          x-faker: internet.email
          example: "john.doe.ctr@mail.mil"
        workflow:
          type: string
          nullable: true
          description: "[Read-Only] The workflow type."
          x-faker: random.words
          example: "RMF Step 1: Security Category"
        version:
          type: string
          nullable: true
          description: "[Read-Only] Version of the workflow definition."
          x-faker: system.semver
          example: "4"
        currentStage:
          type: string
          nullable: true
          description: "[Read-Only] Name of the current stage."
          example: "Echelon II"
          x-faker:
            random.arrayElement: [["Echelon I","Echelon II","Echelon III","Echelon IV","Echelon V"]]
        transitions:
          type: array
          items:
            $ref: '#/components/schemas/InstancesTransitions'          
    WorkflowInstanceGet:
      title: Workflow Instances - return query for the GET workflow instance by ID
      type: object
      properties:
        workflowUid:
          type: string
          nullable: true
          description: "[Read-Only] Unique workflow definition identifier."
          x-faker: random.uuid
          example: "6f810301-5b3b-4f89-81e7-587fef9142a9"
        systemName:
          type: string
          nullable: true
          description: "[Read-Only] The system name."
          x-faker: company.companyName
          example: "Test system 1"
        workflowInstanceId:
          type: integer
          format: int64
          nullable: true
          description: "[Read-Only] Unique workflow instance identifier."
          x-faker: random.number
          example: 35
        packageName:
          type: string
          nullable: true
          description: "[Read-Only] The package name."
          example: "Test RMF Step 1 package"
        createdDate:
          type: integer
          format: int64
          nullable: true
          description: "[Read-Only] Date the workflow instance or the workflow transition was created."
          example: 1636124623
        lastEditedDate:
          type: integer
          format: int64
          nullable: true
          description: "[Read-Only] Date the workflow was last acted on."
          example: 1631130837
        lastEditedBy:
          type: string
          nullable: true
          description: "[Read-Only] User that last acted on the workflow."
          x-faker: internet.email
          example: "john.doe.ctr@mail.mil"
        workflow:
          type: string
          nullable: true
          description: "[Read-Only] The workflow type."
          x-faker: random.words
          example: "RMF Step 1: Security Category"
        version:
          type: string
          nullable: true
          description: "[Read-Only] Version of the workflow definition."
          x-faker: system.semver
          example: "4"
        currentStage:
          type: string
          nullable: true
          description: "[Read-Only] Name of the current stage."
          example: "Echelon II"
          x-faker:
            random.arrayElement: [["Echelon I","Echelon II","Echelon III","Echelon IV","Echelon V"]]          
        transitions:
          type: array
          items:
            $ref: '#/components/schemas/InstancesTransitions'     
    InstancesTransitions:
      title: Workflow Instances Transition
      type: object
      additionalProperties: false
      properties:
        comments: 
          type: string
          nullable: true
          description: "[Read-Only] Comments entered by the user when performing the transition."
          x-faker: random.words
          example: "Approved the categorization"
        createdBy:
          type: string
          nullable: true
          description: "[Read-Only] User that performed the workflow transition."
          x-faker: internet.email
          example: "john.doe.ctr@mail.mil"
        createdDate:
          type: integer
          format: int64
          nullable: true
          description: "[Read-Only] Date the workflow instance or the workflow transition was created."
          example: 1636124623
        description:  
          type: string
          nullable: true
          description: "[Read-Only] Description of the stage transition. This matches the action dropdown that appears for PAC users."
          x-faker: random.words
          example: "Submit New Package"
        endStage:
          type: string
          nullable: true
          description: "[Read-Only] The landing stage that is active after performing a transition."
          x-faker: random.word
          example: "Submit Categorization"
        startStage:
          type: string
          nullable: true
          description: "[Read-Only] The beginning stage that is active before performing a transition."
          x-faker: random.word
          example: "Not Started"  
    MockObject:
      title: Object mock data
      type: object
      additionalProperties: false
      properties:
        pocOrganization:
          type: string
          description: "[Required] Organization/Office represented. 100 Characters."
          x-faker: company.companyName
          example: "Army"          
        resources:
          type: string
          description: "[Required] List of resources used. 250 Characters."
          x-faker: random.words
          example: "Resource text."
        owningOrganization:
          type: string
          nullable: true
          description: "[Read-Only] Owning organization of the system record. Values match the eMASS instance Organizational Hierarchy."
          x-faker: company.companyName
          example: "Defense Information Systems Agency"
        secondaryOrganization:
          type: string
          nullable: true
          description: "[Read-only] Secondary organization that owns the system record (i.e. Sub-Organization-level."
          x-faker: company.companyName
          example: "ID31"
        pocFirstName:
          type: string
          description: "[Conditional] First name of POC. 100 Characters."
          x-faker: name.firstName
          example: "John"
        pocLastName:
          type: string
          description: "[Conditional] Last name of POC. 100 Characters."
          x-faker: name.lastName
          example: "Smith"
        pocEmail:
          type: string
          description: "[Conditional] Email address of POC. 100 Characters."
          x-faker: internet.email
          example: "smith@ah.com"
        pocPhoneNumber:
          type: string
          description: "[Conditional] Phone number of POC (area code) ***-**** format. 100 Characters."
          x-faker: phone.phoneNumber.email
          example: "555-555-5555"
        severity:
          type: string
          description: "[Conditional] Required for approved items. Values include the following options: (Very Low, Low, Moderate,High,Very High)"
          example: "Low"
        scheduledCompletionDate:
          type: integer
          format: int64
          nullable: true
          description: "[Conditional] Required for ongoing and completed POA&M items. Unix time format."
          example: 1599644800
        completionDate:
          type: integer
          format: int64
          description: "[Conditional] Field is required for completed POA&M items. Unix time format."
          example: 1505916276
        comments:
          type: string
          description: "[Conditional] Field is required for completed and risk accepted POA&M items. 2000 Characters"
          x-faker: random.words
          example: "Comments text."
        isActive:
          type: boolean
          description: "[Conditional] Optionally used in PUT to delete milestones when updating a POA&M."
          x-faker: random.boolean
          example: true
    #----------------------------------------------------------------------------
    # HTTP response status code values 
    #----------------------------------------------------------------------------
    "Response200":
      title: OK
      type: object
      additionalProperties: false
      properties:
        code:
          type: integer
          format: int32
          minimum: 200
          maximum: 200
          default: 200
    "Response201":
      title: "Created"
      type: object
      additionalProperties: false
      properties:
        meta:
          type: object
          properties:
            code:
              type: integer
              format: int32
              minimum: 201
              maximum: 201
              default: 201
            message:
              type: string
              default: "Request was fulfilled and resulted in on or more new resources being successfully created on the server."    
    "Response400":
      title: "Bad Request"
      type: object
      additionalProperties: false
      properties:
        meta:
          type: object
          properties:
            code:
              type: integer
              format: int32
              minimum: 400
              maximum: 400
              default: 400
            errorMessage:
              type: string
              default: "Request could not be understood by the server due to incorrect syntax or an unexpected format"          
    "Response401":
      title: "Unauthorized"
      type: object
      additionalProperties: false
      properties:
        meta:
          type: object
          properties:
            code:
              type: integer
              format: int32
              minimum: 401
              maximum: 401
              default: 401
            errorMessage:
              type: string
              default: "Request has failed to provide suitable authentication from the client"
    "Response403":
      title: "Forbidden"
      type: object
      additionalProperties: false
      properties:
        meta:
          type: object
          properties:
            code:
              type: integer
              format: int32
              minimum: 403
              maximum: 403
              default: 403
            errorMessage:
              type: string
              default: "Request was blocked by the application due to a lack of client permissions to the API or to a specific endpoint"
    "Response404":
      title: "Not Found"
      type: object
      additionalProperties: false
      properties:
        code:
          type: integer
          format: int32
          minimum: 404
          maximum: 404
          default: 404
        errorMessage:
          type: string
          default: "Request has failed because the URL provided in the request did not match any available endpoint locations"
    "Response405":
      title: "Method Not Allowed"
      type: object
      additionalProperties: false
      properties:
        meta:
          type: object
          properties:
            code:
              type: integer
              format: int32
              minimum: 405
              maximum: 405
              default: 405
            errorMessage:
              type: string
              default: "Request was made with a verb (GET, POST, etc.) that is not permitted for the endpoint"
    "Response411":
      title: "Length Required"
      type: object
      additionalProperties: false
      properties:
        meta:
          type: object
          properties:
            code:
              type: integer
              format: int32
              minimum: 411
              maximum: 411
              default: 411
            errorMessage:
              type: string
              default: "Request was of type POST and failed to provide the server information about the data/content length being submitted"              
    "Response490":
      title: "API Rule Failed"
      type: object
      additionalProperties: false
      properties:
        meta:
          type: object
          properties:
            code:
              type: integer
              format: int32
              minimum: 490
              maximum: 490
              default: 490
            errorMessage:
              type: string
              default: "Request has failed because too much data was requested in a single batch. This error is specific to eMASS"
    "Response500":
      title: "Internal Server Error"
      type: object
      additionalProperties: false
      properties:
        meta:
          type: object
          properties:
            code:
              type: integer
              format: int32
              minimum: 500
              maximum: 500
              default: 500
            errorMessage:
              type: string
              default: "Server encountered an unexpected condition which prevented it from fulfilling the request"

    #----------------------------------------------------------------------------  
    # Schema for error response body
    #----------------------------------------------------------------------------
    Errors:
      type: array
      nullable: true
      maxItems: 5
      items:
        example: "key:value"
        x-faker:
          random.arrayElement: [["key: Error message 1","key: Error message 2","key: Error message 3","key: Error message 4","key: Error message 5"]]
  
  #----------------------------------------------------------------------------
  # Security schemes  -  Define the key name and location
  #----------------------------------------------------------------------------
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: api-key
      description: >
        The API key must be provided in the request header for all eMASS endpoint calls.</br></br>
        **For connecting to a mock server, any value is acceptable, e.g., 123**
    userId:
      type: apiKey
      in: header
      name: user-uid
      description: >
        This User unique identifier key must be provided in the request header for all PUT,
        POST, and DELETE endpoint calls.</br>
        Note: For DoD users this is the DoD ID Number (EIDIPI) on their DoD CAC.</br></br>
        **For connecting to a mock server, any value is acceptable, e.g., 123**
    mockType:
      type: apiKey
      in: header
      name: Prefer
      description: >
        This header parameter is ony utilized when interacting with the mock server.</br>
        Options are (enter in the **Value** textbox): 
          - For random response values `code=200, dynamic=true`
          - For static response values `code=200` 
#-------------------------------------------------------------------------------
# S E C U R I T Y  -  Apply the API key globally to all operations
#-------------------------------------------------------------------------------
security:
  - apiKey: []   # use the same name as under securitySchemes
    userId: []   # Multiple apikey - used with the apikey (apiKey AND userId)
  - mockType: [] # use the same name as under securitySchemes
...
