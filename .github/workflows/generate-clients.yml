# Run on each push to main
#------------------------------------------------------------------------------
# Workflow action used to generate the eMASS API clients via the OpenAPI action
# The clients are only generated if the eMASS specification file 
# (eMASSRestOpenApi.yaml) has been modified. 
#
# Clients generated are: Ruby, TypeScript, and Python
# Publish the newly generated eMASS client API packages to main
#
# Action is automatically triggered when: someone pushes to main
# 
# For testing using a specific PR use the pull_request branches and specify 
# the PR name, example:
# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ the-pr-name ]
# -----------------------------------------------------------------------------
name: Generate OpenAPI Clients

on:
  push:
    branches: [ main ]
  # pull_request:
  #   branches: [ the-pr-name ]

jobs:
  generate-eMASS-clients:
    runs-on: ubuntu-latest
    name: Generate OpenAPI Clients
    steps:

      # Checkout your code
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Fetch the last two commits to compare changes.

      # Check if eMASSRestOpenApi.yaml was modified
      - name: Check for changes in eMASSRestOpenApi.yaml üîß
        id: check-changes
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q "docs/eMASSRestOpenApi.yaml"; then
            echo "modified=true" >> $GITHUB_OUTPUT
          else
            echo "modified=false" >> $GITHUB_OUTPUT
          fi

      # Generate clients only if the file was modified
      - name: Generate Ruby Client üè≠
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: ruby
          config-file: src/openapi/templates/ruby/ruby-generator-config.json
          template-dir: src/openapi/templates/ruby
          openapi-file: docs/eMASSRestOpenApi.yaml
        if: steps.check-changes.outputs.modified == 'true'

      - name: Generate Typescript Client üè≠
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: typescript-axios
          config-file: src/openapi/templates/typescript/typescript-generator-config.json
          template-dir: src/openapi/templates/typescript
          openapi-file: docs/eMASSRestOpenApi.yaml
        if: steps.check-changes.outputs.modified == 'true'

      - name: Generate Python Client üè≠
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: python
          config-file: src/openapi/templates/python/python-generator-config.json
          template-dir: src/openapi/templates/python/mustache
          openapi-file: docs/eMASSRestOpenApi.yaml
        if: steps.check-changes.outputs.modified == 'true'

      # Publish the newly generated eMASS client to the current repo
      - name: Publish Generated Clients to GitHub üöÄ
        if: steps.check-changes.outputs.modified == 'true'
        env: 
          CI_COMMIT_MESSAGE: "CI Build Client Artifacts (eMASS Clients)"
          CI_COMMIT_AUTHOR: "CI Pipeline"
          CI_COMMIT_EMAIL: "$(git log -n 1 --pretty=format:%ae)"
        run: |
          # Remove the src directory and rename the generated clients
          rm -R src/ruby_client && mv ruby-client src/ruby_client
          rm -R src/typescript_client && mv typescript-axios-client src/typescript_client
          rm -R src/python_client && mv python-client src/python_client
          
          # Commit and push to the repository
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "${{ env.CI_COMMIT_EMAIL }}"
          git add src/ruby_client src/typescript_client src/python_client
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push -f
          echo "All done now."
