# coding: utf-8

"""
    Enterprise Mission Assurance Support Service (eMASS)

    The eMASS Representational State Transfer (REST) Application Programming Interface (API) enables users to perform assessments and complete actions associated with system records.  The eMASS API provides an interface for application to communicate eMASS Services. For information on how to register and use the eMASS API reference the [eMASS API Getting Started](eMASSGettingStarted.md).  Additional information about eMASS can be obtain by contacting the National Industrial Security Program (NISP). Points of Contact are: 

    The version of the OpenAPI document: v3.22
    Contact: disa.global.servicedesk.mbx.ma-ticket-request@mail.mil
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from emass_client.models.artifacts_optional_fields import ArtifactsOptionalFields

class TestArtifactsOptionalFields(unittest.TestCase):
    """ArtifactsOptionalFields unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ArtifactsOptionalFields:
        """Test ArtifactsOptionalFields
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ArtifactsOptionalFields`
        """
        model = ArtifactsOptionalFields()
        if include_optional:
            return ArtifactsOptionalFields(
                name = 'E-Authentication Assessment',
                description = 'Artifact description text',
                reference_page_number = 'Reference page number',
                assessment_procedures = 'AC-1.1',
                controls = 'AC-8,AC-2(4)',
                expiration_date = 18089586892,
                last_reviewed_date = 1757409188,
                signed_date = 1767409188
            )
        else:
            return ArtifactsOptionalFields(
        )
        """

    def testArtifactsOptionalFields(self):
        """Test ArtifactsOptionalFields"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
