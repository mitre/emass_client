# coding: utf-8

"""
    Enterprise Mission Assurance Support Service (eMASS)

    The eMASS Representational State Transfer (REST) Application Programming Interface (API) enables users to perform assessments and complete actions associated with system records.  The eMASS API provides an interface for application to communicate eMASS Services. For information on how to register and use the eMASS API reference the [eMASS API Getting Started](eMASSGettingStarted.md).  Additional information about eMASS can be obtain by contacting the National Industrial Security Program (NISP). Points of Contact are: 

    The version of the OpenAPI document: v3.22
    Contact: disa.global.servicedesk.mbx.ma-ticket-request@mail.mil
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from emass_client.models.poam_response_get_systems_data_inner import PoamResponseGetSystemsDataInner

class TestPoamResponseGetSystemsDataInner(unittest.TestCase):
    """PoamResponseGetSystemsDataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PoamResponseGetSystemsDataInner:
        """Test PoamResponseGetSystemsDataInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PoamResponseGetSystemsDataInner`
        """
        model = PoamResponseGetSystemsDataInner()
        if include_optional:
            return PoamResponseGetSystemsDataInner(
                system_id = 830,
                poam_id = 45,
                display_poam_id = 100000010,
                status = 'Completed',
                vulnerability_description = 'Description text',
                source_identifying_vulnerability = 'Source Indentifying Vulnerability text',
                poc_organization = 'Army',
                resources = 'Resource text',
                identified_in_cfo_audit_or_other_review = True,
                poc_first_name = 'John',
                poc_last_name = 'Smith',
                poc_email = 'smith@ah.com',
                poc_phone_number = '555-555-5555',
                severity = 'Low',
                scheduled_completion_date = 1799644800,
                completion_date = 1745916276,
                comments = 'Comments text.',
                personnel_resources_funded_base_hours = 100,
                personnel_resources_cost_code = '123456',
                personnel_resources_unfunded_base_hours = 100,
                personnel_resources_nonfunding_obstacle = 'Not an system of interest',
                personnel_resources_nonfunding_obstacle_other_reason = 'Not an system of interest',
                non_personnel_resources_funded_amount = 1.337,
                non_personnel_resources_cost_code = '',
                non_personnel_resources_unfunded_amount = 1.337,
                non_personnel_resources_nonfunding_obstacle = 'Not an system of interest',
                non_personnel_resources_nonfunding_obstacle_other_reason = 'Not an system of interest',
                milestones = [
                    emass_client.models.milestones___return_query_from_the_server_for_the_get_call.Milestones - return query from the server for the GET call(
                        system_id = 830, 
                        milestone_id = 19, 
                        poam_id = 45, 
                        description = 'Description text', 
                        scheduled_completion_date = 1715312304, 
                        review_status = 'Under Review', 
                        created_by = 'Smith, John', 
                        created_date = 1715312304, )
                    ],
                external_uid = 'd6d98b88-c866-4496-9bd4-de7ba48d0f52',
                control_acronym = 'AC-3',
                assessment_procedure = 'AC-1.4',
                security_checks = 'SV-25123r1_rule,2016-A-0279',
                raw_severity = 'Moderate',
                relevance_of_threat = 'Low',
                likelihood = 'Low',
                impact = 'Low',
                impact_description = 'Impact text',
                residual_risk_level = 'Low',
                recommendations = 'Recommendations text',
                mitigations = 'Mitigation text',
                resulting_residual_risk_level_after_proposed_mitigations = 'Low',
                predisposing_conditions = 'The predisposing condition justification',
                threat_description = 'The identified threat(s) description',
                devices_affected = 'system',
                condition_id = 'TC-10100292',
                is_inherited = True,
                cci = '000001,000002',
                review_status = 'Under Review',
                created_date = 1715312304,
                extension_date = 1715312304,
                pending_extension_date = 1715312304,
                artifacts = 'Test1.docx; Test2.xlsx'
            )
        else:
            return PoamResponseGetSystemsDataInner(
        )
        """

    def testPoamResponseGetSystemsDataInner(self):
        """Test PoamResponseGetSystemsDataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
