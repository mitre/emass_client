# coding: utf-8

## eMASS API v3.9 Specification

The emass_client_api is a Python client that implements the [Enterprise Mission Assurance Support Service (eMASS)](https://disa.mil/~/media/Files/DISA/Fact-Sheets/eMASS.pdf)
Representational State Transfer (REST) Application Programming Interface (API) specifications.


This Python package was generated from the eMASS API specification:

- API version: v3.9
- Package version: 3.9.1
- Build date: 2023-05-23T01:07:18.461999Z[Etc/UTC]

## Requirements.

Python 

## Installation & Usage
### pip install

If the python package is hosted on a repository, you can install directly using:

```sh
pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git
```
(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)

Then import the package:
```python
import emass_client
```

### Setuptools

Install via [Setuptools](http://pypi.python.org/pypi/setuptools).

```sh
python setup.py install --user
```
(or `sudo python setup.py install` to install the package for all users)

Then import the package:
```python
import emass_client
```

### Tests

Execute `pytest` to run the tests.

import re  # noqa: F401
import io
import warnings

from pydantic import validate_arguments, ValidationError
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictInt

from typing import Any, Dict, Optional


from emass_client.api_client import ApiClient
from emass_client.api_response import ApiResponse
from emass_client.exceptions import (  # noqa: F401
    ApiTypeError,
    ApiValueError
)


class DashboardsApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client

    @validate_arguments
    def get_system_artifacts_details(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system Artifacts details information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_artifacts_details(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_system_artifacts_details_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_system_artifacts_details_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_system_artifacts_details_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system Artifacts details information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_artifacts_details_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_system_artifacts_details" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/system-artifacts-details', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_system_artifacts_summary(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system Artifacts summary information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_artifacts_summary(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_system_artifacts_summary_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_system_artifacts_summary_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_system_artifacts_summary_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system Artifacts summary information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_artifacts_summary_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_system_artifacts_summary" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/system-artifacts-summary', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_system_assessment_procedures_details(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get systems assessement procdures details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_assessment_procedures_details(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_system_assessment_procedures_details_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_system_assessment_procedures_details_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_system_assessment_procedures_details_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get systems assessement procdures details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_assessment_procedures_details_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_system_assessment_procedures_details" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/system-assessment-procedures-details', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_system_associations_details(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system associations details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_associations_details(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_system_associations_details_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_system_associations_details_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_system_associations_details_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system associations details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_associations_details_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_system_associations_details" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/system-associations-details', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_system_control_compliance_summary(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get systems control compliance summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_control_compliance_summary(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_system_control_compliance_summary_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_system_control_compliance_summary_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_system_control_compliance_summary_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get systems control compliance summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_control_compliance_summary_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_system_control_compliance_summary" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/system-control-compliance-summary', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_system_hardware_details(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system hardware details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_hardware_details(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_system_hardware_details_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_system_hardware_details_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_system_hardware_details_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system hardware details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_hardware_details_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_system_hardware_details" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/system-hardware-details', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_system_hardware_summary(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system hardware summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_hardware_summary(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_system_hardware_summary_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_system_hardware_summary_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_system_hardware_summary_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system hardware summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_hardware_summary_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_system_hardware_summary" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/system-hardware-summary', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_system_poam_details(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system POA&Ms details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_poam_details(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_system_poam_details_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_system_poam_details_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_system_poam_details_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system POA&Ms details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_poam_details_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_system_poam_details" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/system-poam-details', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_system_poam_summary(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get systems POA&Ms summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_poam_summary(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_system_poam_summary_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_system_poam_summary_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_system_poam_summary_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get systems POA&Ms summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_poam_summary_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_system_poam_summary" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/system-poam-summary', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_system_ports_protocols_details(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system ports and protocols details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_ports_protocols_details(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_system_ports_protocols_details_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_system_ports_protocols_details_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_system_ports_protocols_details_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system ports and protocols details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_ports_protocols_details_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_system_ports_protocols_details" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/system-ports-protocols-details', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_system_ports_protocols_summary(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system ports and protocols summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_ports_protocols_summary(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_system_ports_protocols_summary_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_system_ports_protocols_summary_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_system_ports_protocols_summary_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system ports and protocols summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_ports_protocols_summary_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_system_ports_protocols_summary" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/system-ports-protocols-summary', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_system_privacy_summary(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get user system privacy summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_privacy_summary(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_system_privacy_summary_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_system_privacy_summary_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_system_privacy_summary_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get user system privacy summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_privacy_summary_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_system_privacy_summary" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/system-privacy-summary', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_system_security_control_details(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get systems security control details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_security_control_details(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_system_security_control_details_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_system_security_control_details_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_system_security_control_details_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get systems security control details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_security_control_details_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_system_security_control_details" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/system-security-controls-details', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_system_sensor_hardware_details(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system sensor hardware details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_sensor_hardware_details(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_system_sensor_hardware_details_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_system_sensor_hardware_details_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_system_sensor_hardware_details_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system sensor hardware details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_sensor_hardware_details_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_system_sensor_hardware_details" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/system-sensor-hardware-details', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_system_sensor_hardware_summary(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system sensor hardware summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_sensor_hardware_summary(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_system_sensor_hardware_summary_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_system_sensor_hardware_summary_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_system_sensor_hardware_summary_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get system sensor hardware summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_sensor_hardware_summary_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_system_sensor_hardware_summary" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/system-sensor-hardware-summary', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_system_status_details(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get systems status detail dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_status_details(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_system_status_details_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_system_status_details_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_system_status_details_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get systems status detail dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_system_status_details_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_system_status_details" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/system-status-details', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_user_system_assignments_details(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get user system assignments details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_user_system_assignments_details(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_user_system_assignments_details_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_user_system_assignments_details_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_user_system_assignments_details_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get user system assignments details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_user_system_assignments_details_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_user_system_assignments_details" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/user-system-assignments-details', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_va_omb_fsma_saop_summary(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get VA OMB-FISMA SAOP summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_va_omb_fsma_saop_summary(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_va_omb_fsma_saop_summary_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_va_omb_fsma_saop_summary_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_va_omb_fsma_saop_summary_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get VA OMB-FISMA SAOP summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_va_omb_fsma_saop_summary_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_va_omb_fsma_saop_summary" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/va-omb-fisma-saop-summary', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_va_system_a2_summary(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get VA system A2.0 summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_va_system_a2_summary(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_va_system_a2_summary_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_va_system_a2_summary_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_va_system_a2_summary_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get VA system A2.0 summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_va_system_a2_summary_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_va_system_a2_summary" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/va-system-a2-summary', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_va_system_aa_summary(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get VA system A&A summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_va_system_aa_summary(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_va_system_aa_summary_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_va_system_aa_summary_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_va_system_aa_summary_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get VA system A&A summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_va_system_aa_summary_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_va_system_aa_summary" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/va-system-aa-summary', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_va_system_fisma_invetory_crypto_summary(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get VA system FISMA inventory crypto summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_va_system_fisma_invetory_crypto_summary(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_va_system_fisma_invetory_crypto_summary_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_va_system_fisma_invetory_crypto_summary_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_va_system_fisma_invetory_crypto_summary_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get VA system FISMA inventory crypto summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_va_system_fisma_invetory_crypto_summary_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_va_system_fisma_invetory_crypto_summary" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/va-system-fisma-inventory-crypto-summary', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_va_system_fisma_invetory_summary(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get VA system FISMA inventory summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_va_system_fisma_invetory_summary(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_va_system_fisma_invetory_summary_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_va_system_fisma_invetory_summary_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_va_system_fisma_invetory_summary_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get VA system FISMA inventory summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_va_system_fisma_invetory_summary_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_va_system_fisma_invetory_summary" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/va-system-fisma-inventory-summary', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_va_system_pl109_reporting_summary(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get VA system P.L. 109 reporting summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_va_system_pl109_reporting_summary(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_va_system_pl109_reporting_summary_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_va_system_pl109_reporting_summary_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_va_system_pl109_reporting_summary_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get VA system P.L. 109 reporting summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_va_system_pl109_reporting_summary_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_va_system_pl109_reporting_summary" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/va-system-pl-109-reporting-summary', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_va_system_threat_architecture_details(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get VA system threat architecture details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_va_system_threat_architecture_details(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_va_system_threat_architecture_details_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_va_system_threat_architecture_details_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_va_system_threat_architecture_details_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get VA system threat architecture details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_va_system_threat_architecture_details_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_va_system_threat_architecture_details" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/va-system-threat-architecture-details', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_va_system_threat_risk_summary(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get VA system threat risk summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_va_system_threat_risk_summary(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_va_system_threat_risk_summary_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_va_system_threat_risk_summary_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_va_system_threat_risk_summary_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get VA system threat risk summary dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_va_system_threat_risk_summary_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_va_system_threat_risk_summary" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/va-system-threat-risks-summary', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))

    @validate_arguments
    def get_va_system_threat_source_details(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> object:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get VA system threat source details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_va_system_threat_source_details(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: object
        """
        kwargs['_return_http_data_only'] = True
        if '_preload_content' in kwargs:
            raise ValueError("Error! Please call the get_va_system_threat_source_details_with_http_info method with `_preload_content` instead and obtain raw data from ApiResponse.raw_data")
        return self.get_va_system_threat_source_details_with_http_info(org_id, excludeinherited, page_index, page_size, **kwargs)  # noqa: E501

    @validate_arguments
    def get_va_system_threat_source_details_with_http_info(self, org_id : Annotated[StrictInt, Field(..., description="**Organization Id**: The unique organization identifier.")], excludeinherited : Annotated[Optional[StrictBool], Field(description="**Exclude Inherited**: If no value is specified, the default returns false to include inherited data. ")] = None, page_index : Annotated[Optional[StrictInt], Field(description="**Page Index**: If no value is specified, the default returns results from the first page with an index of 0. ")] = None, page_size : Annotated[Optional[StrictInt], Field(description="**Page Size**: If no value is specified, the default returns 20000 per page. ")] = None, **kwargs) -> ApiResponse:  # noqa: E501
        """Get dashboard information  # noqa: E501

        Get VA system threat source details dashboard information.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_va_system_threat_source_details_with_http_info(org_id, excludeinherited, page_index, page_size, async_req=True)
        >>> result = thread.get()

        :param org_id: **Organization Id**: The unique organization identifier. (required)
        :type org_id: int
        :param excludeinherited: **Exclude Inherited**: If no value is specified, the default returns false to include inherited data. 
        :type excludeinherited: bool
        :param page_index: **Page Index**: If no value is specified, the default returns results from the first page with an index of 0. 
        :type page_index: int
        :param page_size: **Page Size**: If no value is specified, the default returns 20000 per page. 
        :type page_size: int
        :param async_req: Whether to execute the request asynchronously.
        :type async_req: bool, optional
        :param _preload_content: if False, the ApiResponse.data will
                                 be set to none and raw_data will store the 
                                 HTTP response body without reading/decoding.
                                 Default is True.
        :type _preload_content: bool, optional
        :param _return_http_data_only: response data instead of ApiResponse
                                       object with status code, headers, etc
        :type _return_http_data_only: bool, optional
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the authentication
                              in the spec for a single request.
        :type _request_auth: dict, optional
        :type _content_type: string, optional: force content-type for the request
        :return: Returns the result object.
                 If the method is called asynchronously,
                 returns the request thread.
        :rtype: tuple(object, status_code(int), headers(HTTPHeaderDict))
        """

        _params = locals()

        _all_params = [
            'org_id',
            'excludeinherited',
            'page_index',
            'page_size'
        ]
        _all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout',
                '_request_auth',
                '_content_type',
                '_headers'
            ]
        )

        # validate the arguments
        for _key, _val in _params['kwargs'].items():
            if _key not in _all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_va_system_threat_source_details" % _key
                )
            _params[_key] = _val
        del _params['kwargs']

        _collection_formats = {}

        # process the path parameters
        _path_params = {}

        # process the query parameters
        _query_params = []
        if _params.get('org_id') is not None:  # noqa: E501
            _query_params.append(('orgId', _params['org_id']))

        if _params.get('excludeinherited') is not None:  # noqa: E501
            _query_params.append(('excludeinherited', _params['excludeinherited']))

        if _params.get('page_index') is not None:  # noqa: E501
            _query_params.append(('pageIndex', _params['page_index']))

        if _params.get('page_size') is not None:  # noqa: E501
            _query_params.append(('pageSize', _params['page_size']))

        # process the header parameters
        _header_params = dict(_params.get('_headers', {}))
        # process the form parameters
        _form_params = []
        _files = {}
        # process the body parameter
        _body_params = None
        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # authentication setting
        _auth_settings = ['apiKey', 'mockType', 'userId']  # noqa: E501

        _response_types_map = {
            '200': "object",
            '400': "Response400",
            '401': "Response401",
            '403': "Response403",
            '404': "Response404",
            '405': "Response405",
            '490': "Response490",
            '500': "Response500",
        }

        return self.api_client.call_api(
            '/api/dashboards/va-system-threat-sources-details', 'GET',
            _path_params,
            _query_params,
            _header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            response_types_map=_response_types_map,
            auth_settings=_auth_settings,
            async_req=_params.get('async_req'),
            _return_http_data_only=_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=_params.get('_preload_content', True),
            _request_timeout=_params.get('_request_timeout'),
            collection_formats=_collection_formats,
            _request_auth=_params.get('_request_auth'))
