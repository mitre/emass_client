# coding: utf-8

"""
    Enterprise Mission Assurance Support Service (eMASS)

    The eMASS Representational State Transfer (REST) Application Programming Interface (API) enables users to perform assessments and complete actions associated with system records.  The eMASS API provides an interface for application to communicate eMASS Services. For information on how to register and use the eMASS API reference the [eMASS API Getting Started](eMASSGettingStarted.md).  Additional information about eMASS can be obtain by contacting the National Industrial Security Program (NISP). Points of Contact are: 

    The version of the OpenAPI document: v3.22
    Contact: disa.global.servicedesk.mbx.ma-ticket-request@mail.mil
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictInt, StrictStr
from typing import Any, List, Optional
from typing_extensions import Annotated
from emass_client.models.poam_request_delete_body_inner import PoamRequestDeleteBodyInner
from emass_client.models.poam_response_get_poams import PoamResponseGetPoams
from emass_client.models.poam_response_get_systems import PoamResponseGetSystems
from emass_client.models.poam_response_post_put_delete import PoamResponsePostPutDelete

from emass_client.api_client import ApiClient, RequestSerialized
from emass_client.api_response import ApiResponse
from emass_client.rest import RESTResponseType


class POAMApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def add_poam_by_system_id(
        self,
        system_id: Annotated[StrictInt, Field(description="**System Id**: The unique system record identifier.")],
        poam_required_fields: Annotated[List[Any], Field(description="Example request body to add POA&M(s) to a system (systemId)")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> PoamResponsePostPutDelete:
        """Add one or many POA&M items in a system

        Add a POA&M for given `systemId`  **Request Body Required Fields** <table>   <thead>     <tr><th><b>Field</b></th><th><b>Require/Condition</b></th></tr>   </thead>   <tbody>     <tr><td><code>status</code></td><td>Always (every POST)</td></tr>     <tr><td><code>vulnerabilityDescription</code></td><td>Always (every POST)</td></tr>     <tr><td><code>sourceIdentifyingVulnerability</code></td><td>Always (every POST)</td></tr>     <tr><td><code>pocOrganization</code></td><td>Always (every POST)</td></tr>     <tr><td><code>resources</code></td><td>Always (every POST)</td></tr>     <tr><td><code>identifiedInCFOAuditOrOtherReview</code></td><td>Required for VA. Optional for Army and USCG.</td></tr>     <tr><td><code>scheduledCompletionDate</code></td><td>Required for ongoing and completed POA&M items</td></tr>     <tr><td><code>pocFirstName</code></td><td>Only if Last Name, Email, or Phone Number have data</td></tr>     <tr><td><code>pocLastName</code></td><td>Only if First Name, Email, or Phone Number have data</td></tr>     <tr><td><code>pocEmail</code></td><td>Only if First Name, Last Name, or Phone Number have data</td></tr>     <tr><td><code>pocPhoneNumber</code></td><td>Only if First Name, Last Name, or Email have data</td></tr>     <tr><td><code>completionDate</code></td><td>For completed POA&M Item only</td></tr>     <tr><td><code>comments</code></td><td>For completed or Risk Accepted POA&M Items only</td></tr>   </tbody> </table>  **NOTE**: Certain eMASS instances also require the Risk Analysis fields to be populated:   - `severity`   - `relevanceOfThreat`   - `likelihood`   - `impact`   - `residualRiskLevel`   - `mitigations`  </br> **Business Rules**  The following rules apply to the Review Status `status` field value: <table>   <thead><tr><th><b>Value</b></th><th><b>Rule</b></th></tr></thead>   <tbody>     <tr><td><b>Not Approved</b></td><td>POA&M cannot be saved if Milestone Scheduled Completion Date exceeds POA&M Item Scheduled Completion Date</td></tr>     <tr><td><b>Approved</b></td><td>POA&M can only be saved if Milestone Scheduled Completion Date exceeds POA&M Item Scheduled Completion Date</td></tr>     <tr><td></td><td>Are required to have a Severity Value assigned</td></tr>     <tr><td><b>Completed</b> or <b>Ongoing</b></td><td>Cannot be saved without Milestones</td></tr>     <tr><td><b>Risk Accepted</b></td><td>POA&M Item cannot be saved with a Scheduled Completion Date <code>scheduledCompletionDate</code> or have Milestones</td></tr>     <tr><td><b>Approved</b> or <b>Completed</b> or <b>Ongoing</b></td><td>Cannot update Scheduled Completion Date</td></tr>  </tbody> </table>  **Additional Rules** - POA&M Item cannot be saved if associated Security Control or AP is inherited. - Completed POA&M Item cannot be saved if Completion Date (`completionDate`) is in the future. - POA&M Items cannot be updated if they are included in an active package. - Archived POA&M Items cannot be updated. - POA&M Items with a status of \"Not Applicable\" will be updated through test result creation. - If the Security Control or Assessment Procedure does not exist in the system, the POA&M Item maybe imported at the System Level.   **Fields Characters Limitation** - POA&M Item cannot be saved if the Point of Contact (POC) fields exceed 100 characters:   - `pocOrganization` `pocFirstName`, `pocLastName`, `pocEmail`, `pocPhoneNumber` - POA&M Item cannot be saved if Resources (`resource`) field exceeds 250 characters - POA&M Item cannot be saved if the following fields exceeds 2,000 characters:   - `mitigations`, `sourceIdentifyingVulnerability`, `comments`   - Milestones Field: `description` - POA&M Items cannot be saved if Milestone Description (`description`) exceeds 2,000 characters.

        :param system_id: **System Id**: The unique system record identifier. (required)
        :type system_id: int
        :param poam_required_fields: Example request body to add POA&M(s) to a system (systemId) (required)
        :type poam_required_fields: List[PoamRequiredFields]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._add_poam_by_system_id_serialize(
            system_id=system_id,
            poam_required_fields=poam_required_fields,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PoamResponsePostPutDelete",
            '201': "Created",
            '400': "BadRequest",
            '401': "Unauthorized",
            '403': "Forbidden",
            '404': "NotFound",
            '405': "MethodNotAllowed",
            '411': "LengthRequired",
            '500': "InternalServerError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def add_poam_by_system_id_with_http_info(
        self,
        system_id: Annotated[StrictInt, Field(description="**System Id**: The unique system record identifier.")],
        poam_required_fields: Annotated[List[Any], Field(description="Example request body to add POA&M(s) to a system (systemId)")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[PoamResponsePostPutDelete]:
        """Add one or many POA&M items in a system

        Add a POA&M for given `systemId`  **Request Body Required Fields** <table>   <thead>     <tr><th><b>Field</b></th><th><b>Require/Condition</b></th></tr>   </thead>   <tbody>     <tr><td><code>status</code></td><td>Always (every POST)</td></tr>     <tr><td><code>vulnerabilityDescription</code></td><td>Always (every POST)</td></tr>     <tr><td><code>sourceIdentifyingVulnerability</code></td><td>Always (every POST)</td></tr>     <tr><td><code>pocOrganization</code></td><td>Always (every POST)</td></tr>     <tr><td><code>resources</code></td><td>Always (every POST)</td></tr>     <tr><td><code>identifiedInCFOAuditOrOtherReview</code></td><td>Required for VA. Optional for Army and USCG.</td></tr>     <tr><td><code>scheduledCompletionDate</code></td><td>Required for ongoing and completed POA&M items</td></tr>     <tr><td><code>pocFirstName</code></td><td>Only if Last Name, Email, or Phone Number have data</td></tr>     <tr><td><code>pocLastName</code></td><td>Only if First Name, Email, or Phone Number have data</td></tr>     <tr><td><code>pocEmail</code></td><td>Only if First Name, Last Name, or Phone Number have data</td></tr>     <tr><td><code>pocPhoneNumber</code></td><td>Only if First Name, Last Name, or Email have data</td></tr>     <tr><td><code>completionDate</code></td><td>For completed POA&M Item only</td></tr>     <tr><td><code>comments</code></td><td>For completed or Risk Accepted POA&M Items only</td></tr>   </tbody> </table>  **NOTE**: Certain eMASS instances also require the Risk Analysis fields to be populated:   - `severity`   - `relevanceOfThreat`   - `likelihood`   - `impact`   - `residualRiskLevel`   - `mitigations`  </br> **Business Rules**  The following rules apply to the Review Status `status` field value: <table>   <thead><tr><th><b>Value</b></th><th><b>Rule</b></th></tr></thead>   <tbody>     <tr><td><b>Not Approved</b></td><td>POA&M cannot be saved if Milestone Scheduled Completion Date exceeds POA&M Item Scheduled Completion Date</td></tr>     <tr><td><b>Approved</b></td><td>POA&M can only be saved if Milestone Scheduled Completion Date exceeds POA&M Item Scheduled Completion Date</td></tr>     <tr><td></td><td>Are required to have a Severity Value assigned</td></tr>     <tr><td><b>Completed</b> or <b>Ongoing</b></td><td>Cannot be saved without Milestones</td></tr>     <tr><td><b>Risk Accepted</b></td><td>POA&M Item cannot be saved with a Scheduled Completion Date <code>scheduledCompletionDate</code> or have Milestones</td></tr>     <tr><td><b>Approved</b> or <b>Completed</b> or <b>Ongoing</b></td><td>Cannot update Scheduled Completion Date</td></tr>  </tbody> </table>  **Additional Rules** - POA&M Item cannot be saved if associated Security Control or AP is inherited. - Completed POA&M Item cannot be saved if Completion Date (`completionDate`) is in the future. - POA&M Items cannot be updated if they are included in an active package. - Archived POA&M Items cannot be updated. - POA&M Items with a status of \"Not Applicable\" will be updated through test result creation. - If the Security Control or Assessment Procedure does not exist in the system, the POA&M Item maybe imported at the System Level.   **Fields Characters Limitation** - POA&M Item cannot be saved if the Point of Contact (POC) fields exceed 100 characters:   - `pocOrganization` `pocFirstName`, `pocLastName`, `pocEmail`, `pocPhoneNumber` - POA&M Item cannot be saved if Resources (`resource`) field exceeds 250 characters - POA&M Item cannot be saved if the following fields exceeds 2,000 characters:   - `mitigations`, `sourceIdentifyingVulnerability`, `comments`   - Milestones Field: `description` - POA&M Items cannot be saved if Milestone Description (`description`) exceeds 2,000 characters.

        :param system_id: **System Id**: The unique system record identifier. (required)
        :type system_id: int
        :param poam_required_fields: Example request body to add POA&M(s) to a system (systemId) (required)
        :type poam_required_fields: List[PoamRequiredFields]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._add_poam_by_system_id_serialize(
            system_id=system_id,
            poam_required_fields=poam_required_fields,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PoamResponsePostPutDelete",
            '201': "Created",
            '400': "BadRequest",
            '401': "Unauthorized",
            '403': "Forbidden",
            '404': "NotFound",
            '405': "MethodNotAllowed",
            '411': "LengthRequired",
            '500': "InternalServerError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def add_poam_by_system_id_without_preload_content(
        self,
        system_id: Annotated[StrictInt, Field(description="**System Id**: The unique system record identifier.")],
        poam_required_fields: Annotated[List[Any], Field(description="Example request body to add POA&M(s) to a system (systemId)")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Add one or many POA&M items in a system

        Add a POA&M for given `systemId`  **Request Body Required Fields** <table>   <thead>     <tr><th><b>Field</b></th><th><b>Require/Condition</b></th></tr>   </thead>   <tbody>     <tr><td><code>status</code></td><td>Always (every POST)</td></tr>     <tr><td><code>vulnerabilityDescription</code></td><td>Always (every POST)</td></tr>     <tr><td><code>sourceIdentifyingVulnerability</code></td><td>Always (every POST)</td></tr>     <tr><td><code>pocOrganization</code></td><td>Always (every POST)</td></tr>     <tr><td><code>resources</code></td><td>Always (every POST)</td></tr>     <tr><td><code>identifiedInCFOAuditOrOtherReview</code></td><td>Required for VA. Optional for Army and USCG.</td></tr>     <tr><td><code>scheduledCompletionDate</code></td><td>Required for ongoing and completed POA&M items</td></tr>     <tr><td><code>pocFirstName</code></td><td>Only if Last Name, Email, or Phone Number have data</td></tr>     <tr><td><code>pocLastName</code></td><td>Only if First Name, Email, or Phone Number have data</td></tr>     <tr><td><code>pocEmail</code></td><td>Only if First Name, Last Name, or Phone Number have data</td></tr>     <tr><td><code>pocPhoneNumber</code></td><td>Only if First Name, Last Name, or Email have data</td></tr>     <tr><td><code>completionDate</code></td><td>For completed POA&M Item only</td></tr>     <tr><td><code>comments</code></td><td>For completed or Risk Accepted POA&M Items only</td></tr>   </tbody> </table>  **NOTE**: Certain eMASS instances also require the Risk Analysis fields to be populated:   - `severity`   - `relevanceOfThreat`   - `likelihood`   - `impact`   - `residualRiskLevel`   - `mitigations`  </br> **Business Rules**  The following rules apply to the Review Status `status` field value: <table>   <thead><tr><th><b>Value</b></th><th><b>Rule</b></th></tr></thead>   <tbody>     <tr><td><b>Not Approved</b></td><td>POA&M cannot be saved if Milestone Scheduled Completion Date exceeds POA&M Item Scheduled Completion Date</td></tr>     <tr><td><b>Approved</b></td><td>POA&M can only be saved if Milestone Scheduled Completion Date exceeds POA&M Item Scheduled Completion Date</td></tr>     <tr><td></td><td>Are required to have a Severity Value assigned</td></tr>     <tr><td><b>Completed</b> or <b>Ongoing</b></td><td>Cannot be saved without Milestones</td></tr>     <tr><td><b>Risk Accepted</b></td><td>POA&M Item cannot be saved with a Scheduled Completion Date <code>scheduledCompletionDate</code> or have Milestones</td></tr>     <tr><td><b>Approved</b> or <b>Completed</b> or <b>Ongoing</b></td><td>Cannot update Scheduled Completion Date</td></tr>  </tbody> </table>  **Additional Rules** - POA&M Item cannot be saved if associated Security Control or AP is inherited. - Completed POA&M Item cannot be saved if Completion Date (`completionDate`) is in the future. - POA&M Items cannot be updated if they are included in an active package. - Archived POA&M Items cannot be updated. - POA&M Items with a status of \"Not Applicable\" will be updated through test result creation. - If the Security Control or Assessment Procedure does not exist in the system, the POA&M Item maybe imported at the System Level.   **Fields Characters Limitation** - POA&M Item cannot be saved if the Point of Contact (POC) fields exceed 100 characters:   - `pocOrganization` `pocFirstName`, `pocLastName`, `pocEmail`, `pocPhoneNumber` - POA&M Item cannot be saved if Resources (`resource`) field exceeds 250 characters - POA&M Item cannot be saved if the following fields exceeds 2,000 characters:   - `mitigations`, `sourceIdentifyingVulnerability`, `comments`   - Milestones Field: `description` - POA&M Items cannot be saved if Milestone Description (`description`) exceeds 2,000 characters.

        :param system_id: **System Id**: The unique system record identifier. (required)
        :type system_id: int
        :param poam_required_fields: Example request body to add POA&M(s) to a system (systemId) (required)
        :type poam_required_fields: List[PoamRequiredFields]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._add_poam_by_system_id_serialize(
            system_id=system_id,
            poam_required_fields=poam_required_fields,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PoamResponsePostPutDelete",
            '201': "Created",
            '400': "BadRequest",
            '401': "Unauthorized",
            '403': "Forbidden",
            '404': "NotFound",
            '405': "MethodNotAllowed",
            '411': "LengthRequired",
            '500': "InternalServerError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _add_poam_by_system_id_serialize(
        self,
        system_id,
        poam_required_fields,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'PoamRequiredFields': '',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if system_id is not None:
            _path_params['systemId'] = system_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if poam_required_fields is not None:
            _body_params = poam_required_fields


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'apiKey', 
            'mockType', 
            'userId'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/api/systems/{systemId}/poams',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def delete_poam(
        self,
        system_id: Annotated[StrictInt, Field(description="**System Id**: The unique system record identifier.")],
        poam_request_delete_body_inner: Annotated[List[PoamRequestDeleteBodyInner], Field(description="Delete the given POA&M Id")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> PoamResponsePostPutDelete:
        """Remove one or many POA&M items in a system

        Remove the POA&M matching `systemId` path parameter and `poamId` Request Body<br>

        :param system_id: **System Id**: The unique system record identifier. (required)
        :type system_id: int
        :param poam_request_delete_body_inner: Delete the given POA&M Id (required)
        :type poam_request_delete_body_inner: List[PoamRequestDeleteBodyInner]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._delete_poam_serialize(
            system_id=system_id,
            poam_request_delete_body_inner=poam_request_delete_body_inner,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PoamResponsePostPutDelete",
            '400': "BadRequest",
            '401': "Unauthorized",
            '403': "Forbidden",
            '404': "NotFound",
            '500': "InternalServerError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def delete_poam_with_http_info(
        self,
        system_id: Annotated[StrictInt, Field(description="**System Id**: The unique system record identifier.")],
        poam_request_delete_body_inner: Annotated[List[PoamRequestDeleteBodyInner], Field(description="Delete the given POA&M Id")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[PoamResponsePostPutDelete]:
        """Remove one or many POA&M items in a system

        Remove the POA&M matching `systemId` path parameter and `poamId` Request Body<br>

        :param system_id: **System Id**: The unique system record identifier. (required)
        :type system_id: int
        :param poam_request_delete_body_inner: Delete the given POA&M Id (required)
        :type poam_request_delete_body_inner: List[PoamRequestDeleteBodyInner]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._delete_poam_serialize(
            system_id=system_id,
            poam_request_delete_body_inner=poam_request_delete_body_inner,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PoamResponsePostPutDelete",
            '400': "BadRequest",
            '401': "Unauthorized",
            '403': "Forbidden",
            '404': "NotFound",
            '500': "InternalServerError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def delete_poam_without_preload_content(
        self,
        system_id: Annotated[StrictInt, Field(description="**System Id**: The unique system record identifier.")],
        poam_request_delete_body_inner: Annotated[List[PoamRequestDeleteBodyInner], Field(description="Delete the given POA&M Id")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Remove one or many POA&M items in a system

        Remove the POA&M matching `systemId` path parameter and `poamId` Request Body<br>

        :param system_id: **System Id**: The unique system record identifier. (required)
        :type system_id: int
        :param poam_request_delete_body_inner: Delete the given POA&M Id (required)
        :type poam_request_delete_body_inner: List[PoamRequestDeleteBodyInner]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._delete_poam_serialize(
            system_id=system_id,
            poam_request_delete_body_inner=poam_request_delete_body_inner,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PoamResponsePostPutDelete",
            '400': "BadRequest",
            '401': "Unauthorized",
            '403': "Forbidden",
            '404': "NotFound",
            '500': "InternalServerError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _delete_poam_serialize(
        self,
        system_id,
        poam_request_delete_body_inner,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'PoamRequestDeleteBodyInner': '',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if system_id is not None:
            _path_params['systemId'] = system_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if poam_request_delete_body_inner is not None:
            _body_params = poam_request_delete_body_inner


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'apiKey', 
            'mockType', 
            'userId'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/api/systems/{systemId}/poams',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_system_poams(
        self,
        system_id: Annotated[StrictInt, Field(description="**System Id**: The unique system record identifier.")],
        scheduled_completion_date_start: Annotated[Optional[StrictStr], Field(description="**Date Started**: Filter query by the scheduled completion start date (Unix date format).")] = None,
        scheduled_completion_date_end: Annotated[Optional[StrictStr], Field(description="**Date Ended**: Filter query by the scheduled completion start date (Unix date format).")] = None,
        control_acronyms: Annotated[Optional[StrictStr], Field(description="**Control Acronym**: Filter query by given system acronym (single value or comma separated).")] = None,
        assessment_procedures: Annotated[Optional[StrictStr], Field(description="**Assessment Procedure**: Filter query by given Security Control Assessment Procedure (single value or comma separated).")] = None,
        ccis: Annotated[Optional[StrictStr], Field(description="**CCI System**: Filter query by Control Correlation Identifiers (CCIs) (single value or comma separated).")] = None,
        system_only: Annotated[Optional[StrictBool], Field(description="**Systems Only**: Indicates that only system(s) information is retrieved.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> PoamResponseGetSystems:
        """Get one or many POA&M items in a system

        Returns system(s) containing POA&M items for matching parameters.

        :param system_id: **System Id**: The unique system record identifier. (required)
        :type system_id: int
        :param scheduled_completion_date_start: **Date Started**: Filter query by the scheduled completion start date (Unix date format).
        :type scheduled_completion_date_start: str
        :param scheduled_completion_date_end: **Date Ended**: Filter query by the scheduled completion start date (Unix date format).
        :type scheduled_completion_date_end: str
        :param control_acronyms: **Control Acronym**: Filter query by given system acronym (single value or comma separated).
        :type control_acronyms: str
        :param assessment_procedures: **Assessment Procedure**: Filter query by given Security Control Assessment Procedure (single value or comma separated).
        :type assessment_procedures: str
        :param ccis: **CCI System**: Filter query by Control Correlation Identifiers (CCIs) (single value or comma separated).
        :type ccis: str
        :param system_only: **Systems Only**: Indicates that only system(s) information is retrieved.
        :type system_only: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_system_poams_serialize(
            system_id=system_id,
            scheduled_completion_date_start=scheduled_completion_date_start,
            scheduled_completion_date_end=scheduled_completion_date_end,
            control_acronyms=control_acronyms,
            assessment_procedures=assessment_procedures,
            ccis=ccis,
            system_only=system_only,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PoamResponseGetSystems",
            '400': "BadRequest",
            '401': "Unauthorized",
            '403': "Forbidden",
            '404': "NotFound",
            '405': "MethodNotAllowed",
            '490': "APIRuleFailed",
            '500': "InternalServerError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_system_poams_with_http_info(
        self,
        system_id: Annotated[StrictInt, Field(description="**System Id**: The unique system record identifier.")],
        scheduled_completion_date_start: Annotated[Optional[StrictStr], Field(description="**Date Started**: Filter query by the scheduled completion start date (Unix date format).")] = None,
        scheduled_completion_date_end: Annotated[Optional[StrictStr], Field(description="**Date Ended**: Filter query by the scheduled completion start date (Unix date format).")] = None,
        control_acronyms: Annotated[Optional[StrictStr], Field(description="**Control Acronym**: Filter query by given system acronym (single value or comma separated).")] = None,
        assessment_procedures: Annotated[Optional[StrictStr], Field(description="**Assessment Procedure**: Filter query by given Security Control Assessment Procedure (single value or comma separated).")] = None,
        ccis: Annotated[Optional[StrictStr], Field(description="**CCI System**: Filter query by Control Correlation Identifiers (CCIs) (single value or comma separated).")] = None,
        system_only: Annotated[Optional[StrictBool], Field(description="**Systems Only**: Indicates that only system(s) information is retrieved.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[PoamResponseGetSystems]:
        """Get one or many POA&M items in a system

        Returns system(s) containing POA&M items for matching parameters.

        :param system_id: **System Id**: The unique system record identifier. (required)
        :type system_id: int
        :param scheduled_completion_date_start: **Date Started**: Filter query by the scheduled completion start date (Unix date format).
        :type scheduled_completion_date_start: str
        :param scheduled_completion_date_end: **Date Ended**: Filter query by the scheduled completion start date (Unix date format).
        :type scheduled_completion_date_end: str
        :param control_acronyms: **Control Acronym**: Filter query by given system acronym (single value or comma separated).
        :type control_acronyms: str
        :param assessment_procedures: **Assessment Procedure**: Filter query by given Security Control Assessment Procedure (single value or comma separated).
        :type assessment_procedures: str
        :param ccis: **CCI System**: Filter query by Control Correlation Identifiers (CCIs) (single value or comma separated).
        :type ccis: str
        :param system_only: **Systems Only**: Indicates that only system(s) information is retrieved.
        :type system_only: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_system_poams_serialize(
            system_id=system_id,
            scheduled_completion_date_start=scheduled_completion_date_start,
            scheduled_completion_date_end=scheduled_completion_date_end,
            control_acronyms=control_acronyms,
            assessment_procedures=assessment_procedures,
            ccis=ccis,
            system_only=system_only,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PoamResponseGetSystems",
            '400': "BadRequest",
            '401': "Unauthorized",
            '403': "Forbidden",
            '404': "NotFound",
            '405': "MethodNotAllowed",
            '490': "APIRuleFailed",
            '500': "InternalServerError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_system_poams_without_preload_content(
        self,
        system_id: Annotated[StrictInt, Field(description="**System Id**: The unique system record identifier.")],
        scheduled_completion_date_start: Annotated[Optional[StrictStr], Field(description="**Date Started**: Filter query by the scheduled completion start date (Unix date format).")] = None,
        scheduled_completion_date_end: Annotated[Optional[StrictStr], Field(description="**Date Ended**: Filter query by the scheduled completion start date (Unix date format).")] = None,
        control_acronyms: Annotated[Optional[StrictStr], Field(description="**Control Acronym**: Filter query by given system acronym (single value or comma separated).")] = None,
        assessment_procedures: Annotated[Optional[StrictStr], Field(description="**Assessment Procedure**: Filter query by given Security Control Assessment Procedure (single value or comma separated).")] = None,
        ccis: Annotated[Optional[StrictStr], Field(description="**CCI System**: Filter query by Control Correlation Identifiers (CCIs) (single value or comma separated).")] = None,
        system_only: Annotated[Optional[StrictBool], Field(description="**Systems Only**: Indicates that only system(s) information is retrieved.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get one or many POA&M items in a system

        Returns system(s) containing POA&M items for matching parameters.

        :param system_id: **System Id**: The unique system record identifier. (required)
        :type system_id: int
        :param scheduled_completion_date_start: **Date Started**: Filter query by the scheduled completion start date (Unix date format).
        :type scheduled_completion_date_start: str
        :param scheduled_completion_date_end: **Date Ended**: Filter query by the scheduled completion start date (Unix date format).
        :type scheduled_completion_date_end: str
        :param control_acronyms: **Control Acronym**: Filter query by given system acronym (single value or comma separated).
        :type control_acronyms: str
        :param assessment_procedures: **Assessment Procedure**: Filter query by given Security Control Assessment Procedure (single value or comma separated).
        :type assessment_procedures: str
        :param ccis: **CCI System**: Filter query by Control Correlation Identifiers (CCIs) (single value or comma separated).
        :type ccis: str
        :param system_only: **Systems Only**: Indicates that only system(s) information is retrieved.
        :type system_only: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_system_poams_serialize(
            system_id=system_id,
            scheduled_completion_date_start=scheduled_completion_date_start,
            scheduled_completion_date_end=scheduled_completion_date_end,
            control_acronyms=control_acronyms,
            assessment_procedures=assessment_procedures,
            ccis=ccis,
            system_only=system_only,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PoamResponseGetSystems",
            '400': "BadRequest",
            '401': "Unauthorized",
            '403': "Forbidden",
            '404': "NotFound",
            '405': "MethodNotAllowed",
            '490': "APIRuleFailed",
            '500': "InternalServerError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_system_poams_serialize(
        self,
        system_id,
        scheduled_completion_date_start,
        scheduled_completion_date_end,
        control_acronyms,
        assessment_procedures,
        ccis,
        system_only,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if system_id is not None:
            _path_params['systemId'] = system_id
        # process the query parameters
        if scheduled_completion_date_start is not None:
            
            _query_params.append(('scheduledCompletionDateStart', scheduled_completion_date_start))
            
        if scheduled_completion_date_end is not None:
            
            _query_params.append(('scheduledCompletionDateEnd', scheduled_completion_date_end))
            
        if control_acronyms is not None:
            
            _query_params.append(('controlAcronyms', control_acronyms))
            
        if assessment_procedures is not None:
            
            _query_params.append(('assessmentProcedures', assessment_procedures))
            
        if ccis is not None:
            
            _query_params.append(('ccis', ccis))
            
        if system_only is not None:
            
            _query_params.append(('systemOnly', system_only))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKey', 
            'mockType', 
            'userId'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/systems/{systemId}/poams',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_system_poams_by_poam_id(
        self,
        system_id: Annotated[StrictInt, Field(description="**System Id**: The unique system record identifier.")],
        poam_id: Annotated[StrictInt, Field(description="**POA&M Id**: The unique POA&M record identifier.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> PoamResponseGetPoams:
        """Get POA&M item by ID in a system

        Returns system(s) containing POA&M items for matching parameters.

        :param system_id: **System Id**: The unique system record identifier. (required)
        :type system_id: int
        :param poam_id: **POA&M Id**: The unique POA&M record identifier. (required)
        :type poam_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_system_poams_by_poam_id_serialize(
            system_id=system_id,
            poam_id=poam_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PoamResponseGetPoams",
            '400': "BadRequest",
            '401': "Unauthorized",
            '403': "Forbidden",
            '404': "NotFound",
            '405': "MethodNotAllowed",
            '490': "APIRuleFailed",
            '500': "InternalServerError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_system_poams_by_poam_id_with_http_info(
        self,
        system_id: Annotated[StrictInt, Field(description="**System Id**: The unique system record identifier.")],
        poam_id: Annotated[StrictInt, Field(description="**POA&M Id**: The unique POA&M record identifier.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[PoamResponseGetPoams]:
        """Get POA&M item by ID in a system

        Returns system(s) containing POA&M items for matching parameters.

        :param system_id: **System Id**: The unique system record identifier. (required)
        :type system_id: int
        :param poam_id: **POA&M Id**: The unique POA&M record identifier. (required)
        :type poam_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_system_poams_by_poam_id_serialize(
            system_id=system_id,
            poam_id=poam_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PoamResponseGetPoams",
            '400': "BadRequest",
            '401': "Unauthorized",
            '403': "Forbidden",
            '404': "NotFound",
            '405': "MethodNotAllowed",
            '490': "APIRuleFailed",
            '500': "InternalServerError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_system_poams_by_poam_id_without_preload_content(
        self,
        system_id: Annotated[StrictInt, Field(description="**System Id**: The unique system record identifier.")],
        poam_id: Annotated[StrictInt, Field(description="**POA&M Id**: The unique POA&M record identifier.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get POA&M item by ID in a system

        Returns system(s) containing POA&M items for matching parameters.

        :param system_id: **System Id**: The unique system record identifier. (required)
        :type system_id: int
        :param poam_id: **POA&M Id**: The unique POA&M record identifier. (required)
        :type poam_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_system_poams_by_poam_id_serialize(
            system_id=system_id,
            poam_id=poam_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PoamResponseGetPoams",
            '400': "BadRequest",
            '401': "Unauthorized",
            '403': "Forbidden",
            '404': "NotFound",
            '405': "MethodNotAllowed",
            '490': "APIRuleFailed",
            '500': "InternalServerError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_system_poams_by_poam_id_serialize(
        self,
        system_id,
        poam_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if system_id is not None:
            _path_params['systemId'] = system_id
        if poam_id is not None:
            _path_params['poamId'] = poam_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKey', 
            'mockType', 
            'userId'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/systems/{systemId}/poams/{poamId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def update_poam_by_system_id(
        self,
        system_id: Annotated[StrictInt, Field(description="**System Id**: The unique system record identifier.")],
        poam_ids: Annotated[List[Any], Field(description="Example request body for updating a POA&M for a system (systemId)")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> PoamResponsePostPutDelete:
        """Update one or many POA&M items in a system

        Update a POA&M for given `systemId`<br>  **Request Body Required Fields** <table>   <thead>     <tr><th><b>Field</b></th><th><b>Require/Condition</b></th></tr>   </thead>   <tbody>     <tr><td><code>poamId</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>displayPoamId</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>status</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>vulnerabilityDescription</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>sourceIdentifyingVulnerability</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>pocOrganization</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>resources</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>identifiedInCFOAuditOrOtherReview</code></td><td>Required for VA. Optional for Army and USCG.</td></tr>     <tr><td><code>scheduledCompletionDate</code></td><td>Required for ongoing and completed POA&M items</td></tr>     <tr><td><code>pocFirstName</code></td><td>Only if Last Name, Email, or Phone Number have data</td></tr>     <tr><td><code>pocLastName</code></td><td>Only if First Name, Email, or Phone Number have data</td></tr>     <tr><td><code>pocEmail</code></td><td>Only if First Name, Last Name, or Phone Number have data</td></tr>     <tr><td><code>pocPhoneNumber</code></td><td>Only if First Name, Last Name, or Email have data</td></tr>     <tr><td><code>completionDate</code></td><td>For completed POA&M Item only</td></tr>     <tr><td><code>comments</code></td><td>For completed or Risk Accepted POA&M Items only</td></tr>   </tbody> </table>  **NOTES**: - Certain eMASS instances also require the Risk Analysis fields to be populated:   - `severity`   - `relevanceOfThreat`   - `likelihood`   - `impact`   - `residualRiskLevel`   - `mitigations` - To prevent uploading duplicate/undesired milestones through the POA&M PUT include an `isActive` field for the milestone and set it to equal to false `(isActive=false)`. </br>  **Business Rules:** See business rules for the POST endpoint

        :param system_id: **System Id**: The unique system record identifier. (required)
        :type system_id: int
        :param poam_ids: Example request body for updating a POA&M for a system (systemId) (required)
        :type poam_ids: List[PoamIds]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._update_poam_by_system_id_serialize(
            system_id=system_id,
            poam_ids=poam_ids,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PoamResponsePostPutDelete",
            '400': "BadRequest",
            '401': "Unauthorized",
            '403': "Forbidden",
            '404': "NotFound",
            '500': "InternalServerError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def update_poam_by_system_id_with_http_info(
        self,
        system_id: Annotated[StrictInt, Field(description="**System Id**: The unique system record identifier.")],
        poam_ids: Annotated[List[Any], Field(description="Example request body for updating a POA&M for a system (systemId)")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[PoamResponsePostPutDelete]:
        """Update one or many POA&M items in a system

        Update a POA&M for given `systemId`<br>  **Request Body Required Fields** <table>   <thead>     <tr><th><b>Field</b></th><th><b>Require/Condition</b></th></tr>   </thead>   <tbody>     <tr><td><code>poamId</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>displayPoamId</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>status</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>vulnerabilityDescription</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>sourceIdentifyingVulnerability</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>pocOrganization</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>resources</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>identifiedInCFOAuditOrOtherReview</code></td><td>Required for VA. Optional for Army and USCG.</td></tr>     <tr><td><code>scheduledCompletionDate</code></td><td>Required for ongoing and completed POA&M items</td></tr>     <tr><td><code>pocFirstName</code></td><td>Only if Last Name, Email, or Phone Number have data</td></tr>     <tr><td><code>pocLastName</code></td><td>Only if First Name, Email, or Phone Number have data</td></tr>     <tr><td><code>pocEmail</code></td><td>Only if First Name, Last Name, or Phone Number have data</td></tr>     <tr><td><code>pocPhoneNumber</code></td><td>Only if First Name, Last Name, or Email have data</td></tr>     <tr><td><code>completionDate</code></td><td>For completed POA&M Item only</td></tr>     <tr><td><code>comments</code></td><td>For completed or Risk Accepted POA&M Items only</td></tr>   </tbody> </table>  **NOTES**: - Certain eMASS instances also require the Risk Analysis fields to be populated:   - `severity`   - `relevanceOfThreat`   - `likelihood`   - `impact`   - `residualRiskLevel`   - `mitigations` - To prevent uploading duplicate/undesired milestones through the POA&M PUT include an `isActive` field for the milestone and set it to equal to false `(isActive=false)`. </br>  **Business Rules:** See business rules for the POST endpoint

        :param system_id: **System Id**: The unique system record identifier. (required)
        :type system_id: int
        :param poam_ids: Example request body for updating a POA&M for a system (systemId) (required)
        :type poam_ids: List[PoamIds]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._update_poam_by_system_id_serialize(
            system_id=system_id,
            poam_ids=poam_ids,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PoamResponsePostPutDelete",
            '400': "BadRequest",
            '401': "Unauthorized",
            '403': "Forbidden",
            '404': "NotFound",
            '500': "InternalServerError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def update_poam_by_system_id_without_preload_content(
        self,
        system_id: Annotated[StrictInt, Field(description="**System Id**: The unique system record identifier.")],
        poam_ids: Annotated[List[Any], Field(description="Example request body for updating a POA&M for a system (systemId)")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Update one or many POA&M items in a system

        Update a POA&M for given `systemId`<br>  **Request Body Required Fields** <table>   <thead>     <tr><th><b>Field</b></th><th><b>Require/Condition</b></th></tr>   </thead>   <tbody>     <tr><td><code>poamId</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>displayPoamId</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>status</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>vulnerabilityDescription</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>sourceIdentifyingVulnerability</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>pocOrganization</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>resources</code></td><td>Always (every PUT)</td></tr>     <tr><td><code>identifiedInCFOAuditOrOtherReview</code></td><td>Required for VA. Optional for Army and USCG.</td></tr>     <tr><td><code>scheduledCompletionDate</code></td><td>Required for ongoing and completed POA&M items</td></tr>     <tr><td><code>pocFirstName</code></td><td>Only if Last Name, Email, or Phone Number have data</td></tr>     <tr><td><code>pocLastName</code></td><td>Only if First Name, Email, or Phone Number have data</td></tr>     <tr><td><code>pocEmail</code></td><td>Only if First Name, Last Name, or Phone Number have data</td></tr>     <tr><td><code>pocPhoneNumber</code></td><td>Only if First Name, Last Name, or Email have data</td></tr>     <tr><td><code>completionDate</code></td><td>For completed POA&M Item only</td></tr>     <tr><td><code>comments</code></td><td>For completed or Risk Accepted POA&M Items only</td></tr>   </tbody> </table>  **NOTES**: - Certain eMASS instances also require the Risk Analysis fields to be populated:   - `severity`   - `relevanceOfThreat`   - `likelihood`   - `impact`   - `residualRiskLevel`   - `mitigations` - To prevent uploading duplicate/undesired milestones through the POA&M PUT include an `isActive` field for the milestone and set it to equal to false `(isActive=false)`. </br>  **Business Rules:** See business rules for the POST endpoint

        :param system_id: **System Id**: The unique system record identifier. (required)
        :type system_id: int
        :param poam_ids: Example request body for updating a POA&M for a system (systemId) (required)
        :type poam_ids: List[PoamIds]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._update_poam_by_system_id_serialize(
            system_id=system_id,
            poam_ids=poam_ids,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PoamResponsePostPutDelete",
            '400': "BadRequest",
            '401': "Unauthorized",
            '403': "Forbidden",
            '404': "NotFound",
            '500': "InternalServerError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _update_poam_by_system_id_serialize(
        self,
        system_id,
        poam_ids,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'PoamIds': '',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if system_id is not None:
            _path_params['systemId'] = system_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if poam_ids is not None:
            _body_params = poam_ids


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'apiKey', 
            'mockType', 
            'userId'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/api/systems/{systemId}/poams',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


