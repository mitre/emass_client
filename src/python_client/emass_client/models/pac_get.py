# coding: utf-8

"""
    Enterprise Mission Assurance Support Service (eMASS)

    The Enterprise Mission Assurance Support Service (eMASS) Representational State Transfer (REST) Application Programming Interface (API) enables users to perform assessments and complete actions associated with system records.   <strong>Register External Application (that use the eMASS API)</strong></br> New users will need to [register](https://nisp.emass.apps.mil/Content/Help/jobaids/eMASS_OT_NewUser_Job_Aid.pdf) an API key with the eMASS development team prior to accessing the site for the first time. The eMASS REST API  requires a client certificate (SSL/TLS, DoD PKI only). Use the `Registration` endpoint to register the client certificate.</br></br>  Every call to the eMASS REST API will require the use of the agreed upon public key certificate and API key.  The API key must be provided in the request header for all endpoint calls (api-key). If the service receives an untrusted certificate or API key, a 401 error response code will be returned along with an error message.</br></br>  <strong>Available Request Headers</strong></br> <table>   <tr>     <th align=left>key</th>     <th align=left>Example Value</th>     <th align=left>Description</th>   </tr>   <tr>     <td>`api-key`</td>     <td>api-key-provided-by-emass</td>     <td>This API key must be provided in the request header for all endpoint calls</td>   </tr>   <tr>     <td>`user-uid`</td>     <td>USER.UID.KEY</td>     <td>This User unique identifier key must be provided in the request header for all PUT, POST, and DELETE endpoint calls</td>   </tr>   <tr>     <td></td><td></td>     <td>       Note: For DoD users this is the DoD ID Number (EIDIPI) on their DoD CAC     </td>   </tr> </table>  </br><strong>Approve API Client for Actionable Requests</strong></br> Users are required to log-in to eMASS and grant permissions for a client to update data within eMASS on their behalf. This is only required for actionable requests (PUT, POST, DELETE). The Registration Endpoint and all GET requests can be accessed without completing this process with the correct permissions. Please note that leaving a field parameter blank (for PUT/POST requests) has the potential to clear information in the active eMASS records.  To establish an account with eMASS and/or acquire an api-key/user-uid, contact one of the listed POC:   # noqa: E501

    The version of the OpenAPI document: v3.9
    Contact: disa.meade.id.mbx.emass-tier-iii-support@mail.mil
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictInt, StrictStr, validator

class PacGet(BaseModel):
    """
    PacGet
    """
    system_id: Optional[StrictInt] = Field(None, alias="systemId", description="[Required] Unique eMASS system identifier.")
    workflow: Optional[StrictStr] = Field(None, description="[Required] Values include the following:(Assess and Authorize, Assess Only, Security Plan Approval)")
    name: Optional[StrictStr] = Field(None, description="[Required] Package name. 100 Characters.")
    current_stage_name: Optional[StrictStr] = Field(None, alias="currentStageName", description="[Read-Only] Name of the current stage in the active workflow.")
    current_stage: Optional[StrictInt] = Field(None, alias="currentStage", description="[Read-Only] Number of the current stage in the active workflow.")
    total_stages: Optional[StrictInt] = Field(None, alias="totalStages", description="[Read-Only] Total number of stages in the active workflow.")
    days_at_current_stage: Optional[StrictInt] = Field(None, alias="daysAtCurrentStage", description="[Read-Only] Indicates the number of days at current workflow stage.")
    comments: Optional[StrictStr] = Field(None, description="[Required] Comments related to package approval chain. Character Limit = 4,000.")
    __properties = ["systemId", "workflow", "name", "currentStageName", "currentStage", "totalStages", "daysAtCurrentStage", "comments"]

    @validator('workflow')
    def workflow_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in ('Assess and Authorize', 'Assess Only', 'Security Plan Approval'):
            raise ValueError("must be one of enum values ('Assess and Authorize', 'Assess Only', 'Security Plan Approval')")
        return value

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> PacGet:
        """Create an instance of PacGet from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # set to None if current_stage_name (nullable) is None
        # and __fields_set__ contains the field
        if self.current_stage_name is None and "current_stage_name" in self.__fields_set__:
            _dict['currentStageName'] = None

        # set to None if current_stage (nullable) is None
        # and __fields_set__ contains the field
        if self.current_stage is None and "current_stage" in self.__fields_set__:
            _dict['currentStage'] = None

        # set to None if total_stages (nullable) is None
        # and __fields_set__ contains the field
        if self.total_stages is None and "total_stages" in self.__fields_set__:
            _dict['totalStages'] = None

        # set to None if days_at_current_stage (nullable) is None
        # and __fields_set__ contains the field
        if self.days_at_current_stage is None and "days_at_current_stage" in self.__fields_set__:
            _dict['daysAtCurrentStage'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> PacGet:
        """Create an instance of PacGet from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return PacGet.parse_obj(obj)

        _obj = PacGet.parse_obj({
            "system_id": obj.get("systemId"),
            "workflow": obj.get("workflow"),
            "name": obj.get("name"),
            "current_stage_name": obj.get("currentStageName"),
            "current_stage": obj.get("currentStage"),
            "total_stages": obj.get("totalStages"),
            "days_at_current_stage": obj.get("daysAtCurrentStage"),
            "comments": obj.get("comments")
        })
        return _obj

