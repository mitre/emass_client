=begin
#Enterprise Mission Assurance Support Service (eMASS)

#The eMASS Representational State Transfer (REST) Application Programming Interface (API) enables users to perform assessments and complete actions associated with system records.  The eMASS API provides an interface for application to communicate eMASS Services. For information on how to register and use the eMASS API reference the [eMASS API Getting Started](eMASSGettingStarted.md).  Additional information about eMASS can be obtain by contacting the National Industrial Security Program (NISP). Points of Contact are: 

The version of the OpenAPI document: v3.22
Contact: disa.global.servicedesk.mbx.ma-ticket-request@mail.mil
Generated by: https://openapi-generator.tech
Generator version: 7.12.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for EmassClient::DeviceScanResultsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DeviceScanResultsApi' do
  before do
    # run before each test
    @api_instance = EmassClient::DeviceScanResultsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DeviceScanResultsApi' do
    it 'should create an instance of DeviceScanResultsApi' do
      expect(@api_instance).to be_instance_of(EmassClient::DeviceScanResultsApi)
    end
  end

  # unit tests for add_scan_results_by_system_id
  # Add device scans in a system
  #  **Request Body Required Field** - &#x60;scanType&#x60;  Scan Type Allow Values:  &lt;ul&gt;   &lt;li&gt;acasAsrArf (.zip)&lt;/li&gt;   &lt;li&gt;acasNessus&lt;/li&gt;   &lt;li&gt;disaStigViewerCklCklb (.ckl or .cklb)&lt;/li&gt;   &lt;li&gt;disaStigViewerCmrs&lt;/li&gt;   &lt;li&gt;policyAuditor (.zip)&lt;/li&gt;          &lt;li&gt;scapComplianceChecker&lt;/li&gt; &lt;/ul&gt;   &lt;strong&gt;Business Rules&lt;/strong&gt;&lt;br&gt;  The body of a request through the Device Scan Results POST endpoint accepts a single binary file. Specific file extensions are expected depending upon the scanType parameter. For example, .ckl or .cklb files are accepted when using scanType is set to disaStigViewerCklCklb.  When set to acasAsrArf or policyAuditor, a .zip file is expected which should contain a single scan result (for example, a single pair of .asr and .arf files). Single files are expected for all other scan types as this endpoint requires files to be uploaded consecutively as opposed to in bulk.  Current scan types that are supported: &lt;ul&gt;   &lt;li&gt;ACAS: ASR/ARF&lt;/li&gt;   &lt;li&gt;ACAS: NESSUS&lt;/li&gt;   &lt;li&gt;DISA STIG Viewer: CKL/CKLB&lt;/li&gt;   &lt;li&gt;DISA STIG Viewer: CMRS&lt;/li&gt;   &lt;li&gt;Policy Auditor&lt;/li&gt;          &lt;li&gt;SCAP Compliance Checker&lt;/li&gt; &lt;/ul&gt;
  # @param system_id **System Id**: The unique system record identifier.
  # @param scan_type **Scan Type**: The file scan type to upload
  # @param filename The file to upload. Can be a single file or a .zip file.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :is_baseline **Is Baseline**: Indicates that the imported file represents a baseline scan that includes all findings and results. Importing as a baseline scan, which assumes a common set of scan policies are used when conducting a scan, will replace a device&#39;s findings for a specific Benchmark. Applicable to ASR/ARF scans only. 
  # @return [DeviceScanResultsResponsePost]
  describe 'add_scan_results_by_system_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
