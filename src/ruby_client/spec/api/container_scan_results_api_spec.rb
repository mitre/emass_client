=begin
#Enterprise Mission Assurance Support Service (eMASS)

#The eMASS Representational State Transfer (REST) Application Programming Interface (API) enables users to perform assessments and complete actions associated with system records.  The eMASS API provides an interface for application to communicate eMASS Services. For information on how to register and use the eMASS API reference the [eMASS API Getting Started](https://mitre.github.io/emass_client/docs/eMASSGettingStarted.md).  Additional information about eMASS can be obtain by contacting the National Industrial Security Program (NISP). Points of Contact are: 

The version of the OpenAPI document: v3.22
Contact: disa.global.servicedesk.mbx.ma-ticket-request@mail.mil
Generated by: https://openapi-generator.tech
Generator version: 7.12.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for EmassClient::ContainerScanResultsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ContainerScanResultsApi' do
  before do
    # run before each test
    @api_instance = EmassClient::ContainerScanResultsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ContainerScanResultsApi' do
    it 'should create an instance of ContainerScanResultsApi' do
      expect(@api_instance).to be_instance_of(EmassClient::ContainerScanResultsApi)
    end
  end

  # unit tests for add_container_sans_by_system_id
  # Add one or many containers and their scan results
  # Add containers and their scan results in the assets module for a system &#x60;systemId&#x60;.  **Request Body Required Fields** - &#x60;containerId&#x60; - &#x60;containerName&#x60; - &#x60;time&#x60; - &#x60;benchmarks&#x60; (Object Array)   - &#x60;benchmark&#x60;   - &#x60;results&#x60; (Object Array)     - &#x60;ruleId&#x60;     - &#x60;status&#x60;     - &#x60;lastSeen&#x60;  **Example Request Body Required Fields** &#x60;&#x60;&#x60; [   {     \&quot;containerId\&quot;: \&quot;container identification\&quot;,     \&quot;containerName\&quot;: \&quot;container name\&quot;,     \&quot;time\&quot;: Datetime of scan/result (1648217219),     \&quot;benchmarks\&quot;: [       {         \&quot;benchmark\&quot;: \&quot;RHEL_8_STIG\&quot;,         \&quot;results\&quot;: [           {             \&quot;ruleId\&quot;: \&quot;rule identification\&quot;,             \&quot;status\&quot;: [Pass,Fail,Other,Not Reviewed,Not Checked,Not Applicable],             \&quot;lastSeen\&quot;: Unix date format (1648217219)           }, {             \&quot;ruleId\&quot;: \&quot;rule identification\&quot;,             \&quot;status\&quot;: [Pass,Fail,Other,Not Reviewed,Not Checked,Not Applicable],             \&quot;lastSeen\&quot;: Unix date format (1648217219)           }         ]       }     ]   } ] &#x60;&#x60;&#x60;&#x60;
  # @param system_id **System Id**: The unique system record identifier.
  # @param request_body Example request body for adding containers and their scan results
  # @param [Hash] opts the optional parameters
  # @return [ContainersResponsePost]
  describe 'add_container_sans_by_system_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_container_sans
  # Remove one or many containers in a system
  # Removes container scan resources and their scan results in the assets module for a system &#x60;systemId&#x60;
  # @param system_id **System Id**: The unique system record identifier.
  # @param container_resources_delete_body_inner Delete the given Container Scan Id
  # @param [Hash] opts the optional parameters
  # @return [ContainersResponseDelete]
  describe 'delete_container_sans test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
