=begin
#Enterprise Mission Assurance Support Service (eMASS)

#The eMASS Representational State Transfer (REST) Application Programming Interface (API) enables users to perform assessments and complete actions associated with system records.  The eMASS API provides an interface for application to communicate eMASS Services. For information on how to register and use the eMASS API reference the [eMASS API Getting Started](eMASSGettingStarted.md).  Additional information about eMASS can be obtain by contacting the National Industrial Security Program (NISP). Points of Contact are: 

The version of the OpenAPI document: v3.22
Contact: disa.global.servicedesk.mbx.ma-ticket-request@mail.mil
Generated by: https://openapi-generator.tech
Generator version: 7.12.0-SNAPSHOT

=end

require 'cgi'

module EmassClient
  class HardwareBaselineApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Add one or many hardware assets in a system
    # Adds assets to the Hardware Baseline for given `systemId`  **Request Body Required Fields** - `assetName`
    # @param system_id [Integer] **System Id**: The unique system record identifier.
    # @param hw_baseline_required_fields [Array<HwBaselineRequiredFields>] Example request body for adding hardware baseline assets to an existing System (systemId)
    # @param [Hash] opts the optional parameters
    # @return [HwBaselineResponsePostPut]
    def add_hw_baseline_assets(system_id, hw_baseline_required_fields, opts = {})
      data, _status_code, _headers = add_hw_baseline_assets_with_http_info(system_id, hw_baseline_required_fields, opts)
      data
    end

    # Add one or many hardware assets in a system
    # Adds assets to the Hardware Baseline for given &#x60;systemId&#x60;  **Request Body Required Fields** - &#x60;assetName&#x60;
    # @param system_id [Integer] **System Id**: The unique system record identifier.
    # @param hw_baseline_required_fields [Array<HwBaselineRequiredFields>] Example request body for adding hardware baseline assets to an existing System (systemId)
    # @param [Hash] opts the optional parameters
    # @return [Array<(HwBaselineResponsePostPut, Integer, Hash)>] HwBaselineResponsePostPut data, response status code and response headers
    def add_hw_baseline_assets_with_http_info(system_id, hw_baseline_required_fields, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: HardwareBaselineApi.add_hw_baseline_assets ...'
      end
      # verify the required parameter 'system_id' is set
      if @api_client.config.client_side_validation && system_id.nil?
        fail ArgumentError, "Missing the required parameter 'system_id' when calling HardwareBaselineApi.add_hw_baseline_assets"
      end
      # verify the required parameter 'hw_baseline_required_fields' is set
      if @api_client.config.client_side_validation && hw_baseline_required_fields.nil?
        fail ArgumentError, "Missing the required parameter 'hw_baseline_required_fields' when calling HardwareBaselineApi.add_hw_baseline_assets"
      end
      # resource path
      local_var_path = '/api/systems/{systemId}/hw-baseline'.sub('{' + 'systemId' + '}', CGI.escape(system_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(hw_baseline_required_fields)

      # return_type
      return_type = opts[:debug_return_type] || 'HwBaselineResponsePostPut'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"HardwareBaselineApi.add_hw_baseline_assets",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: HardwareBaselineApi#add_hw_baseline_assets\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete one or many hardware assets in a system
    # Remove (delete) one or multiple assets from a system Hardware Baseline
    # @param system_id [Integer] **System Id**: The unique system record identifier.
    # @param hw_baseline_request_delete_body_inner [Array<HwBaselineRequestDeleteBodyInner>] Example request body for deleting one or many Hardware Baseline assets
    # @param [Hash] opts the optional parameters
    # @return [HwBaselineResponseDelete]
    def delete_hw_baseline_assets(system_id, hw_baseline_request_delete_body_inner, opts = {})
      data, _status_code, _headers = delete_hw_baseline_assets_with_http_info(system_id, hw_baseline_request_delete_body_inner, opts)
      data
    end

    # Delete one or many hardware assets in a system
    # Remove (delete) one or multiple assets from a system Hardware Baseline
    # @param system_id [Integer] **System Id**: The unique system record identifier.
    # @param hw_baseline_request_delete_body_inner [Array<HwBaselineRequestDeleteBodyInner>] Example request body for deleting one or many Hardware Baseline assets
    # @param [Hash] opts the optional parameters
    # @return [Array<(HwBaselineResponseDelete, Integer, Hash)>] HwBaselineResponseDelete data, response status code and response headers
    def delete_hw_baseline_assets_with_http_info(system_id, hw_baseline_request_delete_body_inner, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: HardwareBaselineApi.delete_hw_baseline_assets ...'
      end
      # verify the required parameter 'system_id' is set
      if @api_client.config.client_side_validation && system_id.nil?
        fail ArgumentError, "Missing the required parameter 'system_id' when calling HardwareBaselineApi.delete_hw_baseline_assets"
      end
      # verify the required parameter 'hw_baseline_request_delete_body_inner' is set
      if @api_client.config.client_side_validation && hw_baseline_request_delete_body_inner.nil?
        fail ArgumentError, "Missing the required parameter 'hw_baseline_request_delete_body_inner' when calling HardwareBaselineApi.delete_hw_baseline_assets"
      end
      # resource path
      local_var_path = '/api/systems/{systemId}/hw-baseline'.sub('{' + 'systemId' + '}', CGI.escape(system_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(hw_baseline_request_delete_body_inner)

      # return_type
      return_type = opts[:debug_return_type] || 'HwBaselineResponseDelete'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"HardwareBaselineApi.delete_hw_baseline_assets",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: HardwareBaselineApi#delete_hw_baseline_assets\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get hardware baseline for a system
    # Returns the hardware baseline for a system matching the `systemId` path parameter
    # @param system_id [Integer] **System Id**: The unique system record identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [HwBaselineResponseGet]
    def get_system_hw_baseline(system_id, opts = {})
      data, _status_code, _headers = get_system_hw_baseline_with_http_info(system_id, opts)
      data
    end

    # Get hardware baseline for a system
    # Returns the hardware baseline for a system matching the &#x60;systemId&#x60; path parameter
    # @param system_id [Integer] **System Id**: The unique system record identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(HwBaselineResponseGet, Integer, Hash)>] HwBaselineResponseGet data, response status code and response headers
    def get_system_hw_baseline_with_http_info(system_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: HardwareBaselineApi.get_system_hw_baseline ...'
      end
      # verify the required parameter 'system_id' is set
      if @api_client.config.client_side_validation && system_id.nil?
        fail ArgumentError, "Missing the required parameter 'system_id' when calling HardwareBaselineApi.get_system_hw_baseline"
      end
      # resource path
      local_var_path = '/api/systems/{systemId}/hw-baseline'.sub('{' + 'systemId' + '}', CGI.escape(system_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'HwBaselineResponseGet'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"HardwareBaselineApi.get_system_hw_baseline",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: HardwareBaselineApi#get_system_hw_baseline\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update one or many hardware assets in a system
    # Updates assets in the Hardware Baseline for given `systemId`  **Request Body Required Fields** - `assetName` - `hardwareId`
    # @param system_id [Integer] **System Id**: The unique system record identifier.
    # @param hw_baseline_read_only_fields [Array<HwBaselineReadOnlyFields>] Example request body for updating hardware baseline assets to an existing System (systemId)
    # @param [Hash] opts the optional parameters
    # @return [HwBaselineResponsePostPut]
    def update_hw_baseline_assets(system_id, hw_baseline_read_only_fields, opts = {})
      data, _status_code, _headers = update_hw_baseline_assets_with_http_info(system_id, hw_baseline_read_only_fields, opts)
      data
    end

    # Update one or many hardware assets in a system
    # Updates assets in the Hardware Baseline for given &#x60;systemId&#x60;  **Request Body Required Fields** - &#x60;assetName&#x60; - &#x60;hardwareId&#x60;
    # @param system_id [Integer] **System Id**: The unique system record identifier.
    # @param hw_baseline_read_only_fields [Array<HwBaselineReadOnlyFields>] Example request body for updating hardware baseline assets to an existing System (systemId)
    # @param [Hash] opts the optional parameters
    # @return [Array<(HwBaselineResponsePostPut, Integer, Hash)>] HwBaselineResponsePostPut data, response status code and response headers
    def update_hw_baseline_assets_with_http_info(system_id, hw_baseline_read_only_fields, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: HardwareBaselineApi.update_hw_baseline_assets ...'
      end
      # verify the required parameter 'system_id' is set
      if @api_client.config.client_side_validation && system_id.nil?
        fail ArgumentError, "Missing the required parameter 'system_id' when calling HardwareBaselineApi.update_hw_baseline_assets"
      end
      # verify the required parameter 'hw_baseline_read_only_fields' is set
      if @api_client.config.client_side_validation && hw_baseline_read_only_fields.nil?
        fail ArgumentError, "Missing the required parameter 'hw_baseline_read_only_fields' when calling HardwareBaselineApi.update_hw_baseline_assets"
      end
      # resource path
      local_var_path = '/api/systems/{systemId}/hw-baseline'.sub('{' + 'systemId' + '}', CGI.escape(system_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(hw_baseline_read_only_fields)

      # return_type
      return_type = opts[:debug_return_type] || 'HwBaselineResponsePostPut'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"HardwareBaselineApi.update_hw_baseline_assets",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PUT, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: HardwareBaselineApi#update_hw_baseline_assets\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
