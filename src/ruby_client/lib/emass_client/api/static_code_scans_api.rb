=begin
#Enterprise Mission Assurance Support Service (eMASS)

#The eMASS Representational State Transfer (REST) Application Programming Interface (API) enables users to perform assessments and complete actions associated with system records.  The eMASS API provides an interface for application to communicate eMASS Services. For information on how to register and use the eMASS API reference the [eMASS API Getting Started](eMASSGettingStarted.md).  Additional information about eMASS can be obtain by contacting the National Industrial Security Program (NISP). Points of Contact are: 

The version of the OpenAPI document: v3.22
Contact: disa.global.servicedesk.mbx.ma-ticket-request@mail.mil
Generated by: https://openapi-generator.tech
Generator version: 7.12.0-SNAPSHOT

=end

require 'cgi'

module EmassClient
  class StaticCodeScansApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Upload static code scans or Clear static code scans
    # Upload or clear application scan findings into a system's `systemId` assets module.  **Request Body Required Fields** - `application` (Object)   - `applicationName`   - `version` - `applicationFindings` (Object Array)   - `codeCheckName`   - `count`   - `scanDate`   - `cweId`  **NOTE:** To clear an application's findings, use only the field `clearFindings` as the Request body and set it to true. Example: ``` [   {     \"application\": {       \"applicationName\": \"application name\",       \"version\": \"application version\"     },     \"applicationFindings\": [       { \"clearFindings\": true }     ]   } ] ```
    # @param system_id [Integer] **System Id**: The unique system record identifier.
    # @param static_code_request_post_body [StaticCodeRequestPostBody] Example request body for adding static code scans or Clear static code scans
    # @param [Hash] opts the optional parameters
    # @return [StaticCodeResponsePost]
    def add_static_code_scans_by_system_id(system_id, static_code_request_post_body, opts = {})
      data, _status_code, _headers = add_static_code_scans_by_system_id_with_http_info(system_id, static_code_request_post_body, opts)
      data
    end

    # Upload static code scans or Clear static code scans
    # Upload or clear application scan findings into a system&#39;s &#x60;systemId&#x60; assets module.  **Request Body Required Fields** - &#x60;application&#x60; (Object)   - &#x60;applicationName&#x60;   - &#x60;version&#x60; - &#x60;applicationFindings&#x60; (Object Array)   - &#x60;codeCheckName&#x60;   - &#x60;count&#x60;   - &#x60;scanDate&#x60;   - &#x60;cweId&#x60;  **NOTE:** To clear an application&#39;s findings, use only the field &#x60;clearFindings&#x60; as the Request body and set it to true. Example: &#x60;&#x60;&#x60; [   {     \&quot;application\&quot;: {       \&quot;applicationName\&quot;: \&quot;application name\&quot;,       \&quot;version\&quot;: \&quot;application version\&quot;     },     \&quot;applicationFindings\&quot;: [       { \&quot;clearFindings\&quot;: true }     ]   } ] &#x60;&#x60;&#x60;
    # @param system_id [Integer] **System Id**: The unique system record identifier.
    # @param static_code_request_post_body [StaticCodeRequestPostBody] Example request body for adding static code scans or Clear static code scans
    # @param [Hash] opts the optional parameters
    # @return [Array<(StaticCodeResponsePost, Integer, Hash)>] StaticCodeResponsePost data, response status code and response headers
    def add_static_code_scans_by_system_id_with_http_info(system_id, static_code_request_post_body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StaticCodeScansApi.add_static_code_scans_by_system_id ...'
      end
      # verify the required parameter 'system_id' is set
      if @api_client.config.client_side_validation && system_id.nil?
        fail ArgumentError, "Missing the required parameter 'system_id' when calling StaticCodeScansApi.add_static_code_scans_by_system_id"
      end
      # verify the required parameter 'static_code_request_post_body' is set
      if @api_client.config.client_side_validation && static_code_request_post_body.nil?
        fail ArgumentError, "Missing the required parameter 'static_code_request_post_body' when calling StaticCodeScansApi.add_static_code_scans_by_system_id"
      end
      # resource path
      local_var_path = '/api/systems/{systemId}/static-code-scans'.sub('{' + 'systemId' + '}', CGI.escape(system_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(static_code_request_post_body)

      # return_type
      return_type = opts[:debug_return_type] || 'StaticCodeResponsePost'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"StaticCodeScansApi.add_static_code_scans_by_system_id",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StaticCodeScansApi#add_static_code_scans_by_system_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
