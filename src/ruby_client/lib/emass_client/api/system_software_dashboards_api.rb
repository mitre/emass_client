=begin
#Enterprise Mission Assurance Support Service (eMASS)

#The eMASS Representational State Transfer (REST) Application Programming Interface (API) enables users to perform assessments and complete actions associated with system records.  The eMASS API provides an interface for application to communicate eMASS Services. For information on how to register and use the eMASS API reference the [eMASS API Getting Started](https://mitre.github.io/emass_client/docs/eMASSGettingStarted.md).  Additional information about eMASS can be obtain by contacting the National Industrial Security Program (NISP). Points of Contact are: 

The version of the OpenAPI document: v3.22
Contact: disa.global.servicedesk.mbx.ma-ticket-request@mail.mil
Generated by: https://openapi-generator.tech
Generator version: 7.12.0-SNAPSHOT

=end

require 'cgi'

module EmassClient
  class SystemSoftwareDashboardsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # System Software Details
    # Get system software details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [GetSystemStatusDetails200Response]
    def get_system_software_details(org_id, opts = {})
      data, _status_code, _headers = get_system_software_details_with_http_info(org_id, opts)
      data
    end

    # System Software Details
    # Get system software details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(GetSystemStatusDetails200Response, Integer, Hash)>] GetSystemStatusDetails200Response data, response status code and response headers
    def get_system_software_details_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SystemSoftwareDashboardsApi.get_system_software_details ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling SystemSoftwareDashboardsApi.get_system_software_details"
      end
      # resource path
      local_var_path = '/api/dashboards/system-software-details'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'GetSystemStatusDetails200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"SystemSoftwareDashboardsApi.get_system_software_details",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SystemSoftwareDashboardsApi#get_system_software_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System Software Summary
    # Get system software summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [GetSystemStatusDetails200Response]
    def get_system_software_summary(org_id, opts = {})
      data, _status_code, _headers = get_system_software_summary_with_http_info(org_id, opts)
      data
    end

    # System Software Summary
    # Get system software summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(GetSystemStatusDetails200Response, Integer, Hash)>] GetSystemStatusDetails200Response data, response status code and response headers
    def get_system_software_summary_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SystemSoftwareDashboardsApi.get_system_software_summary ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling SystemSoftwareDashboardsApi.get_system_software_summary"
      end
      # resource path
      local_var_path = '/api/dashboards/system-software-summary'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'GetSystemStatusDetails200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"SystemSoftwareDashboardsApi.get_system_software_summary",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SystemSoftwareDashboardsApi#get_system_software_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
