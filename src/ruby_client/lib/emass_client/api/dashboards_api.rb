=begin
#Enterprise Mission Assurance Support Service (eMASS)

#The Enterprise Mission Assurance Support Service (eMASS) Representational State Transfer (REST) Application Programming Interface (API) enables users to perform assessments and complete actions associated with system records.   <strong>Register External Application (that use the eMASS API)</strong></br> New users will need to [register](https://nisp.emass.apps.mil/Content/Help/jobaids/eMASS_OT_NewUser_Job_Aid.pdf) an API key with the eMASS development team prior to accessing the site for the first time. The eMASS REST API  requires a client certificate (SSL/TLS, DoD PKI only). Use the `Registration` endpoint to register the client certificate.</br></br>  Every call to the eMASS REST API will require the use of the agreed upon public key certificate and API key.  The API key must be provided in the request header for all endpoint calls (api-key). If the service receives an untrusted certificate or API key, a 401 error response code will be returned along with an error message.</br></br>  <strong>Available Request Headers</strong></br> <table>   <tr>     <th align=left>key</th>     <th align=left>Example Value</th>     <th align=left>Description</th>   </tr>   <tr>     <td>`api-key`</td>     <td>api-key-provided-by-emass</td>     <td>This API key must be provided in the request header for all endpoint calls</td>   </tr>   <tr>     <td>`user-uid`</td>     <td>USER.UID.KEY</td>     <td>This User unique identifier key must be provided in the request header for all PUT, POST, and DELETE endpoint calls</td>   </tr>   <tr>     <td></td><td></td>     <td>       Note: For DoD users this is the DoD ID Number (EIDIPI) on their DoD CAC     </td>   </tr> </table>  </br><strong>Approve API Client for Actionable Requests</strong></br> Users are required to log-in to eMASS and grant permissions for a client to update data within eMASS on their behalf. This is only required for actionable requests (PUT, POST, DELETE). The Registration Endpoint and all GET requests can be accessed without completing this process with the correct permissions. Please note that leaving a field parameter blank (for PUT/POST requests) has the potential to clear information in the active eMASS records.  To establish an account with eMASS and/or acquire an api-key/user-uid, contact one of the listed POC: 

The version of the OpenAPI document: v3.10
Contact: disa.meade.id.mbx.emass-tier-iii-support@mail.mil
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.0-SNAPSHOT

=end

require 'cgi'

module EmassClient
  class DashboardsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # System Artifacts Details
    # Get system Artifacts details information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_artifacts_details(org_id, opts = {})
      data, _status_code, _headers = get_system_artifacts_details_with_http_info(org_id, opts)
      data
    end

    # System Artifacts Details
    # Get system Artifacts details information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_artifacts_details_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_artifacts_details ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_artifacts_details"
      end
      # resource path
      local_var_path = '/api/dashboards/system-artifacts-details'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_artifacts_details",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_artifacts_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System Artifacts Summary
    # Get system Artifacts summary information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_artifacts_summary(org_id, opts = {})
      data, _status_code, _headers = get_system_artifacts_summary_with_http_info(org_id, opts)
      data
    end

    # System Artifacts Summary
    # Get system Artifacts summary information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_artifacts_summary_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_artifacts_summary ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_artifacts_summary"
      end
      # resource path
      local_var_path = '/api/dashboards/system-artifacts-summary'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_artifacts_summary",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_artifacts_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System Assessment Procedures Details
    # Get systems assessement procdures details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_assessment_procedures_details(org_id, opts = {})
      data, _status_code, _headers = get_system_assessment_procedures_details_with_http_info(org_id, opts)
      data
    end

    # System Assessment Procedures Details
    # Get systems assessement procdures details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_assessment_procedures_details_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_assessment_procedures_details ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_assessment_procedures_details"
      end
      # resource path
      local_var_path = '/api/dashboards/system-assessment-procedures-details'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_assessment_procedures_details",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_assessment_procedures_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System Associations Details
    # Get system associations details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_associations_details(org_id, opts = {})
      data, _status_code, _headers = get_system_associations_details_with_http_info(org_id, opts)
      data
    end

    # System Associations Details
    # Get system associations details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_associations_details_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_associations_details ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_associations_details"
      end
      # resource path
      local_var_path = '/api/dashboards/system-associations-details'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_associations_details",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_associations_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System CONMON Integration Status
    # Get system CONMON integration status dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_common_integration_status_summary(org_id, opts = {})
      data, _status_code, _headers = get_system_common_integration_status_summary_with_http_info(org_id, opts)
      data
    end

    # System CONMON Integration Status
    # Get system CONMON integration status dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_common_integration_status_summary_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_common_integration_status_summary ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_common_integration_status_summary"
      end
      # resource path
      local_var_path = '/api/dashboards/system-conmon-integration-status-summary'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_common_integration_status_summary",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_common_integration_status_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System Control Compliance Summary
    # Get systems control compliance summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_control_compliance_summary(org_id, opts = {})
      data, _status_code, _headers = get_system_control_compliance_summary_with_http_info(org_id, opts)
      data
    end

    # System Control Compliance Summary
    # Get systems control compliance summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_control_compliance_summary_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_control_compliance_summary ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_control_compliance_summary"
      end
      # resource path
      local_var_path = '/api/dashboards/system-control-compliance-summary'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_control_compliance_summary",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_control_compliance_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System Hardware Details
    # Get system hardware details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_hardware_details(org_id, opts = {})
      data, _status_code, _headers = get_system_hardware_details_with_http_info(org_id, opts)
      data
    end

    # System Hardware Details
    # Get system hardware details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_hardware_details_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_hardware_details ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_hardware_details"
      end
      # resource path
      local_var_path = '/api/dashboards/system-hardware-details'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_hardware_details",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_hardware_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System Hardware Summary
    # Get system hardware summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_hardware_summary(org_id, opts = {})
      data, _status_code, _headers = get_system_hardware_summary_with_http_info(org_id, opts)
      data
    end

    # System Hardware Summary
    # Get system hardware summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_hardware_summary_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_hardware_summary ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_hardware_summary"
      end
      # resource path
      local_var_path = '/api/dashboards/system-hardware-summary'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_hardware_summary",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_hardware_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System POA&M Details
    # Get system POA&Ms details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_poam_details(org_id, opts = {})
      data, _status_code, _headers = get_system_poam_details_with_http_info(org_id, opts)
      data
    end

    # System POA&amp;M Details
    # Get system POA&amp;Ms details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_poam_details_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_poam_details ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_poam_details"
      end
      # resource path
      local_var_path = '/api/dashboards/system-poam-details'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_poam_details",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_poam_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System POA&M Summary
    # Get systems POA&Ms summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_poam_summary(org_id, opts = {})
      data, _status_code, _headers = get_system_poam_summary_with_http_info(org_id, opts)
      data
    end

    # System POA&amp;M Summary
    # Get systems POA&amp;Ms summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_poam_summary_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_poam_summary ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_poam_summary"
      end
      # resource path
      local_var_path = '/api/dashboards/system-poam-summary'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_poam_summary",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_poam_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System Ports/Protocols Details
    # Get system ports and protocols details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_ports_protocols_details(org_id, opts = {})
      data, _status_code, _headers = get_system_ports_protocols_details_with_http_info(org_id, opts)
      data
    end

    # System Ports/Protocols Details
    # Get system ports and protocols details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_ports_protocols_details_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_ports_protocols_details ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_ports_protocols_details"
      end
      # resource path
      local_var_path = '/api/dashboards/system-ports-protocols-details'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_ports_protocols_details",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_ports_protocols_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System Ports/Protocols Summary
    # Get system ports and protocols summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_ports_protocols_summary(org_id, opts = {})
      data, _status_code, _headers = get_system_ports_protocols_summary_with_http_info(org_id, opts)
      data
    end

    # System Ports/Protocols Summary
    # Get system ports and protocols summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_ports_protocols_summary_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_ports_protocols_summary ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_ports_protocols_summary"
      end
      # resource path
      local_var_path = '/api/dashboards/system-ports-protocols-summary'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_ports_protocols_summary",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_ports_protocols_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System Privacy Summary
    # Get user system privacy summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_privacy_summary(org_id, opts = {})
      data, _status_code, _headers = get_system_privacy_summary_with_http_info(org_id, opts)
      data
    end

    # System Privacy Summary
    # Get user system privacy summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_privacy_summary_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_privacy_summary ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_privacy_summary"
      end
      # resource path
      local_var_path = '/api/dashboards/system-privacy-summary'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_privacy_summary",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_privacy_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System Control Compliance Details
    # Get systems security control details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_security_control_details(org_id, opts = {})
      data, _status_code, _headers = get_system_security_control_details_with_http_info(org_id, opts)
      data
    end

    # System Control Compliance Details
    # Get systems security control details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_security_control_details_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_security_control_details ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_security_control_details"
      end
      # resource path
      local_var_path = '/api/dashboards/system-security-controls-details'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_security_control_details",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_security_control_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System Sensor Hardware Details
    # Get system sensor hardware details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_sensor_hardware_details(org_id, opts = {})
      data, _status_code, _headers = get_system_sensor_hardware_details_with_http_info(org_id, opts)
      data
    end

    # System Sensor Hardware Details
    # Get system sensor hardware details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_sensor_hardware_details_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_sensor_hardware_details ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_sensor_hardware_details"
      end
      # resource path
      local_var_path = '/api/dashboards/system-sensor-hardware-details'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_sensor_hardware_details",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_sensor_hardware_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System Sensor Hardware Summary
    # Get system sensor hardware summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_sensor_hardware_summary(org_id, opts = {})
      data, _status_code, _headers = get_system_sensor_hardware_summary_with_http_info(org_id, opts)
      data
    end

    # System Sensor Hardware Summary
    # Get system sensor hardware summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_sensor_hardware_summary_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_sensor_hardware_summary ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_sensor_hardware_summary"
      end
      # resource path
      local_var_path = '/api/dashboards/system-sensor-hardware-summary'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_sensor_hardware_summary",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_sensor_hardware_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System Software Details
    # Get system software details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_software_details(org_id, opts = {})
      data, _status_code, _headers = get_system_software_details_with_http_info(org_id, opts)
      data
    end

    # System Software Details
    # Get system software details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_software_details_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_software_details ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_software_details"
      end
      # resource path
      local_var_path = '/api/dashboards/system-software-details'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_software_details",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_software_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System Software Summary
    # Get system software summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_software_summary(org_id, opts = {})
      data, _status_code, _headers = get_system_software_summary_with_http_info(org_id, opts)
      data
    end

    # System Software Summary
    # Get system software summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_software_summary_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_software_summary ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_software_summary"
      end
      # resource path
      local_var_path = '/api/dashboards/system-software-summary'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_software_summary",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_software_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # System Status Details
    # Get systems status detail dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_system_status_details(org_id, opts = {})
      data, _status_code, _headers = get_system_status_details_with_http_info(org_id, opts)
      data
    end

    # System Status Details
    # Get systems status detail dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_system_status_details_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_system_status_details ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_system_status_details"
      end
      # resource path
      local_var_path = '/api/dashboards/system-status-details'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_system_status_details",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_system_status_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # User System Assignments Details
    # Get user system assignments details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_user_system_assignments_details(org_id, opts = {})
      data, _status_code, _headers = get_user_system_assignments_details_with_http_info(org_id, opts)
      data
    end

    # User System Assignments Details
    # Get user system assignments details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_user_system_assignments_details_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_user_system_assignments_details ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_user_system_assignments_details"
      end
      # resource path
      local_var_path = '/api/dashboards/user-system-assignments-details'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_user_system_assignments_details",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_user_system_assignments_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # VA OMB FISMA SAOP Summary
    # Get VA OMB-FISMA SAOP summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_va_omb_fsma_saop_summary(org_id, opts = {})
      data, _status_code, _headers = get_va_omb_fsma_saop_summary_with_http_info(org_id, opts)
      data
    end

    # VA OMB FISMA SAOP Summary
    # Get VA OMB-FISMA SAOP summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_va_omb_fsma_saop_summary_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_va_omb_fsma_saop_summary ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_va_omb_fsma_saop_summary"
      end
      # resource path
      local_var_path = '/api/dashboards/va-omb-fisma-saop-summary'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_va_omb_fsma_saop_summary",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_va_omb_fsma_saop_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # VA System A2.0 Summary
    # Get VA system A2.0 summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_va_system_a2_summary(org_id, opts = {})
      data, _status_code, _headers = get_va_system_a2_summary_with_http_info(org_id, opts)
      data
    end

    # VA System A2.0 Summary
    # Get VA system A2.0 summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_va_system_a2_summary_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_va_system_a2_summary ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_va_system_a2_summary"
      end
      # resource path
      local_var_path = '/api/dashboards/va-system-a2-summary'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_va_system_a2_summary",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_va_system_a2_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # VA System A&A Summary
    # Get VA system A&A summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_va_system_aa_summary(org_id, opts = {})
      data, _status_code, _headers = get_va_system_aa_summary_with_http_info(org_id, opts)
      data
    end

    # VA System A&amp;A Summary
    # Get VA system A&amp;A summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_va_system_aa_summary_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_va_system_aa_summary ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_va_system_aa_summary"
      end
      # resource path
      local_var_path = '/api/dashboards/va-system-aa-summary'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_va_system_aa_summary",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_va_system_aa_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # VA System FISMA Inventory Crypto Summary
    # Get VA system FISMA inventory crypto summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_va_system_fisma_invetory_crypto_summary(org_id, opts = {})
      data, _status_code, _headers = get_va_system_fisma_invetory_crypto_summary_with_http_info(org_id, opts)
      data
    end

    # VA System FISMA Inventory Crypto Summary
    # Get VA system FISMA inventory crypto summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_va_system_fisma_invetory_crypto_summary_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_va_system_fisma_invetory_crypto_summary ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_va_system_fisma_invetory_crypto_summary"
      end
      # resource path
      local_var_path = '/api/dashboards/va-system-fisma-inventory-crypto-summary'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_va_system_fisma_invetory_crypto_summary",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_va_system_fisma_invetory_crypto_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # VA System FISMA Inventory Summary
    # Get VA system FISMA inventory summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_va_system_fisma_invetory_summary(org_id, opts = {})
      data, _status_code, _headers = get_va_system_fisma_invetory_summary_with_http_info(org_id, opts)
      data
    end

    # VA System FISMA Inventory Summary
    # Get VA system FISMA inventory summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_va_system_fisma_invetory_summary_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_va_system_fisma_invetory_summary ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_va_system_fisma_invetory_summary"
      end
      # resource path
      local_var_path = '/api/dashboards/va-system-fisma-inventory-summary'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_va_system_fisma_invetory_summary",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_va_system_fisma_invetory_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # VA System P.L. 109 Reporting Summary
    # Get VA system P.L. 109 reporting summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_va_system_pl109_reporting_summary(org_id, opts = {})
      data, _status_code, _headers = get_va_system_pl109_reporting_summary_with_http_info(org_id, opts)
      data
    end

    # VA System P.L. 109 Reporting Summary
    # Get VA system P.L. 109 reporting summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_va_system_pl109_reporting_summary_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_va_system_pl109_reporting_summary ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_va_system_pl109_reporting_summary"
      end
      # resource path
      local_var_path = '/api/dashboards/va-system-pl-109-reporting-summary'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_va_system_pl109_reporting_summary",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_va_system_pl109_reporting_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # VA System Threat Architecture Details
    # Get VA system threat architecture details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_va_system_threat_architecture_details(org_id, opts = {})
      data, _status_code, _headers = get_va_system_threat_architecture_details_with_http_info(org_id, opts)
      data
    end

    # VA System Threat Architecture Details
    # Get VA system threat architecture details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_va_system_threat_architecture_details_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_va_system_threat_architecture_details ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_va_system_threat_architecture_details"
      end
      # resource path
      local_var_path = '/api/dashboards/va-system-threat-architecture-details'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_va_system_threat_architecture_details",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_va_system_threat_architecture_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # VA System Threat Risks Summary
    # Get VA system threat risk summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_va_system_threat_risk_summary(org_id, opts = {})
      data, _status_code, _headers = get_va_system_threat_risk_summary_with_http_info(org_id, opts)
      data
    end

    # VA System Threat Risks Summary
    # Get VA system threat risk summary dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_va_system_threat_risk_summary_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_va_system_threat_risk_summary ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_va_system_threat_risk_summary"
      end
      # resource path
      local_var_path = '/api/dashboards/va-system-threat-risks-summary'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_va_system_threat_risk_summary",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_va_system_threat_risk_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # VA System Threat Sources Details
    # Get VA system threat source details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Object]
    def get_va_system_threat_source_details(org_id, opts = {})
      data, _status_code, _headers = get_va_system_threat_source_details_with_http_info(org_id, opts)
      data
    end

    # VA System Threat Sources Details
    # Get VA system threat source details dashboard information.
    # @param org_id [Integer] **Organization Id**: The unique organization identifier.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :excludeinherited **Exclude Inherited**: If no value is specified, the default returns false to include inherited data.  (default to false)
    # @option opts [Integer] :page_index **Page Index**: If no value is specified, the default returns results from the first page with an index of 0.  (default to 0)
    # @option opts [Integer] :page_size **Page Size**: If no value is specified, the default returns 20000 per page.  (default to 20000)
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def get_va_system_threat_source_details_with_http_info(org_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DashboardsApi.get_va_system_threat_source_details ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling DashboardsApi.get_va_system_threat_source_details"
      end
      # resource path
      local_var_path = '/api/dashboards/va-system-threat-sources-details'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orgId'] = org_id
      query_params[:'excludeinherited'] = opts[:'excludeinherited'] if !opts[:'excludeinherited'].nil?
      query_params[:'pageIndex'] = opts[:'page_index'] if !opts[:'page_index'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'mockType', 'userId']

      new_options = opts.merge(
        :operation => :"DashboardsApi.get_va_system_threat_source_details",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DashboardsApi#get_va_system_threat_source_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
